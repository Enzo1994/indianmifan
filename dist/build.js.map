{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap cfee3365f2ae0841496e","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/_vue@2.5.16@vue/dist/vue.esm.js","webpack:///./node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer.js","webpack:///src/App.vue","webpack:///./node_modules/_vuex@3.0.1@vuex/dist/vuex.esm.js","webpack:///components/player.vue","webpack:///./src/main.js","webpack:///./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js","webpack:///./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js","webpack:///./node_modules/_process@0.11.10@process/browser.js","webpack:///./src/App.vue","webpack:///./src/App.vue?e39a","webpack:///./src/App.vue?a0f7","webpack:///./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js","webpack:///./node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/listToStyles.js","webpack:///./components/player.vue","webpack:///./components/player.vue?7d6a","webpack:///./src/App.vue?e8e3","webpack:///./node_modules/_vue-router@3.0.1@vue-router/dist/vue-router.esm.js","webpack:///./node_modules/_less@3.0.4@less/dist/less.js","webpack:///./vuex/store.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","__webpack_exports__","global","setImmediate","isUndef","v","undefined","isDef","isTrue","isFalse","isPrimitive","value","isObject","obj","isPlainObject","_toString","isRegExp","isValidArrayIndex","val","parseFloat","String","Math","floor","isFinite","toString","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","length","toLowerCase","remove","arr","item","index","indexOf","splice","hasOwn","key","cached","fn","cache","polyfillBind","ctx","boundFn","a","arguments","apply","_length","nativeBind","bind","toArray","start","ret","Array","extend","to","_from","toObject","res","noop","b","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keys","keysB","looseIndexOf","once","called","isReserved","charCodeAt","def","writable","parsePath","path","bailRE","test","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","push","popTarget","pop","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","isStatic","isComment","fnContext","fnOptions","fnScopeId","isCloned","toggleObserving","shouldObserve","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","isServerRendering","isExtensible","_isVue","vmCount","defineReactive","customSetter","shallow","dep","getOwnPropertyDescriptor","setter","set","childOb","depend","dependArray","newVal","notify","max","del","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","mergeAssets","normalizeProps","options","props","camelize","type","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","update","mergeOptions","parent","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","id","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","hyphenate","stringIndex","getPropDefaultValue","prevShouldObserve","default","$options","_props","getType","match","isSameType","expectedTypes","len","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","config","errorHandler","logError","inBrowser","inWeex","console","error","flushCallbacks","pending","copies","callbacks","slice","withMacroTask","_withTask","useMacroTask","nextTick","cb","_resolve","macroTimerFunc","microTimerFunc","Promise","resolve","traverse","_traverse","seenObjects","clear","seen","isA","isFrozen","depId","has","add","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","event","normalizeEvent","passive","params","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","then","component","delay","setTimeout","timeout","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","render","callHook","updateComponent","_update","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","getData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","dirty","evaluate","handler","createWatcher","expOrFn","$watch","initProvide","provide","_provided","initInjections","result","resolveInject","forEach","Reflect","ownKeys","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","identity","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","_staticTrees","tree","staticRenderFns","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","_scopeId","_c","createElement","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","functional","nativeOn","installComponentHooks","createComponentInstanceForVnode","parentElm","refElm","_isComponent","_parentElm","_refElm","inlineTemplate","hooksToMerge","componentVNodeHooks","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","registerDeepBindings","force","style","class","initRender","parentData","initInternalComponent","constructor","vnodeComponentOptions","_componentTag","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue","_init","initUse","use","plugin","installedPlugins","_installedPlugins","args","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","document","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","join","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","baseSetAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","isIE9","__ieph","blocker","stopImmediatePropagation","removeEventListener","addEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","charAt","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","_","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","warn","right","middle","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","parseModel","lastIndexOf","index$1","expressionPos","expressionEndPos","eof","chr","next","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","CHECKBOX_RADIO_TOKEN","change","createOnceHandler","target$1","onceHandler","remove$2","add$1","once$$1","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","h","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokenValue","tokens","rawTokens","exec","@binding","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","substring","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","all","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","shouldDecodeNewlinesForHref","rest","createASTElement","makeAttrsMap","parse","template","closeElement","element","pre","inVPre","platformIsPreTag","inPre","postTransforms","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","root","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","parseFor","inMatch","forAliasRE","for","alias","stripParensRE","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","i$1","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","parseInt","keyCode","keyName","keyNames","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getShouldDecode","href","div","innerHTML","getOuterHTML","outerHTML","container","cloneNode","freeze","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","hasProto","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","uid","subs","addSub","sub","removeSub","addDep","raw","prototypeAccessors","defineProperties","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","MessageChannel","channel","port","port2","port1","onmessage","postMessage","uid$1","isRenderWatcher","deep","user","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","teardown","init","keepAlive","mountedNode","prepatch","$mount","insert","destroy","uid$3","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","patternTypes","KeepAlive","include","exclude","created","destroyed","mounted","ref$1","builtInComponents","configDef","util","delete","ssrContext","version","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","fullInvoke","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","directive","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","regexEscapeRE","open","close","klass$1","style$1","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","reduce","esc","tab","space","up","down","stop","prevent","self","ctrl","alt","meta","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","idToTemplate","mount","documentElement","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","__WEBPACK_IMPORTED_MODULE_0_vuex__","devtoolPlugin","store","devtoolHook","_devtoolHook","targetState","replaceState","subscribe","mutation","forEachValue","isPromise","targetModule","newModule","getChild","genericSubscribe","resetStore","hot","_actions","_mutations","_wrappedGetters","_modulesNamespaceMap","installModule","_modules","resetStoreVM","oldVm","_vm","getters","wrappedGetters","$$state","strict","enableStrictMode","_withCommit","rootState","isRoot","getNamespace","namespaced","parentState","getNestedState","moduleName","local","makeLocalContext","forEachMutation","registerMutation","forEachAction","action","registerAction","forEachGetter","registerGetter","forEachChild","noNamespace","dispatch","_type","_payload","_options","unifyObjectStyle","payload","commit","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","catch","rawGetter","_Vue","applyMixin","normalizeMap","normalizeNamespace","getModuleByNamespace","helper","mapGetters","mapActions","vuexInit","$store","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","addChild","actions","mutations","ModuleCollection","rawRootModule","register","rawChildModule","unregister","Store","plugins","_committing","_actionSubscribers","_subscribers","_watcherVM","entry","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","states","vuex","mapMutations","createNamespacedHelpers","index_esm","childMsg","sendToParent","Event","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__App_vue__","__WEBPACK_IMPORTED_MODULE_2_vue_router__","__WEBPACK_IMPORTED_MODULE_3_less__","__WEBPACK_IMPORTED_MODULE_4__vuex_store__","Timeout","clearFn","_id","_clearFn","scope","clearTimeout","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","process","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","getPrototypeOf","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","attachEvent","script","onreadystatechange","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","array","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","injectStyle","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_4280e696_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","content","locals","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","parts","addStyle","createStyleElement","styleElement","head","ssrIdKey","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","media","styleSheet","replaceText","cssNode","ssrId","hasDocument","DEBUG","listToStyles","getElementsByTagName","parentId","_isProduction","newList","mayRemove","textStore","replacement","newStyles","part","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_player_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_5dd21e8a_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_player_vue__","_h","parentMsg","click","esExports","count","oddCount","increment","clickOdd","clickAsync","message","isError","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","stringifyQuery","encode","val2","x","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","matched","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","findAnchor","installed","registerInstance","callVal","registerRouteInstance","_routerRoot","_router","history","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","offset","prefix","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","substr","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","TypeError","isarray","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","pathToRegexp_1","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","instances","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","position","getScrollPosition","shouldScroll","scrollToPosition","positionStore","pageXOffset","y","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","genKey","Time","now","toFixed","_key","pushState","url","runQueue","step","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","flatten","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","records","reverse","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","getUrl","pushHash","supportsPushState","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","propsToPass","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","ua","Date","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","iterator","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","initLocation","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","supportsScroll","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","require","f","r","t","u","1","addDataAttr","currentScript","isFileProtocol","protocol","async","fileAsync","hostname","dumpLineNumbers","useFileCache","javascriptEnabled","inlineJavaScript","./browser","./utils","2","resolveOrReject","filename","less","LESS_PLUGINS","registerStylesheetsImmediately","pageLoadFinished","refresh","../less/default-options","./add-default-options","./index","promise/polyfill","3","utils","createCSS","sheet","extractId","oldStyleNode","getElementById","keepOldStyleNode","styleNode","nodeValue","nextEl","scripts","4","logger","localStorage","setCSS","lastModified","modifyVars","setItem","getCSS","webInfo","getItem","timestamp","vars","valueOf","5","errorHTML","rootHref","timer","elem","filenameNoPath","className","errorline","classname","extract","line","column","logLevel","replaceChild","removeErrorHTML","removeErrorConsole","removeError","errorReporting","errorConsole","6","AbstractFileManager","fileCache","FileManager","alwaysMakePathsAbsolute","laterPath","extractUrlParts","doXHR","errback","handleResponse","xhr","status","responseText","getResponseHeader","XMLHttpRequest","overrideMimeType","debug","setRequestHeader","send","readyState","supports","currentDirectory","environment","clearFileCache","loadFile","isPathAbsolute","ext","tryAppendExtension","hrefParts","lessText","contents","mime","../less/environment/abstract-file-manager.js","7","imageSize","functionRegistry","imageFunctions","image-size","filePathNode","image-width","image-height","addMultiple","./../less/functions/function-registry","8","func","thisArg","curryArgs","loadStyles","typePattern","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","loadedFile","newFileInfo","fileManager","getPath","rootFilename","relativeUrls","entryPath","rootpath","rootFileInfo","log","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","addFileManager","PluginLoader","functions","unwatch","links","rel","registerStylesheets","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","../less","./cache","./error-reporting","./file-manager","./image-size","./log-listener","./plugin-loader","9","loggers","10","AbstractPluginLoader","loadPlugin","fulfill","../less/environment/abstract-plugin-loader.js","11","opt","dataset","12","copyFromOriginal","destination","propertiesToCopy","parseCopyProperties","Parse","paths","evalCopyProperties","Eval","frames","importantScope","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","strictMath","isPathRelative","13","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","14","colors","unitConversions","./colors","./unit-conversions","15","cm","mm","in","px","pt","pc","ms","angle","rad","PI","deg","grad","turn","16","depends","compress","lint","color","strictImports","insecure","ieCompat","strictUnits","globalVars","urlArgs","17","abstractFileManager","tryAppendLessExtension","supportsSync","pathDiff","baseUrl","urlDirectories","baseUrlDirectories","urlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","fileUrl","18","LessError","evalPlugin","imports","pluginOptions","fileInfo","loader","registry","pluginObj","localModule","pluginManager","shortname","trySetOptions","registerPlugin","validatePlugin","addPlugin","getLocalFunctions","setOptions","minVersion","compareVersion","versionToString","aVersion","bVersion","versionString","printUsage","../functions/function-registry","../less-error","19","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","propName","environmentFunc","getFileManager","getFileManagers","clearFileManagers","../logger","20","Anonymous","Keyword","boolean","True","False","trueValue","falseValue","../tree/anonymous","../tree/keyword","./function-registry","21","colorBlend","color1","color2","cs","ar","cr","ab","alpha","as","rgb","Color","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","../tree/color","22","clamp","min","hsla","colorFunctions","Dimension","unit","scaled","size","Quoted","rgba","hsl","hue","m1","m2","hsv","hsva","vs","perm","toHSL","saturation","lightness","hsvhue","toHSV","hsvsaturation","hsvvalue","luma","luminance","saturate","amount","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","toARGB","fromKeyword","tint","shade","../tree/dimension","../tree/quoted","23","URL","functionThis","currentFileInfo","mimetypeNode","mimetype","filePath","fragmentStart","fragment","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","uri","../tree/url","../utils","24","defaultFunc","value_","error_","reset","25","Expression","functionCaller","subNodes","../tree/expression","26","makeRegistry","inherit","27","./boolean","./color","./color-blending","./data-uri","./default","./function-caller","./math","./number","./string","./svg","./types","28","MathHelper","_math","unify","29","mathHelper","mathFunctions","ceil","sin","cos","atan","asin","acos","round","fraction","num","./math-helper.js","30","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","values","toCSS","convert","convertTo","pi","mod","pow","percentage","31","JavaScript","evaluated","escape","string","quote","%","../tree/javascript","32","direction","throwArgumentDescriptor","stops","gradientDirectionSvg","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","toRGB","33","DetachedRuleset","Operation","isa","Type","isunit","getItemsFromNode","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","get-unit","../tree/detached-ruleset","../tree/operation","34","Parser","ImportManager","contentsIgnoredChars","files","importOptions","importManager","pluginLoader","Loader","fileParsedFunc","importedEqualsRoot","rules","inline","promise","loadFileCallback","resolvedFilename","newEnv","processImports","reference","isPlugin","pluginArgs","./contexts","./less-error","./parser/parser","35","SourceMapOutput","SourceMapBuilder","ParseTree","Environment","visitors","transformTree","PluginManager","ctor","api","./data","./environment/abstract-file-manager","./environment/abstract-plugin-loader","./environment/environment","./functions","./import-manager","./logger","./parse","./parse-tree","./plugin-manager","./render","./source-map-builder","./source-map-output","./transform-tree","./tree","./visitors","36","fileContentMap","currentFilename","input","loc","col","callLine","lines","found","callExtract","F","stylize","errorTxt","37","_fireEvent","listener","_listeners","logFunction","38","evaldRoot","sourceMapBuilder","toCSSOptions","numPrecision","postProcessors","getPostProcessors","getExternalSourceMap","file","39","PromiseConstructor","defaults","output","reUsePluginManager","evalResult","fileContent","40","fail","emitChunk","chunkerCurrentIndex","emitFrom","chunks","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","currentChunkStartIndex","cc","cc2","level","parenLevel","fromCharCode","41","chunker","skipWhitespace","nextChar","oldi","parserInput","oldj","curr","currentPos","endIndex","mem","inp","autoCommentAbsorb","CHARCODE_FORWARD_SLASH","isLineComment","nextNewLine","commentStore","nextStarSlash","CHARCODE_SPACE","CHARCODE_LF","CHARCODE_TAB","CHARCODE_CR","finished","furthest","furthestPossibleErrorMessage","saveStack","save","restore","possibleErrorMessage","forget","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","peek","peekChar","currentChar","getInput","peekNotNumeric","chunkInput","failFunction","isFinished","furthestReachedEnd","furthestChar","./chunker","42","getParserInput","parsers","expectChar","getDebugInfo","lineNumber","fileName","parseNode","parseList","currentIndex","returnNodes","parser","_index","_fileInfo","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","banner","Node","Ruleset","primary","rootNode","firstRoot","endInfo","finish","ImportVisitor","extendRule","declaration","ruleset","variableCall","entities","atrule","foundSemiColon","quoted","isEscaped","keyword","k","customFuncCall","ieAlpha","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","detachedRuleset","Value","literal","dimension","unicodeDescriptor","entity","variable","Variable","Property","variableCurly","propertyCurly","colorCandidateString","colorKeyword","ud","javascript","js","VariableCall","isRule","elements","extendList","elemIndex","isCall","expressionContainsNamed","nameLoop","expand","variadic","expressions","throwAwayComments","cond","argInfo","combinator","slashedCombinator","isLess","allExtends","when","op","blockRuleset","selectors","debugInfo","merge","isVariable","startOfRule","ruleProperty","anonymousValue","import","features","mediaFeatures","optionName","importOption","mediaFeature","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","isRooted","addition","parens","multiplication","operation","isSpaced","operand","parensInOp","logical","conditionAnd","me","negatedCondition","parenthesisCondition","negate","atomicCondition","delim","chunk","simpleProperty","../tree","../visitors","./parser-input","43","pm","pluginCache","PluginManagerFactory","newFactory","addPlugins","addVisitor","visitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getVisitors","first","44","45","sourceMapOutput","contentsIgnoredCharsMap","contentsMap","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","sourceMapInputFilename","normalizeFilename","removeBasepath","getCSSAppendage","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","46","_css","_rootNode","_contentsMap","_contentsIgnoredCharsMap","_sourceMapFilename","_outputFilename","_sourceMapBasepath","_sourceMapRootpath","_outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","mapLines","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","isEmpty","setSourceContent","genCSS","sourceMapContent","toJSON","47","variables","evalEnv","Declaration","visitorIterator","JoinSelectorVisitor","MarkVisibleSelectorsVisitor","ExtendVisitor","ToCSSVisitor","isPreEvalVisitor","48","rulesetLike","visibilityInfo","allowRoot","copyVisibilityInfo","compare","other","isRulesetLike","nodeVisible","./node","49","Assignment","accept","visit","50","Selector","AtRule","createEmptySelectors","allowImports","setParent","visitArray","isCharset","getIndex","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","mediaBlocks","find","rulesets","ruleCnt","tabLevel","tabSetStr","tabRuleStr","./anonymous","./ruleset","./selector","51","Attribute","52","FunctionCaller","Call","currentMathContext","funcCaller","columnNumber","../functions/function-caller","53","toHex","originalForm","doNotCompress","fround","splitcolor","operate","_operate","../data/colors","54","Combinator","emptyOrWhitespace","_noSpaceCombinators",""," ","|","spaceOrEmpty","55","Comment","isSilent","isCompressed","./debug-info","56","Condition","lvalue","rvalue","57","lineSeparator","asComment","asMediaQuery","filenameWithProtocol","58","evalName","lastRule","evaldValue","strictMathBypass","importantResult","makeImportant","./keyword","./value","59","evalFirst","copyArray","callEval","../contexts","60","Unit","toColor","isSingular","strValue","isLength","numerator","denominator","backupUnit","usedUnits","cancel","numericCompare","conversions","groupName","targetUnit","applyUnit","derivedConversions","atomicUnit","../data/unit-conversions","./unit","61","Paren","Element","firstSelector","./combinator","./paren","62","returnValue","doubleParen","./comment","63","Extend","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","64","Media","Import","pathValue","isVariableImport","containsVariables","evalForImport","evalPath","doEval","blocksVisibility","addVisibilityBlock","skip","importedFilename","newImport","evalImports","./media","./quoted","./url","65","Definition","UnicodeDescriptor","Negative","./assignment","./atrule","./attribute","./call","./condition","./declaration","./detached-ruleset","./dimension","./element","./expression","./extend","./import","./javascript","./mixin-call","./mixin-definition","./negative","./operation","./property","./unicode-descriptor","./variable","./variable-call","66","JsEvalNode","evaluateJavaScript","./js-eval-node","67","that","evalContext","jsify","toJS","68","69","evalTop","evalNested","multiMedia","permute","bubbleSelectors","70","MixinDefinition","MixinCall","mixinPath","argValue","isRecursive","isOneFound","candidate","defaultResult","originalRuleset","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","rule","matchArgs","matchCondition","format","newRules","evalCall","_setVisibilityToReplacement","../functions/default","71","arity","_lookups","optionalParameters","evalParams","mixinEnv","evaldArguments","varargs","isNamedFound","argIndex","frame","argsLength","prependRule","resetCache","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","72","73","visibilityBlocks","parsed","strs","precision","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","74","operands","75","76","mergeRules","_mergeRules","evaluating","vArr","77","iterativeReplace","regexp","replacementFnc","evaluatedValue","variableReplacement","propertyReplacement","78","globalFunctionRegistry","_variables","_properties","isRuleset","selCnt","thisSelectors","hasOnePassingSelector","evaldCondition","subRule","ctxFrames","ctxSelectors","rsRules","mediaBlockCount","isJustParentSelector","importRules","lastSelector","_rulesets","properties","decl","parseValue","toParse","transformDeclaration","filtRules","foundMixins","charsetRuleNodes","ruleNodes","sep","charsetNodeIndex","importNodeIndex","pathSubCnt","pathCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","createDerived","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","nestedSelector","maybeSelector","replaced","nestedPaths","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newSelector","newPaths","concatenated","79","getElements","mixinElements_","mediaEmpty","els","sels","olen","mixinElements","getIsOutput","80","81","returnStr","unitString","mapUnit","counter","82","isEvald","83","84","85","86","inputStream","copy","obj1","obj2","_defaults","87","Visitor","ExtendFinderVisitor","_visitor","allExtendsStack","visitDeclaration","declNode","visitArgs","visitDeeper","visitMixinDefinition","mixinDefinitionNode","visitRuleset","rulesetNode","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","visitAtRule","atRuleNode","visitAtRuleOut","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","initialCombinator","isElementValuesEqual","endPathIndex","endPathElementIndex","elementValue1","elementValue2","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","./visitor","88","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","89","importer","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","isReplacing","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","importMultiple","onImported","sequencedOnImported","importedAtRoot","importVisitor","isOptional","duplicateImport","oldContext","visitDeclarationOut","visitMixinDefinitionOut","./import-sequencer","90","./extend-visitor","./import-visitor","./join-selector-visitor","./set-tree-visibility-visitor","./to-css-visitor","91","92","SetTreeVisibilityVisitor","visible","cnt","93","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","nodeRules","charset","checkValidNodes","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groupsArr","comma","94","_noop","indexNodeTypes","ticker","typeIndex","_visitArgs","_hasIndexed","implementation","_implementation","_visitFnCache","nodeTypeIndex","fnName","visitFnCache","impl","aryIndx","outAryIndex","funcOut","nonReplacing","out","evald","nestedCnt","nestedItem","95","throwFirstError","pendingErrors","asap","rawTask","freeTasks","RawTask","rawAsap","requestErrorThrow","makeRequestCallFromTimer","onerror","./raw","96","requestFlush","flush","capacity","scan","newLength","handleTimer","timeoutHandle","intervalHandle","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","characterData","97","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_40","_65","_55","_72","doResolve","safeThen","onFulfilled","onRejected","Handler","deferred","_37","handleResolved","newValue","finale","_87","done","_61","asap/raw","98","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","race","./core.js","99","100","./lib/core.js","./lib/es6-extensions.js","./polyfill-done.js","__WEBPACK_IMPORTED_MODULE_1_vuex__","_ref","_ref2","_ref3"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (false\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (false\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    false\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (false) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (false) {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (false) {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (false) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (false) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (false) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        false\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (false) {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0), __webpack_require__(7).setImmediate))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_player_vue__ = __webpack_require__(16);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'app',\n  computed: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"c\" /* mapGetters */])(['count', 'oddCount']),\n  methods: Object(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"b\" /* mapActions */])(['increment', 'clickOdd', 'clickAsync'])\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Store */\n/* unused harmony export install */\n/* unused harmony export mapState */\n/* unused harmony export mapMutations */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mapGetters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapActions; });\n/* unused harmony export createNamespacedHelpers */\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (false) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (false) {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (false) {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (false) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (false) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    false\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (false) {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (false) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (false) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (false) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (false) {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (false) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (false) {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (false) {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (false) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (false) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index_esm);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"player\",\n  props: [\"parentMsg\"],\n  data: function data() {\n    return {\n      childMsg: \"我是子组件传上来的数据1\"\n    };\n  },\n  methods: {\n    sendToParent: function sendToParent() {\n      Event.$emit(\"child-event\", this.childMsg);\n    }\n  }\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App_vue__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_router__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_less__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_less__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__vuex_store__ = __webpack_require__(21);\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_2_vue_router__[\"a\" /* default */]);\n\nwindow.Event = new __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]();\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n\n  el: '#app',\n  store: __WEBPACK_IMPORTED_MODULE_4__vuex_store__[\"a\" /* default */],\n  render: function render(h) {\n    return h(__WEBPACK_IMPORTED_MODULE_1__App_vue__[\"a\" /* default */]);\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(8);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(9)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(3);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_4280e696_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(18);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(11)\n}\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_4280e696_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(12);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(14)(\"78083572\", content, true, {});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(13)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@media only screen and (min-width:960px){.main{width:100%;height:36px;background-color:red}.main .inner{width:50%;height:36px}}@media only screen and (min-width:641px) and (max-width:960px){.main{width:100%;height:36px;background-color:aqua}}@media only screen and (max-width:640px){.main{width:100%;height:36px;background-color:silver}}#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center;color:#2c3e50;margin-top:60px}h1,h2{font-weight:400}ul{list-style-type:none;padding:0}li{display:inline-block;margin:0 10px}a{color:#42b983}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(15)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_player_vue__ = __webpack_require__(5);\n/* unused harmony reexport namespace */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_5dd21e8a_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_player_vue__ = __webpack_require__(17);\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_script_index_0_player_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_2_vue_loader_lib_template_compiler_index_id_data_v_5dd21e8a_hasScoped_false_buble_transforms_node_modules_vue_loader_13_7_2_vue_loader_lib_selector_type_template_index_0_player_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* unused harmony default export */ var _unused_webpack_default_export = (Component.exports);\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    我是子组件player\"+_vm._s(_vm.parentMsg)+\"\\n    \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"传值给父组件\"},on:{\"click\":_vm.sendToParent}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('p',[_vm._v(_vm._s(_vm.count))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.oddCount))]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"增加\"},on:{\"click\":_vm.increment}}),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"偶数才能点击\"},on:{\"click\":_vm.clickOdd}}),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"异步点击\"},on:{\"click\":_vm.clickAsync}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"inner\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (false) {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var require;var require;/*!\n * Less - Leaner CSS v3.0.4\n * http://lesscss.org\n *\n * Copyright (c) 2009-2018, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n */\n\n /** * @license Apache-2.0\n */\n\n(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.less = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nvar addDataAttr = require(\"./utils\").addDataAttr,\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, options) {\n\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n        options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    }\n\n    // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false;\n\n    // Interval between watch polls\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n\n    options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n        window.location.hostname == '0.0.0.0'   ||\n        window.location.hostname == 'localhost' ||\n        (window.location.port &&\n            window.location.port.length > 0)      ||\n        options.isFileProtocol                   ? 'development'\n        : 'production');\n\n    var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n    if (dumpLineNumbers) {\n        options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n        options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n        options.onReady = true;\n    }\n\n    options.javascriptEnabled = (options.javascriptEnabled || options.inlineJavaScript) ? true : false;\n\n};\n\n},{\"./browser\":3,\"./utils\":11}],2:[function(require,module,exports){\n/**\n * Kicks off less and compiles any stylesheets\n * used in the browser distributed version of less\n * to kick-start less using the browser api\n */\n/* global window, document */\n\n// TODO - consider switching this out for a recommendation for this polyfill?\n// <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js\"></script>\n// Browsers have good Promise support\nrequire(\"promise/polyfill\");\n\nvar options = require('../less/default-options')();\n\nif (window.less) {\n    for (key in window.less) {\n        if (window.less.hasOwnProperty(key)) {\n            options[key] = window.less[key];\n        }\n    }\n}\nrequire(\"./add-default-options\")(window, options);\n\noptions.plugins = options.plugins || [];\n\nif (window.LESS_PLUGINS) {\n    options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n}\n\nvar less = module.exports = require(\"./index\")(window, options);\n\nwindow.less = less;\n\nvar css, head, style;\n\n// Always restore page visibility\nfunction resolveOrReject(data) {\n    if (data.filename) {\n        console.warn(data);\n    }\n    if (!options.async) {\n        head.removeChild(style);\n    }\n}\n\nif (options.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n        less.watch();\n    }\n    // Simulate synchronous stylesheet loading by hiding page rendering\n    if (!options.async) {\n        css = 'body { display: none !important }';\n        head = document.head || document.getElementsByTagName('head')[0];\n        style = document.createElement('style');\n\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n    }\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n}\n\n},{\"../less/default-options\":16,\"./add-default-options\":1,\"./index\":8,\"promise/polyfill\":100}],3:[function(require,module,exports){\nvar utils = require(\"./utils\");\nmodule.exports = {\n    createCSS: function (document, styles, sheet) {\n        // Strip the query-string\n        var href = sheet.href || '';\n\n        // If there is no title set, use the filename, minus the extension\n        var id = 'less:' + (sheet.title || utils.extractId(href));\n\n        // If this has already been inserted into the DOM, we may need to replace it\n        var oldStyleNode = document.getElementById(id);\n        var keepOldStyleNode = false;\n\n        // Create a new stylesheet node for insertion or (if necessary) replacement\n        var styleNode = document.createElement('style');\n        styleNode.setAttribute('type', 'text/css');\n        if (sheet.media) {\n            styleNode.setAttribute('media', sheet.media);\n        }\n        styleNode.id = id;\n\n        if (!styleNode.styleSheet) {\n            styleNode.appendChild(document.createTextNode(styles));\n\n            // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n            keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n        }\n\n        var head = document.getElementsByTagName('head')[0];\n\n        // If there is no oldStyleNode, just append; otherwise, only append if we need\n        // to replace oldStyleNode with an updated stylesheet\n        if (oldStyleNode === null || keepOldStyleNode === false) {\n            var nextEl = sheet && sheet.nextSibling || null;\n            if (nextEl) {\n                nextEl.parentNode.insertBefore(styleNode, nextEl);\n            } else {\n                head.appendChild(styleNode);\n            }\n        }\n        if (oldStyleNode && keepOldStyleNode === false) {\n            oldStyleNode.parentNode.removeChild(oldStyleNode);\n        }\n\n        // For IE.\n        // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n        // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n        if (styleNode.styleSheet) {\n            try {\n                styleNode.styleSheet.cssText = styles;\n            } catch (e) {\n                throw new Error(\"Couldn't reassign styleSheet.cssText.\");\n            }\n        }\n    },\n    currentScript: function(window) {\n        var document = window.document;\n        return document.currentScript || (function() {\n            var scripts = document.getElementsByTagName(\"script\");\n            return scripts[scripts.length - 1];\n        })();\n    }\n};\n\n},{\"./utils\":11}],4:[function(require,module,exports){\n// Cache system is a bit outdated and could do with work\n\nmodule.exports = function(window, options, logger) {\n    var cache = null;\n    if (options.env !== 'development') {\n        try {\n            cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n        } catch (_) {}\n    }\n    return {\n        setCSS: function(path, lastModified, modifyVars, styles) {\n            if (cache) {\n                logger.info('saving ' + path + ' to cache.');\n                try {\n                    cache.setItem(path, styles);\n                    cache.setItem(path + ':timestamp', lastModified);\n                    if (modifyVars) {\n                        cache.setItem(path + ':vars', JSON.stringify(modifyVars));\n                    }\n                } catch (e) {\n                    // TODO - could do with adding more robust error handling\n                    logger.error('failed to save \"' + path + '\" to local storage for caching.');\n                }\n            }\n        },\n        getCSS: function(path, webInfo, modifyVars) {\n            var css       = cache && cache.getItem(path),\n                timestamp = cache && cache.getItem(path + ':timestamp'),\n                vars      = cache && cache.getItem(path + ':vars');\n\n            modifyVars = modifyVars || {};\n\n            if (timestamp && webInfo.lastModified &&\n                (new Date(webInfo.lastModified).valueOf() ===\n                    new Date(timestamp).valueOf()) &&\n                (!modifyVars && !vars || JSON.stringify(modifyVars) === vars)) {\n                // Use local copy\n                return css;\n            }\n        }\n    };\n};\n\n},{}],5:[function(require,module,exports){\nvar utils = require(\"./utils\"),\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, less, options) {\n\n    function errorHTML(e, rootHref) {\n        var id = 'less-error-message:' + utils.extractId(rootHref || \"\");\n        var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n        var elem = window.document.createElement('div'), timer, content, errors = [];\n        var filename = e.filename || rootHref;\n        var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n\n        elem.id        = id;\n        elem.className = \"less-error-message\";\n\n        content = '<h3>'  + (e.type || \"Syntax\") + \"Error: \" + (e.message || 'There is an error in your .less file') +\n            '</h3>' + '<p>in <a href=\"' + filename   + '\">' + filenameNoPath + \"</a> \";\n\n        var errorline = function (e, i, classname) {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += 'on line ' + e.line + ', column ' + (e.column + 1) + ':</p>' +\n                '<ul>' + errors.join('') + '</ul>';\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += '<br/>Stack Trace</br />' + e.stack.split('\\n').slice(1).join('<br/>');\n        }\n        elem.innerHTML = content;\n\n        // CSS for error messages\n        browser.createCSS(window.document, [\n            '.less-error-message ul, .less-error-message li {',\n            'list-style-type: none;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message label {',\n            'font-size: 12px;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'color: #cc7777;',\n            '}',\n            '.less-error-message pre {',\n            'color: #dd6666;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            'display: inline-block;',\n            '}',\n            '.less-error-message pre.line {',\n            'color: #ff0000;',\n            '}',\n            '.less-error-message h3 {',\n            'font-size: 20px;',\n            'font-weight: bold;',\n            'padding: 15px 0 5px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message a {',\n            'color: #10a',\n            '}',\n            '.less-error-message .error {',\n            'color: red;',\n            'font-weight: bold;',\n            'padding-bottom: 2px;',\n            'border-bottom: 1px dashed red;',\n            '}'\n        ].join('\\n'), { title: 'error-message' });\n\n        elem.style.cssText = [\n            \"font-family: Arial, sans-serif\",\n            \"border: 1px solid #e00\",\n            \"background-color: #eee\",\n            \"border-radius: 5px\",\n            \"-webkit-border-radius: 5px\",\n            \"-moz-border-radius: 5px\",\n            \"color: #e00\",\n            \"padding: 15px\",\n            \"margin-bottom: 15px\"\n        ].join(';');\n\n        if (options.env === 'development') {\n            timer = setInterval(function () {\n                var document = window.document,\n                    body = document.body;\n                if (body) {\n                    if (document.getElementById(id)) {\n                        body.replaceChild(elem, document.getElementById(id));\n                    } else {\n                        body.insertBefore(elem, body.firstChild);\n                    }\n                    clearInterval(timer);\n                }\n            }, 10);\n        }\n    }\n\n    function removeErrorHTML(path) {\n        var node = window.document.getElementById('less-error-message:' + utils.extractId(path));\n        if (node) {\n            node.parentNode.removeChild(node);\n        }\n    }\n\n    function removeErrorConsole(path) {\n        // no action\n    }\n\n    function removeError(path) {\n        if (!options.errorReporting || options.errorReporting === \"html\") {\n            removeErrorHTML(path);\n        } else if (options.errorReporting === \"console\") {\n            removeErrorConsole(path);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting(\"remove\", path);\n        }\n    }\n\n    function errorConsole(e, rootHref) {\n        var template = '{line} {content}';\n        var filename = e.filename || rootHref;\n        var errors = [];\n        var content = (e.type || \"Syntax\") + \"Error: \" + (e.message || 'There is an error in your .less file') +\n            \" in \" + filename;\n\n        var errorline = function (e, i, classname) {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += ' on line ' + e.line + ', column ' + (e.column + 1) + ':\\n' +\n                errors.join('\\n');\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += '\\nStack Trace\\n' + e.stack;\n        }\n        less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n        if (!options.errorReporting || options.errorReporting === \"html\") {\n            errorHTML(e, rootHref);\n        } else if (options.errorReporting === \"console\") {\n            errorConsole(e, rootHref);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting(\"add\", e, rootHref);\n        }\n    }\n\n    return {\n        add: error,\n        remove: removeError\n    };\n};\n\n},{\"./browser\":3,\"./utils\":11}],6:[function(require,module,exports){\n/* global window, XMLHttpRequest */\n\nmodule.exports = function(options, logger) {\n\n    var AbstractFileManager = require(\"../less/environment/abstract-file-manager.js\");\n\n    var fileCache = {};\n\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n    var FileManager = function() {\n    };\n\n    FileManager.prototype = new AbstractFileManager();\n\n    FileManager.prototype.alwaysMakePathsAbsolute = function alwaysMakePathsAbsolute() {\n        return true;\n    };\n    FileManager.prototype.join = function join(basePath, laterPath) {\n        if (!basePath) {\n            return laterPath;\n        }\n        return this.extractUrlParts(laterPath, basePath).path;\n    };\n    FileManager.prototype.doXHR = function doXHR(url, type, callback, errback) {\n\n        var xhr = new XMLHttpRequest();\n        var async = options.isFileProtocol ? options.fileAsync : true;\n\n        if (typeof xhr.overrideMimeType === 'function') {\n            xhr.overrideMimeType('text/css');\n        }\n        logger.debug(\"XHR: Getting '\" + url + \"'\");\n        xhr.open('GET', url, async);\n        xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n        xhr.send(null);\n\n        function handleResponse(xhr, callback, errback) {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                callback(xhr.responseText,\n                    xhr.getResponseHeader(\"Last-Modified\"));\n            } else if (typeof errback === 'function') {\n                errback(xhr.status, url);\n            }\n        }\n\n        if (options.isFileProtocol && !options.fileAsync) {\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                callback(xhr.responseText);\n            } else {\n                errback(xhr.status, url);\n            }\n        } else if (async) {\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    handleResponse(xhr, callback, errback);\n                }\n            };\n        } else {\n            handleResponse(xhr, callback, errback);\n        }\n    };\n    FileManager.prototype.supports = function(filename, currentDirectory, options, environment) {\n        return true;\n    };\n\n    FileManager.prototype.clearFileCache = function() {\n        fileCache = {};\n    };\n\n    FileManager.prototype.loadFile = function loadFile(filename, currentDirectory, options, environment) {\n        // TODO: Add prefix support like less-node?\n        // What about multiple paths?\n\n        if (currentDirectory && !this.isPathAbsolute(filename)) {\n            filename = currentDirectory + filename;\n        }\n\n        filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n\n        options = options || {};\n\n        // sheet may be set to the stylesheet for the initial load or a collection of properties including\n        // some context variables for imports\n        var hrefParts = this.extractUrlParts(filename, window.location.href);\n        var href      = hrefParts.url;\n        var self      = this;\n        \n        return new Promise(function(resolve, reject) {\n            if (options.useFileCache && fileCache[href]) {\n                try {\n                    var lessText = fileCache[href];\n                    return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() }});\n                } catch (e) {\n                    return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\n                }\n            }\n\n            self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                // per file cache\n                fileCache[href] = data;\n\n                // Use remote copy (re-parse)\n                resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified }});\n            }, function doXHRError(status, url) {\n                reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\n            });\n        });\n    };\n\n    return FileManager;\n};\n\n},{\"../less/environment/abstract-file-manager.js\":17}],7:[function(require,module,exports){\nmodule.exports = function() {\n\n    var functionRegistry = require(\"./../less/functions/function-registry\");\n\n    function imageSize() {\n        throw {\n            type: \"Runtime\",\n            message: \"Image size functions are not supported in browser version of less\"\n        };\n    }\n\n    var imageFunctions = {\n        \"image-size\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        \"image-width\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        \"image-height\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        }\n    };\n\n    functionRegistry.addMultiple(imageFunctions);\n};\n\n},{\"./../less/functions/function-registry\":26}],8:[function(require,module,exports){\n//\n// index.js\n// Should expose the additional browser functions on to the less object\n//\nvar addDataAttr = require(\"./utils\").addDataAttr,\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, options) {\n    var document = window.document;\n    var less = require('../less')();\n    \n    less.options = options;\n    var environment = less.environment,\n        FileManager = require(\"./file-manager\")(options, less.logger),\n        fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = require(\"./plugin-loader\");\n\n    require(\"./log-listener\")(less, options);\n    var errors = require(\"./error-reporting\")(window, less, options);\n    var cache = less.cache = options.cache || require(\"./cache\")(window, options, less.logger);\n    require('./image-size')(less.environment);\n\n    // Setup user functions - Deprecate?\n    if (options.functions) {\n        less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    var typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n        return JSON.parse(JSON.stringify(obj || {}));\n    }\n\n    // only really needed for phantom\n    function bind(func, thisArg) {\n        var curryArgs = Array.prototype.slice.call(arguments, 2);\n        return function() {\n            var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n            return func.apply(thisArg, args);\n        };\n    }\n\n    function loadStyles(modifyVars) {\n        var styles = document.getElementsByTagName('style'),\n            style;\n\n        for (var i = 0; i < styles.length; i++) {\n            style = styles[i];\n            if (style.type.match(typePattern)) {\n                var instanceOptions = clone(options);\n                instanceOptions.modifyVars = modifyVars;\n                var lessText = style.innerHTML || '';\n                instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n\n                /* jshint loopfunc:true */\n                // use closure to store current style\n                less.render(lessText, instanceOptions,\n                        bind(function(style, e, result) {\n                            if (e) {\n                                errors.add(e, \"inline\");\n                            } else {\n                                style.type = 'text/css';\n                                if (style.styleSheet) {\n                                    style.styleSheet.cssText = result.css;\n                                } else {\n                                    style.innerHTML = result.css;\n                                }\n                            }\n                        }, null, style));\n            }\n        }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n\n        var instanceOptions = clone(options);\n        addDataAttr(instanceOptions, sheet);\n        instanceOptions.mime = sheet.type;\n\n        if (modifyVars) {\n            instanceOptions.modifyVars = modifyVars;\n        }\n\n        function loadInitialFileCallback(loadedFile) {\n\n            var data = loadedFile.contents,\n                path = loadedFile.filename,\n                webInfo = loadedFile.webInfo;\n\n            var newFileInfo = {\n                currentDirectory: fileManager.getPath(path),\n                filename: path,\n                rootFilename: path,\n                relativeUrls: instanceOptions.relativeUrls};\n\n            newFileInfo.entryPath = newFileInfo.currentDirectory;\n            newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n            if (webInfo) {\n                webInfo.remaining = remaining;\n\n                var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                if (!reload && css) {\n                    webInfo.local = true;\n                    callback(null, css, data, sheet, webInfo, path);\n                    return;\n                }\n\n            }\n\n            // TODO add tests around how this behaves when reloading\n            errors.remove(path);\n\n            instanceOptions.rootFileInfo = newFileInfo;\n            less.render(data, instanceOptions, function(e, result) {\n                if (e) {\n                    e.href = path;\n                    callback(e);\n                } else {\n                    cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                    callback(null, result.css, data, sheet, webInfo, path);\n                }\n            });\n        }\n\n        fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n            .then(function(loadedFile) {\n                loadInitialFileCallback(loadedFile);\n            }).catch(function(err) {\n                console.log(err);\n                callback(err);\n            });\n\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n        for (var i = 0; i < less.sheets.length; i++) {\n            loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n        }\n    }\n\n    function initRunningMode() {\n        if (less.env === 'development') {\n            less.watchTimer = setInterval(function () {\n                if (less.watchMode) {\n                    fileManager.clearFileCache();\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                        } else if (css) {\n                            browser.createCSS(window.document, css, sheet);\n                        }\n                    });\n                }\n            }, options.poll);\n        }\n    }\n\n    //\n    // Watch mode\n    //\n    less.watch   = function () {\n        if (!less.watchMode ) {\n            less.env = 'development';\n            initRunningMode();\n        }\n        this.watchMode = true;\n        return true;\n    };\n\n    less.unwatch = function () {clearInterval(less.watchTimer); this.watchMode = false; return false; };\n\n    //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n    less.registerStylesheetsImmediately = function() {\n        var links = document.getElementsByTagName('link');\n        less.sheets = [];\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\n                (links[i].type.match(typePattern)))) {\n                less.sheets.push(links[i]);\n            }\n        }\n    };\n\n    //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n    less.registerStylesheets = function() {\n        return new Promise(function(resolve, reject) {\n            less.registerStylesheetsImmediately();\n            resolve();\n        });\n    };\n\n    //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n    less.modifyVars = function(record) {\n        return less.refresh(true, record, false);\n    };\n\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n        if ((reload || clearFileCache) && clearFileCache !== false) {\n            fileManager.clearFileCache();\n        }\n        return new Promise(function (resolve, reject) {\n            var startTime, endTime, totalMilliseconds, remainingSheets;\n            startTime = endTime = new Date();\n\n            // Set counter for remaining unprocessed sheets\n            remainingSheets = less.sheets.length;\n\n            if (remainingSheets === 0) {\n\n                endTime = new Date();\n                totalMilliseconds = endTime - startTime;\n                less.logger.info(\"Less has finished and no sheets were loaded.\");\n                resolve({\n                    startTime: startTime,\n                    endTime: endTime,\n                    totalMilliseconds: totalMilliseconds,\n                    sheets: less.sheets.length\n                });\n\n            } else {\n                // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                    if (e) {\n                        errors.add(e, e.href || sheet.href);\n                        reject(e);\n                        return;\n                    }\n                    if (webInfo.local) {\n                        less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n                    } else {\n                        less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n                    }\n                    browser.createCSS(window.document, css, sheet);\n                    less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + 'ms');\n\n                    // Count completed sheet\n                    remainingSheets--;\n\n                    // Check if the last remaining sheet was processed and then call the promise\n                    if (remainingSheets === 0) {\n                        totalMilliseconds = new Date() - startTime;\n                        less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + 'ms');\n                        resolve({\n                            startTime: startTime,\n                            endTime: endTime,\n                            totalMilliseconds: totalMilliseconds,\n                            sheets: less.sheets.length\n                        });\n                    }\n                    endTime = new Date();\n                }, reload, modifyVars);\n            }\n\n            loadStyles(modifyVars);\n        });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n};\n\n},{\"../less\":35,\"./browser\":3,\"./cache\":4,\"./error-reporting\":5,\"./file-manager\":6,\"./image-size\":7,\"./log-listener\":9,\"./plugin-loader\":10,\"./utils\":11}],9:[function(require,module,exports){\nmodule.exports = function(less, options) {\n\n    var logLevel_debug = 4,\n        logLevel_info = 3,\n        logLevel_warn = 2,\n        logLevel_error = 1;\n\n    // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ?  logLevel_info : logLevel_error);\n\n    if (!options.loggers) {\n        options.loggers = [{\n            debug: function(msg) {\n                if (options.logLevel >= logLevel_debug) {\n                    console.log(msg);\n                }\n            },\n            info: function(msg) {\n                if (options.logLevel >= logLevel_info) {\n                    console.log(msg);\n                }\n            },\n            warn: function(msg) {\n                if (options.logLevel >= logLevel_warn) {\n                    console.warn(msg);\n                }\n            },\n            error: function(msg) {\n                if (options.logLevel >= logLevel_error) {\n                    console.error(msg);\n                }\n            }\n        }];\n    }\n    for (var i = 0; i < options.loggers.length; i++) {\n        less.logger.addListener(options.loggers[i]);\n    }\n};\n\n},{}],10:[function(require,module,exports){\n// TODO: Add tests for browser @plugin\n/*global window */\n\nvar AbstractPluginLoader = require(\"../less/environment/abstract-plugin-loader.js\");\n\n/**\n * Browser Plugin Loader\n */\nvar PluginLoader = function(less) {\n    this.less = less;\n    // shim for browser require?\n    this.require = require;\n};\n\nPluginLoader.prototype = new AbstractPluginLoader();\n\nPluginLoader.prototype.loadPlugin = function(filename, basePath, context, environment, fileManager) {\n    return new Promise(function(fulfill, reject) {\n        fileManager.loadFile(filename, basePath, context, environment)\n            .then(fulfill).catch(reject);\n    });\n};\n\nmodule.exports = PluginLoader;\n\n\n},{\"../less/environment/abstract-plugin-loader.js\":18}],11:[function(require,module,exports){\nmodule.exports = {\n    extractId: function(href) {\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '')  // Remove protocol & domain\n            .replace(/[\\?\\&]livereload=\\w+/, '')        // Remove LiveReload cachebuster\n            .replace(/^\\//, '')                         // Remove root /\n            .replace(/\\.[a-zA-Z]+$/, '')                // Remove simple extension\n            .replace(/[^\\.\\w-]+/g, '-')                 // Replace illegal characters\n            .replace(/\\./g, ':');                       // Replace dots with colons(for valid id)\n    },\n    addDataAttr: function(options, tag) {\n        for (var opt in tag.dataset) {\n            if (tag.dataset.hasOwnProperty(opt)) {\n                if (opt === \"env\" || opt === \"dumpLineNumbers\" || opt === \"rootpath\" || opt === \"errorReporting\") {\n                    options[opt] = tag.dataset[opt];\n                } else {\n                    try {\n                        options[opt] = JSON.parse(tag.dataset[opt]);\n                    }\n                    catch (_) {}\n                }\n            }\n        }\n    }\n};\n\n},{}],12:[function(require,module,exports){\nvar contexts = {};\nmodule.exports = contexts;\n\nvar copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) { return; }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n        if (original.hasOwnProperty(propertiesToCopy[i])) {\n            destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n        }\n    }\n};\n\n/*\n parse is used whilst parsing\n */\nvar parseCopyProperties = [\n    // options\n    'paths',            // option - unmodified - paths to search for imports on\n    'relativeUrls',     // option - whether to adjust URL's to be relative\n    'rootpath',         // option - rootpath to append to URL's\n    'strictImports',    // option -\n    'insecure',         // option - whether to allow imports from insecure ssl hosts\n    'dumpLineNumbers',  // option - whether to dump line numbers\n    'compress',         // option - whether to compress\n    'syncImport',       // option - whether to import synchronously\n    'chunkInput',       // option - whether to chunk input. more performant but causes parse issues.\n    'mime',             // browser only - mime type for sheet import\n    'useFileCache',     // browser only - whether to use the per file session cache\n    // context\n    'processImports',   // option & context - whether to process imports. if false then imports will not be imported.\n                        // Used by the import manager to stop multiple import visitors being created.\n    'pluginManager'     // Used as the plugin manager for the session\n];\n\ncontexts.Parse = function(options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n};\n\nvar evalCopyProperties = [\n    'paths',             // additional include paths\n    'compress',          // whether to compress\n    'ieCompat',          // whether to enforce IE compatibility (IE8 data-uri)\n    'strictMath',        // whether math has to be within parenthesis\n    'strictUnits',       // whether units need to evaluate correctly\n    'sourceMap',         // whether to output a source map\n    'importMultiple',    // whether we are currently importing multiple copies\n    'urlArgs',           // whether to add args into url tokens\n    'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n    'pluginManager',     // Used as the plugin manager for the session\n    'importantScope'     // used to bubble up !important statements\n];\n\ncontexts.Eval = function(options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n};\n\ncontexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n        this.parensStack = [];\n    }\n    this.parensStack.push(true);\n};\n\ncontexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n};\n\ncontexts.Eval.prototype.mathOn = true;\ncontexts.Eval.prototype.isMathOn = function () {\n    if (!this.mathOn) {\n        return false;\n    }\n    return this.strictMath ? (this.parensStack && this.parensStack.length) : true;\n};\n\ncontexts.Eval.prototype.isPathRelative = function (path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n};\n\ncontexts.Eval.prototype.normalizePath = function( path ) {\n    var\n        segments = path.split(\"/\").reverse(),\n        segment;\n\n    path = [];\n    while (segments.length !== 0 ) {\n        segment = segments.pop();\n        switch ( segment ) {\n            case \".\":\n                break;\n            case \"..\":\n                if ((path.length === 0) || (path[path.length - 1] === \"..\")) {\n                    path.push( segment );\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push( segment );\n                break;\n        }\n    }\n\n    return path.join(\"/\");\n};\n\n// todo - do the same for the toCSS ?\n\n},{}],13:[function(require,module,exports){\nmodule.exports = {\n    'aliceblue':'#f0f8ff',\n    'antiquewhite':'#faebd7',\n    'aqua':'#00ffff',\n    'aquamarine':'#7fffd4',\n    'azure':'#f0ffff',\n    'beige':'#f5f5dc',\n    'bisque':'#ffe4c4',\n    'black':'#000000',\n    'blanchedalmond':'#ffebcd',\n    'blue':'#0000ff',\n    'blueviolet':'#8a2be2',\n    'brown':'#a52a2a',\n    'burlywood':'#deb887',\n    'cadetblue':'#5f9ea0',\n    'chartreuse':'#7fff00',\n    'chocolate':'#d2691e',\n    'coral':'#ff7f50',\n    'cornflowerblue':'#6495ed',\n    'cornsilk':'#fff8dc',\n    'crimson':'#dc143c',\n    'cyan':'#00ffff',\n    'darkblue':'#00008b',\n    'darkcyan':'#008b8b',\n    'darkgoldenrod':'#b8860b',\n    'darkgray':'#a9a9a9',\n    'darkgrey':'#a9a9a9',\n    'darkgreen':'#006400',\n    'darkkhaki':'#bdb76b',\n    'darkmagenta':'#8b008b',\n    'darkolivegreen':'#556b2f',\n    'darkorange':'#ff8c00',\n    'darkorchid':'#9932cc',\n    'darkred':'#8b0000',\n    'darksalmon':'#e9967a',\n    'darkseagreen':'#8fbc8f',\n    'darkslateblue':'#483d8b',\n    'darkslategray':'#2f4f4f',\n    'darkslategrey':'#2f4f4f',\n    'darkturquoise':'#00ced1',\n    'darkviolet':'#9400d3',\n    'deeppink':'#ff1493',\n    'deepskyblue':'#00bfff',\n    'dimgray':'#696969',\n    'dimgrey':'#696969',\n    'dodgerblue':'#1e90ff',\n    'firebrick':'#b22222',\n    'floralwhite':'#fffaf0',\n    'forestgreen':'#228b22',\n    'fuchsia':'#ff00ff',\n    'gainsboro':'#dcdcdc',\n    'ghostwhite':'#f8f8ff',\n    'gold':'#ffd700',\n    'goldenrod':'#daa520',\n    'gray':'#808080',\n    'grey':'#808080',\n    'green':'#008000',\n    'greenyellow':'#adff2f',\n    'honeydew':'#f0fff0',\n    'hotpink':'#ff69b4',\n    'indianred':'#cd5c5c',\n    'indigo':'#4b0082',\n    'ivory':'#fffff0',\n    'khaki':'#f0e68c',\n    'lavender':'#e6e6fa',\n    'lavenderblush':'#fff0f5',\n    'lawngreen':'#7cfc00',\n    'lemonchiffon':'#fffacd',\n    'lightblue':'#add8e6',\n    'lightcoral':'#f08080',\n    'lightcyan':'#e0ffff',\n    'lightgoldenrodyellow':'#fafad2',\n    'lightgray':'#d3d3d3',\n    'lightgrey':'#d3d3d3',\n    'lightgreen':'#90ee90',\n    'lightpink':'#ffb6c1',\n    'lightsalmon':'#ffa07a',\n    'lightseagreen':'#20b2aa',\n    'lightskyblue':'#87cefa',\n    'lightslategray':'#778899',\n    'lightslategrey':'#778899',\n    'lightsteelblue':'#b0c4de',\n    'lightyellow':'#ffffe0',\n    'lime':'#00ff00',\n    'limegreen':'#32cd32',\n    'linen':'#faf0e6',\n    'magenta':'#ff00ff',\n    'maroon':'#800000',\n    'mediumaquamarine':'#66cdaa',\n    'mediumblue':'#0000cd',\n    'mediumorchid':'#ba55d3',\n    'mediumpurple':'#9370d8',\n    'mediumseagreen':'#3cb371',\n    'mediumslateblue':'#7b68ee',\n    'mediumspringgreen':'#00fa9a',\n    'mediumturquoise':'#48d1cc',\n    'mediumvioletred':'#c71585',\n    'midnightblue':'#191970',\n    'mintcream':'#f5fffa',\n    'mistyrose':'#ffe4e1',\n    'moccasin':'#ffe4b5',\n    'navajowhite':'#ffdead',\n    'navy':'#000080',\n    'oldlace':'#fdf5e6',\n    'olive':'#808000',\n    'olivedrab':'#6b8e23',\n    'orange':'#ffa500',\n    'orangered':'#ff4500',\n    'orchid':'#da70d6',\n    'palegoldenrod':'#eee8aa',\n    'palegreen':'#98fb98',\n    'paleturquoise':'#afeeee',\n    'palevioletred':'#d87093',\n    'papayawhip':'#ffefd5',\n    'peachpuff':'#ffdab9',\n    'peru':'#cd853f',\n    'pink':'#ffc0cb',\n    'plum':'#dda0dd',\n    'powderblue':'#b0e0e6',\n    'purple':'#800080',\n    'rebeccapurple':'#663399',\n    'red':'#ff0000',\n    'rosybrown':'#bc8f8f',\n    'royalblue':'#4169e1',\n    'saddlebrown':'#8b4513',\n    'salmon':'#fa8072',\n    'sandybrown':'#f4a460',\n    'seagreen':'#2e8b57',\n    'seashell':'#fff5ee',\n    'sienna':'#a0522d',\n    'silver':'#c0c0c0',\n    'skyblue':'#87ceeb',\n    'slateblue':'#6a5acd',\n    'slategray':'#708090',\n    'slategrey':'#708090',\n    'snow':'#fffafa',\n    'springgreen':'#00ff7f',\n    'steelblue':'#4682b4',\n    'tan':'#d2b48c',\n    'teal':'#008080',\n    'thistle':'#d8bfd8',\n    'tomato':'#ff6347',\n    'turquoise':'#40e0d0',\n    'violet':'#ee82ee',\n    'wheat':'#f5deb3',\n    'white':'#ffffff',\n    'whitesmoke':'#f5f5f5',\n    'yellow':'#ffff00',\n    'yellowgreen':'#9acd32'\n};\n},{}],14:[function(require,module,exports){\nmodule.exports = {\n    colors: require(\"./colors\"),\n    unitConversions: require(\"./unit-conversions\")\n};\n\n},{\"./colors\":13,\"./unit-conversions\":15}],15:[function(require,module,exports){\nmodule.exports = {\n    length: {\n        'm': 1,\n        'cm': 0.01,\n        'mm': 0.001,\n        'in': 0.0254,\n        'px': 0.0254 / 96,\n        'pt': 0.0254 / 72,\n        'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n        's': 1,\n        'ms': 0.001\n    },\n    angle: {\n        'rad': 1 / (2 * Math.PI),\n        'deg': 1 / 360,\n        'grad': 1 / 400,\n        'turn': 1\n    }\n};\n},{}],16:[function(require,module,exports){\n// Export a new default each time\nmodule.exports = function() {\n    return {\n        /* Outputs a makefile import dependency list to stdout. */\n        depends: false,\n\n        /* Compress using less built-in compression. \n         * This does an okay job but does not utilise all the tricks of \n         * dedicated css compression. */\n        compress: false,\n\n        /* Runs the less parser and just reports errors without any output. */\n        lint: false,\n\n        /* Sets available include paths.\n         * If the file in an @import rule does not exist at that exact location, \n         * less will look for it at the location(s) passed to this option. \n         * You might use this for instance to specify a path to a library which \n         * you want to be referenced simply and relatively in the less files. */\n        paths: [],\n\n        /* color output in the terminal */\n        color: true,\n\n        /* The strictImports controls whether the compiler will allow an @import inside of either \n         * @media blocks or (a later addition) other selector blocks.\n         * See: https://github.com/less/less.js/issues/656 */\n        strictImports: false,\n\n        /* Allow Imports from Insecure HTTPS Hosts */\n        insecure: false,\n\n        /* Allows you to add a path to every generated import and url in your css. \n         * This does not affect less import statements that are processed, just ones \n         * that are left in the output css. */\n        rootpath: '',\n\n        /* By default URLs are kept as-is, so if you import a file in a sub-directory \n         * that references an image, exactly the same URL will be output in the css. \n         * This option allows you to re-write URL's in imported files so that the \n         * URL is always relative to the base imported file */\n        relativeUrls: false,\n\n        /* Compatibility with IE8. Used for limiting data-uri length */\n        ieCompat: false,  // true until 3.0\n\n        /* Without this option on, Less will try and process all math in your css */\n        strictMath: false,\n\n        /* Without this option, less attempts to guess at the output unit when it does maths. */\n        strictUnits: false,\n\n        /* Effectively the declaration is put at the top of your base Less file, \n         * meaning it can be used but it also can be overridden if this variable \n         * is defined in the file. */\n        globalVars: null,\n\n        /* As opposed to the global variable option, this puts the declaration at the\n         * end of your base file, meaning it will override anything defined in your Less file. */\n        modifyVars: null,\n\n        /* This option allows you to specify a argument to go on to every URL.  */\n        urlArgs: ''\n    }\n}\n},{}],17:[function(require,module,exports){\nvar abstractFileManager = function() {\n};\n\nabstractFileManager.prototype.getPath = function (filename) {\n    var j = filename.lastIndexOf('?');\n    if (j > 0) {\n        filename = filename.slice(0, j);\n    }\n    j = filename.lastIndexOf('/');\n    if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n    }\n    if (j < 0) {\n        return \"\";\n    }\n    return filename.slice(0, j + 1);\n};\n\nabstractFileManager.prototype.tryAppendExtension = function(path, ext) {\n    return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n};\n\nabstractFileManager.prototype.tryAppendLessExtension = function(path) {\n    return this.tryAppendExtension(path, '.less');\n};\n\nabstractFileManager.prototype.supportsSync = function() {\n    return false;\n};\n\nabstractFileManager.prototype.alwaysMakePathsAbsolute = function() {\n    return false;\n};\n\nabstractFileManager.prototype.isPathAbsolute = function(filename) {\n    return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n};\n// TODO: pull out / replace?\nabstractFileManager.prototype.join = function(basePath, laterPath) {\n    if (!basePath) {\n        return laterPath;\n    }\n    return basePath + laterPath;\n};\n\nabstractFileManager.prototype.pathDiff = function pathDiff(url, baseUrl) {\n    // diff between two paths to create a relative path\n\n    var urlParts = this.extractUrlParts(url),\n        baseUrlParts = this.extractUrlParts(baseUrl),\n        i, max, urlDirectories, baseUrlDirectories, diff = \"\";\n    if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return \"\";\n    }\n    max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n    for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) { break; }\n    }\n    baseUrlDirectories = baseUrlParts.directories.slice(i);\n    urlDirectories = urlParts.directories.slice(i);\n    for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += \"../\";\n    }\n    for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += urlDirectories[i] + \"/\";\n    }\n    return diff;\n};\n// helper function, not part of API\nabstractFileManager.prototype.extractUrlParts = function extractUrlParts(url, baseUrl) {\n    // urlParts[1] = protocol://hostname/ OR /\n    // urlParts[2] = / if path relative to host base\n    // urlParts[3] = directories\n    // urlParts[4] = filename\n    // urlParts[5] = parameters\n\n    var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i,\n        urlParts = url.match(urlPartsRegex),\n        returner = {}, rawDirectories = [], directories = [], i, baseUrlParts;\n\n    if (!urlParts) {\n        throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n    }\n\n    // Stylesheets in IE don't always return the full path\n    if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n        if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n        }\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || \"\";\n        if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n    }\n\n    if (urlParts[3]) {\n        rawDirectories = urlParts[3].replace(/\\\\/g, \"/\").split(\"/\");\n\n        // collapse '..' and skip '.'\n        for (i = 0; i < rawDirectories.length; i++) {\n\n            if (rawDirectories[i] === \"..\") {\n                directories.pop();\n            }\n            else if (rawDirectories[i] !== \".\") {\n                directories.push(rawDirectories[i]);\n            }\n        \n        }\n    }\n\n    returner.hostPart = urlParts[1];\n    returner.directories = directories;\n    returner.rawPath = (urlParts[1] || \"\") + rawDirectories.join(\"/\");\n    returner.path = (urlParts[1] || \"\") + directories.join(\"/\");\n    returner.filename = urlParts[4];\n    returner.fileUrl = returner.path + (urlParts[4] || \"\");\n    returner.url = returner.fileUrl + (urlParts[5] || \"\");\n    return returner;\n};\n\nmodule.exports = abstractFileManager;\n\n},{}],18:[function(require,module,exports){\nvar functionRegistry = require(\"../functions/function-registry\"),\n    LessError = require('../less-error');\n\nvar AbstractPluginLoader = function() {\n};\n\nfunction error(msg, type) {\n    throw new LessError(\n        {\n            type: type || 'Syntax',\n            message: msg\n        }\n    );\n}\nAbstractPluginLoader.prototype.evalPlugin = function(contents, context, imports, pluginOptions, fileInfo) {\n\n    var loader,\n        registry,\n        pluginObj,\n        localModule,\n        pluginManager,\n        filename;\n\n    pluginManager = context.pluginManager;\n\n    if (fileInfo) {\n        if (typeof fileInfo === \"string\") {\n            filename = fileInfo;\n        }\n        else {\n            filename = fileInfo.filename;\n        }\n    }\n    var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n\n    if (filename) {\n        pluginObj = pluginManager.get(filename);\n\n        if (pluginObj) {\n            this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            try {\n                if (pluginObj.use) {\n                    pluginObj.use.call(this.context, pluginObj);\n                }\n            }\n            catch (e) {\n                e.message = 'Error during @plugin call';\n                return new this.less.LessError(e, imports, filename);\n            }\n            return pluginObj;\n        }\n    }\n    localModule = {\n        exports: {},\n        pluginManager: pluginManager,\n        fileInfo: fileInfo\n    };\n    registry = functionRegistry.create();\n\n    var registerPlugin = function(obj) {\n        pluginObj = obj;\n    };\n\n    try {\n        loader = new Function(\"module\", \"require\", \"registerPlugin\", \"functions\", \"tree\", \"less\", \"fileInfo\", contents);\n        loader(localModule, this.require, registerPlugin, registry, this.less.tree, this.less, fileInfo);\n    } catch (e) {\n        return new this.less.LessError(e, imports, filename);\n    }\n\n    if (!pluginObj) {\n        pluginObj = localModule.exports;\n    }\n    pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n    if (pluginObj) {\n        // Run on first load\n        pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n        pluginObj.functions = registry.getLocalFunctions();\n        pluginObj.imports = imports;\n        pluginObj.filename = filename;\n\n        this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n        // Run every @plugin call\n        try {\n            if (pluginObj.use) {\n                pluginObj.use.call(this.context, pluginObj);\n            }\n        }\n        catch (e) {\n            e.message = 'Error during @plugin call';\n            return new this.less.LessError(e, imports, filename);\n        }\n\n    }\n    else {\n        return new this.less.LessError({ message: \"Not a valid plugin\" });\n    }\n\n    return pluginObj;\n\n};\n\nAbstractPluginLoader.prototype.trySetOptions = function(plugin, filename, name, options) {\n    if (options) {\n        if (!plugin.setOptions) {\n            error(\"Options have been provided but the plugin \" + name + \" does not support any options.\");\n            return null;\n        }\n        try {\n            plugin.setOptions(options);\n        }\n        catch (e) {\n            error(\"Error setting options on plugin \" + name + '\\n' + e.message);\n            return null;\n        }\n    }\n};\n\nAbstractPluginLoader.prototype.validatePlugin = function(plugin, filename, name) {\n    if (plugin) {\n        // support plugins being a function\n        // so that the plugin can be more usable programmatically\n        if (typeof plugin === \"function\") {\n            plugin = new plugin();\n        }\n\n        if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                error(\"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion));\n                return null;\n            }\n        }\n        return plugin;\n    }\n    return null;\n};\n\nAbstractPluginLoader.prototype.compareVersion = function(aVersion, bVersion) {\n    if (typeof aVersion === \"string\") {\n        aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n        aVersion.shift();\n    }\n    for (var i = 0; i < aVersion.length; i++) {\n        if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n        }\n    }\n    return 0;\n};\nAbstractPluginLoader.prototype.versionToString = function(version) {\n    var versionString = \"\";\n    for (var i = 0; i < version.length; i++) {\n        versionString += (versionString ? \".\" : \"\") + version[i];\n    }\n    return versionString;\n};\nAbstractPluginLoader.prototype.printUsage = function(plugins) {\n    for (var i = 0; i < plugins.length; i++) {\n        var plugin = plugins[i];\n        if (plugin.printUsage) {\n            plugin.printUsage();\n        }\n    }\n};\n\nmodule.exports = AbstractPluginLoader;\n\n\n},{\"../functions/function-registry\":26,\"../less-error\":36}],19:[function(require,module,exports){\n/**\n * @todo Document why this abstraction exists, and the relationship between\n *       environment, file managers, and plugin manager\n */\n\nvar logger = require(\"../logger\");\nvar environment = function(externalEnvironment, fileManagers) {\n    this.fileManagers = fileManagers || [];\n    externalEnvironment = externalEnvironment || {};\n\n    var optionalFunctions = [\"encodeBase64\", \"mimeLookup\", \"charsetLookup\", \"getSourceMapGenerator\"],\n        requiredFunctions = [],\n        functions = requiredFunctions.concat(optionalFunctions);\n\n    for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i],\n            environmentFunc = externalEnvironment[propName];\n        if (environmentFunc) {\n            this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n            this.warn(\"missing required function in environment - \" + propName);\n        }\n    }\n};\n\nenvironment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n\n    if (!filename) {\n        logger.warn(\"getFileManager called with no filename.. Please report this issue. continuing.\");\n    }\n    if (currentDirectory == null) {\n        logger.warn(\"getFileManager called with null directory.. Please report this issue. continuing.\");\n    }\n\n    var fileManagers = this.fileManagers;\n    if (options.pluginManager) {\n        fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n    }\n    for (var i = fileManagers.length - 1; i >= 0 ; i--) {\n        var fileManager = fileManagers[i];\n        if (fileManager[isSync ? \"supportsSync\" : \"supports\"](filename, currentDirectory, options, environment)) {\n            return fileManager;\n        }\n    }\n    return null;\n};\n\nenvironment.prototype.addFileManager = function (fileManager) {\n    this.fileManagers.push(fileManager);\n};\n\nenvironment.prototype.clearFileManagers = function () {\n    this.fileManagers = [];\n};\n\nmodule.exports = environment;\n\n},{\"../logger\":37}],20:[function(require,module,exports){\n\nvar functionRegistry = require(\"./function-registry\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    Keyword = require(\"../tree/keyword\");\n\nfunctionRegistry.addMultiple({\n    boolean: function(condition) {\n        return condition ? Keyword.True : Keyword.False;\n    },\n\n    'if': function(condition, trueValue, falseValue) {\n        return condition ? trueValue\n            : (falseValue || new Anonymous);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/keyword\":68,\"./function-registry\":26}],21:[function(require,module,exports){\nvar Color = require(\"../tree/color\"),\n    functionRegistry = require(\"./function-registry\");\n\n// Color Blending\n// ref: http://www.w3.org/TR/compositing-1\n\nfunction colorBlend(mode, color1, color2) {\n    var ab = color1.alpha, cb, // backdrop\n        as = color2.alpha, cs, // source\n        ar, cr, r = [];        // result\n\n    ar = as + ab * (1 - as);\n    for (var i = 0; i < 3; i++) {\n        cb = color1.rgb[i] / 255;\n        cs = color2.rgb[i] / 255;\n        cr = mode(cb, cs);\n        if (ar) {\n            cr = (as * cs + ab * (cb -\n                  as * (cb + cs - cr))) / ar;\n        }\n        r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n}\n\nvar colorBlendModeFunctions = {\n    multiply: function(cb, cs) {\n        return cb * cs;\n    },\n    screen: function(cb, cs) {\n        return cb + cs - cb * cs;\n    },\n    overlay: function(cb, cs) {\n        cb *= 2;\n        return (cb <= 1) ?\n            colorBlendModeFunctions.multiply(cb, cs) :\n            colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function(cb, cs) {\n        var d = 1, e = cb;\n        if (cs > 0.5) {\n            e = 1;\n            d = (cb > 0.25) ? Math.sqrt(cb)\n                : ((16 * cb - 12) * cb + 4) * cb;\n        }\n        return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function(cb, cs) {\n        return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function(cb, cs) {\n        return Math.abs(cb - cs);\n    },\n    exclusion: function(cb, cs) {\n        return cb + cs - 2 * cb * cs;\n    },\n\n    // non-w3c functions:\n    average: function(cb, cs) {\n        return (cb + cs) / 2;\n    },\n    negation: function(cb, cs) {\n        return 1 - Math.abs(cb + cs - 1);\n    }\n};\n\nfor (var f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n        colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n}\n\nfunctionRegistry.addMultiple(colorBlend);\n\n},{\"../tree/color\":53,\"./function-registry\":26}],22:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\"),\n    Color = require(\"../tree/color\"),\n    Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    functionRegistry = require(\"./function-registry\"),\n    colorFunctions;\n\nfunction clamp(val) {\n    return Math.min(1, Math.max(0, val));\n}\nfunction hsla(color) {\n    return colorFunctions.hsla(color.h, color.s, color.l, color.a);\n}\nfunction number(n) {\n    if (n instanceof Dimension) {\n        return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n        return n;\n    } else {\n        throw {\n            type: \"Argument\",\n            message: \"color functions take numbers as parameters\"\n        };\n    }\n}\nfunction scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n        return parseFloat(n.value * size / 100);\n    } else {\n        return number(n);\n    }\n}\ncolorFunctions = {\n    rgb: function (r, g, b) {\n        return colorFunctions.rgba(r, g, b, 1.0);\n    },\n    rgba: function (r, g, b, a) {\n        var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\n        a = number(a);\n        return new Color(rgb, a);\n    },\n    hsl: function (h, s, l) {\n        return colorFunctions.hsla(h, s, l, 1.0);\n    },\n    hsla: function (h, s, l, a) {\n\n        var m1, m2;\n\n        function hue(h) {\n            h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n            if (h * 6 < 1) {\n                return m1 + (m2 - m1) * h * 6;\n            }\n            else if (h * 2 < 1) {\n                return m2;\n            }\n            else if (h * 3 < 2) {\n                return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n            }\n            else {\n                return m1;\n            }\n        }\n\n        h = (number(h) % 360) / 360;\n        s = clamp(number(s)); l = clamp(number(l)); a = clamp(number(a));\n\n        m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        m1 = l * 2 - m2;\n\n        return colorFunctions.rgba(hue(h + 1 / 3) * 255,\n            hue(h)       * 255,\n            hue(h - 1 / 3) * 255,\n            a);\n    },\n\n    hsv: function(h, s, v) {\n        return colorFunctions.hsva(h, s, v, 1.0);\n    },\n\n    hsva: function(h, s, v, a) {\n        h = ((number(h) % 360) / 360) * 360;\n        s = number(s); v = number(v); a = number(a);\n\n        var i, f;\n        i = Math.floor((h / 60) % 6);\n        f = (h / 60) - i;\n\n        var vs = [v,\n            v * (1 - s),\n            v * (1 - f * s),\n            v * (1 - (1 - f) * s)];\n        var perm = [[0, 3, 1],\n            [2, 0, 1],\n            [1, 0, 3],\n            [1, 2, 0],\n            [3, 1, 0],\n            [0, 1, 2]];\n\n        return colorFunctions.rgba(vs[perm[i][0]] * 255,\n            vs[perm[i][1]] * 255,\n            vs[perm[i][2]] * 255,\n            a);\n    },\n\n    hue: function (color) {\n        return new Dimension(color.toHSL().h);\n    },\n    saturation: function (color) {\n        return new Dimension(color.toHSL().s * 100, '%');\n    },\n    lightness: function (color) {\n        return new Dimension(color.toHSL().l * 100, '%');\n    },\n    hsvhue: function(color) {\n        return new Dimension(color.toHSV().h);\n    },\n    hsvsaturation: function (color) {\n        return new Dimension(color.toHSV().s * 100, '%');\n    },\n    hsvvalue: function (color) {\n        return new Dimension(color.toHSV().v * 100, '%');\n    },\n    red: function (color) {\n        return new Dimension(color.rgb[0]);\n    },\n    green: function (color) {\n        return new Dimension(color.rgb[1]);\n    },\n    blue: function (color) {\n        return new Dimension(color.rgb[2]);\n    },\n    alpha: function (color) {\n        return new Dimension(color.toHSL().a);\n    },\n    luma: function (color) {\n        return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function (color) {\n        var luminance =\n            (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n\n        return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function (color, amount, method) {\n        // filter: saturate(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.s +=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s += amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(hsl);\n    },\n    desaturate: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.s -=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s -= amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(hsl);\n    },\n    lighten: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.l +=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l += amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(hsl);\n    },\n    darken: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.l -=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l -= amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(hsl);\n    },\n    fadein: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.a +=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a += amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    fadeout: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.a -=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a -= amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    fade: function (color, amount) {\n        var hsl = color.toHSL();\n\n        hsl.a = amount.value / 100;\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    spin: function (color, amount) {\n        var hsl = color.toHSL();\n        var hue = (hsl.h + amount.value) % 360;\n\n        hsl.h = hue < 0 ? 360 + hue : hue;\n\n        return hsla(hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function (color1, color2, weight) {\n        if (!color1.toHSL || !color2.toHSL) {\n            console.log(color2.type);\n            console.dir(color2);\n        }\n        if (!weight) {\n            weight = new Dimension(50);\n        }\n        var p = weight.value / 100.0;\n        var w = p * 2 - 1;\n        var a = color1.toHSL().a - color2.toHSL().a;\n\n        var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        var w2 = 1 - w1;\n\n        var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n            color1.rgb[1] * w1 + color2.rgb[1] * w2,\n            color1.rgb[2] * w1 + color2.rgb[2] * w2];\n\n        var alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    },\n    greyscale: function (color) {\n        return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function (color, dark, light, threshold) {\n        // filter: contrast(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        if (typeof light === 'undefined') {\n            light = colorFunctions.rgba(255, 255, 255, 1.0);\n        }\n        if (typeof dark === 'undefined') {\n            dark = colorFunctions.rgba(0, 0, 0, 1.0);\n        }\n        // Figure out which is actually light and dark:\n        if (dark.luma() > light.luma()) {\n            var t = light;\n            light = dark;\n            dark = t;\n        }\n        if (typeof threshold === 'undefined') {\n            threshold = 0.43;\n        } else {\n            threshold = number(threshold);\n        }\n        if (color.luma() < threshold) {\n            return light;\n        } else {\n            return dark;\n        }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function (color) {\n        return new Anonymous(color.toARGB());\n    },\n    color: function(c) {\n        if ((c instanceof Quoted) &&\n            (/^#([a-f0-9]{6}|[a-f0-9]{3})$/i.test(c.value))) {\n            return new Color(c.value.slice(1));\n        }\n        if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n            c.value = undefined;\n            return c;\n        }\n        throw {\n            type:    \"Argument\",\n            message: \"argument must be a color keyword or 3/6 digit hex e.g. #FFF\"\n        };\n    },\n    tint: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n};\nfunctionRegistry.addMultiple(colorFunctions);\n\n},{\"../tree/anonymous\":48,\"../tree/color\":53,\"../tree/dimension\":60,\"../tree/quoted\":77,\"./function-registry\":26}],23:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        utils = require('../utils'),\n        functionRegistry = require(\"./function-registry\"),\n        fallback = function(functionThis, node) {\n            return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n        },\n        logger = require('../logger');\n\n    functionRegistry.add(\"data-uri\", function(mimetypeNode, filePathNode) {\n\n        if (!filePathNode) {\n            filePathNode = mimetypeNode;\n            mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.relativeUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n        var context = utils.clone(this.context);\n        context.rawBuffer = true;\n\n        var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n            return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false;\n\n        // detect the mimetype if not given\n        if (!mimetypeNode) {\n\n            mimetype = environment.mimeLookup(filePath);\n\n            if (mimetype === \"image/svg+xml\") {\n                useBase64 = false;\n            } else {\n                // use base 64 unless it's an ASCII or UTF-8 format\n                var charset = environment.charsetLookup(mimetype);\n                useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n            }\n            if (useBase64) { mimetype += ';base64'; }\n        }\n        else {\n            useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n        if (!fileSync.contents) {\n            logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n            return fallback(this, filePathNode || mimetypeNode);\n        }\n        var buf = fileSync.contents;\n        if (useBase64 && !environment.encodeBase64) {\n            return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n\n        var uri = \"data:\" + mimetype + ',' + buf + fragment;\n\n        // IE8 cannot handle a data-uri larger than 32,768 characters. If this is exceeded\n        // and the --ieCompat flag is enabled, return a normal url() instead.\n        var DATA_URI_MAX = 32768;\n        if (uri.length >= DATA_URI_MAX) {\n\n            if (this.context.ieCompat !== false) {\n                logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because its size (\" + uri.length +\n                    \" characters) exceeds IE8-safe \" + DATA_URI_MAX + \" characters!\");\n\n                return fallback(this, filePathNode || mimetypeNode);\n            }\n        }\n\n        return new URL(new Quoted('\"' + uri + '\"', uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n\n},{\"../logger\":37,\"../tree/quoted\":77,\"../tree/url\":82,\"../utils\":86,\"./function-registry\":26}],24:[function(require,module,exports){\nvar Keyword = require(\"../tree/keyword\"),\n    functionRegistry = require(\"./function-registry\");\n\nvar defaultFunc = {\n    eval: function () {\n        var v = this.value_, e = this.error_;\n        if (e) {\n            throw e;\n        }\n        if (v != null) {\n            return v ? Keyword.True : Keyword.False;\n        }\n    },\n    value: function (v) {\n        this.value_ = v;\n    },\n    error: function (e) {\n        this.error_ = e;\n    },\n    reset: function () {\n        this.value_ = this.error_ = null;\n    }\n};\n\nfunctionRegistry.add(\"default\", defaultFunc.eval.bind(defaultFunc));\n\nmodule.exports = defaultFunc;\n\n},{\"../tree/keyword\":68,\"./function-registry\":26}],25:[function(require,module,exports){\nvar Expression = require(\"../tree/expression\");\n\nvar functionCaller = function(name, context, index, currentFileInfo) {\n    this.name = name.toLowerCase();\n    this.index = index;\n    this.context = context;\n    this.currentFileInfo = currentFileInfo;\n\n    this.func = context.frames[0].functionRegistry.get(this.name);\n};\nfunctionCaller.prototype.isValid = function() {\n    return Boolean(this.func);\n};\n\nfunctionCaller.prototype.call = function(args) {\n    // This code is terrible and should be replaced as per this issue...\n    // https://github.com/less/less.js/issues/2477\n    if (Array.isArray(args)) {\n        args = args.filter(function (item) {\n            if (item.type === \"Comment\") {\n                return false;\n            }\n            return true;\n        })\n        .map(function(item) {\n            if (item.type === \"Expression\") {\n                var subNodes = item.value.filter(function (item) {\n                    if (item.type === \"Comment\") {\n                        return false;\n                    }\n                    return true;\n                });\n                if (subNodes.length === 1) {\n                    return subNodes[0];\n                } else {\n                    return new Expression(subNodes);\n                }\n            }\n            return item;\n        });\n    }\n\n    return this.func.apply(this, args);\n};\n\nmodule.exports = functionCaller;\n\n},{\"../tree/expression\":62}],26:[function(require,module,exports){\nfunction makeRegistry( base ) {\n    return {\n        _data: {},\n        add: function(name, func) {\n            // precautionary case conversion, as later querying of\n            // the registry by function-caller uses lower case as well.\n            name = name.toLowerCase();\n\n            if (this._data.hasOwnProperty(name)) {\n                // TODO warn\n            }\n            this._data[name] = func;\n        },\n        addMultiple: function(functions) {\n            Object.keys(functions).forEach(\n                function(name) {\n                    this.add(name, functions[name]);\n                }.bind(this));\n        },\n        get: function(name) {\n            return this._data[name] || ( base && base.get( name ));\n        },\n        getLocalFunctions: function() {\n            return this._data;\n        },\n        inherit: function() {\n            return makeRegistry( this );\n        },\n        create: function(base) {\n            return makeRegistry(base);\n        }\n    };\n}\n\nmodule.exports = makeRegistry( null );\n},{}],27:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var functions = {\n        functionRegistry: require(\"./function-registry\"),\n        functionCaller: require(\"./function-caller\")\n    };\n\n    // register functions\n    require(\"./boolean\");\n    require(\"./default\");\n    require(\"./color\");\n    require(\"./color-blending\");\n    require(\"./data-uri\")(environment);\n    require(\"./math\");\n    require(\"./number\");\n    require(\"./string\");\n    require(\"./svg\")(environment);\n    require(\"./types\");\n\n    return functions;\n};\n\n},{\"./boolean\":20,\"./color\":22,\"./color-blending\":21,\"./data-uri\":23,\"./default\":24,\"./function-caller\":25,\"./function-registry\":26,\"./math\":29,\"./number\":30,\"./string\":31,\"./svg\":32,\"./types\":33}],28:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\");\n\nvar MathHelper = function() {\n};\nMathHelper._math = function (fn, unit, n) {\n    if (!(n instanceof Dimension)) {\n        throw { type: \"Argument\", message: \"argument must be a number\" };\n    }\n    if (unit == null) {\n        unit = n.unit;\n    } else {\n        n = n.unify();\n    }\n    return new Dimension(fn(parseFloat(n.value)), unit);\n};\nmodule.exports = MathHelper;\n},{\"../tree/dimension\":60}],29:[function(require,module,exports){\nvar functionRegistry = require(\"./function-registry\"),\n    mathHelper = require(\"./math-helper.js\");\n\nvar mathFunctions = {\n    // name,  unit\n    ceil:  null,\n    floor: null,\n    sqrt:  null,\n    abs:   null,\n    tan:   \"\",\n    sin:   \"\",\n    cos:   \"\",\n    atan:  \"rad\",\n    asin:  \"rad\",\n    acos:  \"rad\"\n};\n\nfor (var f in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f)) {\n        mathFunctions[f] = mathHelper._math.bind(null, Math[f], mathFunctions[f]);\n    }\n}\n\nmathFunctions.round = function (n, f) {\n    var fraction = typeof f === \"undefined\" ? 0 : f.value;\n    return mathHelper._math(function(num) { return num.toFixed(fraction); }, null, n);\n};\n\nfunctionRegistry.addMultiple(mathFunctions);\n\n},{\"./function-registry\":26,\"./math-helper.js\":28}],30:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    functionRegistry = require(\"./function-registry\"),\n    mathHelper = require(\"./math-helper.js\");\n\nvar minMax = function (isMin, args) {\n    args = Array.prototype.slice.call(args);\n    switch (args.length) {\n        case 0: throw { type: \"Argument\", message: \"one or more arguments required\" };\n    }\n    var i, j, current, currentUnified, referenceUnified, unit, unitStatic, unitClone,\n        order  = [], // elems only contains original argument values.\n        values = {}; // key is the unit.toString() for unified Dimension values,\n    // value is the index into the order array.\n    for (i = 0; i < args.length; i++) {\n        current = args[i];\n        if (!(current instanceof Dimension)) {\n            if (Array.isArray(args[i].value)) {\n                Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n            }\n            continue;\n        }\n        currentUnified = current.unit.toString() === \"\" && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n        unit = currentUnified.unit.toString() === \"\" && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n        unitStatic = unit !== \"\" && unitStatic === undefined || unit !== \"\" && order[0].unify().unit.toString() === \"\" ? unit : unitStatic;\n        unitClone = unit !== \"\" && unitClone === undefined ? current.unit.toString() : unitClone;\n        j = values[\"\"] !== undefined && unit !== \"\" && unit === unitStatic ? values[\"\"] : values[unit];\n        if (j === undefined) {\n            if (unitStatic !== undefined && unit !== unitStatic) {\n                throw { type: \"Argument\", message: \"incompatible types\" };\n            }\n            values[unit] = order.length;\n            order.push(current);\n            continue;\n        }\n        referenceUnified = order[j].unit.toString() === \"\" && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n        if ( isMin && currentUnified.value < referenceUnified.value ||\n            !isMin && currentUnified.value > referenceUnified.value) {\n            order[j] = current;\n        }\n    }\n    if (order.length == 1) {\n        return order[0];\n    }\n    args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? \",\" : \", \");\n    return new Anonymous((isMin ? \"min\" : \"max\") + \"(\" + args + \")\");\n};\nfunctionRegistry.addMultiple({\n    min: function () {\n        return minMax(true, arguments);\n    },\n    max: function () {\n        return minMax(false, arguments);\n    },\n    convert: function (val, unit) {\n        return val.convertTo(unit.value);\n    },\n    pi: function () {\n        return new Dimension(Math.PI);\n    },\n    mod: function(a, b) {\n        return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function(x, y) {\n        if (typeof x === \"number\" && typeof y === \"number\") {\n            x = new Dimension(x);\n            y = new Dimension(y);\n        } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n            throw { type: \"Argument\", message: \"arguments must be numbers\" };\n        }\n\n        return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function (n) {\n        var result = mathHelper._math(function(num) {\n            return num * 100;\n        }, '%', n);\n\n        return result;\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/dimension\":60,\"./function-registry\":26,\"./math-helper.js\":28}],31:[function(require,module,exports){\nvar Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    JavaScript = require(\"../tree/javascript\"),\n    functionRegistry = require(\"./function-registry\");\n\nfunctionRegistry.addMultiple({\n    e: function (str) {\n        return new Anonymous(str instanceof JavaScript ? str.evaluated : str.value);\n    },\n    escape: function (str) {\n        return new Anonymous(\n            encodeURI(str.value).replace(/=/g, \"%3D\").replace(/:/g, \"%3A\").replace(/#/g, \"%23\").replace(/;/g, \"%3B\")\n                .replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\"));\n    },\n    replace: function (string, pattern, replacement, flags) {\n        var result = string.value;\n        replacement = (replacement.type === \"Quoted\") ?\n            replacement.value : replacement.toCSS();\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n        return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function (string /* arg, arg, ... */) {\n        var args = Array.prototype.slice.call(arguments, 1),\n            result = string.value;\n\n        for (var i = 0; i < args.length; i++) {\n            /* jshint loopfunc:true */\n            result = result.replace(/%[sda]/i, function(token) {\n                var value = ((args[i].type === \"Quoted\") &&\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n            });\n        }\n        result = result.replace(/%%/g, '%');\n        return new Quoted(string.quote || '', result, string.escaped);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/javascript\":66,\"../tree/quoted\":77,\"./function-registry\":26}],32:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var Dimension = require(\"../tree/dimension\"),\n        Color = require(\"../tree/color\"),\n        Expression = require(\"../tree/expression\"),\n        Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        functionRegistry = require(\"./function-registry\");\n\n    functionRegistry.add(\"svg-gradient\", function(direction) {\n\n        var stops,\n            gradientDirectionSvg,\n            gradientType = \"linear\",\n            rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"',\n            renderEnv = {compress: false},\n            returner,\n            directionValue = direction.toCSS(renderEnv),\n            i, color, position, positionValue, alpha;\n\n        function throwArgumentDescriptor() {\n            throw { type: \"Argument\",\n                message: \"svg-gradient expects direction, start_color [start_position], [color position,]...,\" +\n                            \" end_color [end_position] or direction, color list\" };\n        }\n\n        if (arguments.length == 2) {\n            if (arguments[1].value.length < 2) {\n                throwArgumentDescriptor();\n            }\n            stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n            throwArgumentDescriptor();\n        } else {\n            stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n            case \"to bottom\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case \"to right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"to bottom right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case \"to top right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"ellipse\":\n            case \"ellipse at center\":\n                gradientType = \"radial\";\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw { type: \"Argument\", message: \"svg-gradient direction must be 'to bottom', 'to right',\" +\n                    \" 'to bottom right', 'to top right' or 'ellipse at center'\" };\n        }\n        returner = '<?xml version=\"1.0\" ?>' +\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">' +\n            '<' + gradientType + 'Gradient id=\"gradient\" gradientUnits=\"userSpaceOnUse\" ' + gradientDirectionSvg + '>';\n\n        for (i = 0; i < stops.length; i += 1) {\n            if (stops[i] instanceof Expression) {\n                color = stops[i].value[0];\n                position = stops[i].value[1];\n            } else {\n                color = stops[i];\n                position = undefined;\n            }\n\n            if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                throwArgumentDescriptor();\n            }\n            positionValue = position ? position.toCSS(renderEnv) : i === 0 ? \"0%\" : \"100%\";\n            alpha = color.alpha;\n            returner += '<stop offset=\"' + positionValue + '\" stop-color=\"' + color.toRGB() + '\"' + (alpha < 1 ? ' stop-opacity=\"' + alpha + '\"' : '') + '/>';\n        }\n        returner += '</' + gradientType + 'Gradient>' +\n            '<rect ' + rectangleDimension + ' fill=\"url(#gradient)\" /></svg>';\n\n        returner = encodeURIComponent(returner);\n\n        returner = \"data:image/svg+xml,\" + returner;\n        return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n\n},{\"../tree/color\":53,\"../tree/dimension\":60,\"../tree/expression\":62,\"../tree/quoted\":77,\"../tree/url\":82,\"./function-registry\":26}],33:[function(require,module,exports){\nvar Keyword = require(\"../tree/keyword\"),\n    DetachedRuleset = require(\"../tree/detached-ruleset\"),\n    Dimension = require(\"../tree/dimension\"),\n    Color = require(\"../tree/color\"),\n    Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    URL = require(\"../tree/url\"),\n    Operation = require(\"../tree/operation\"),\n    functionRegistry = require(\"./function-registry\");\n\nvar isa = function (n, Type) {\n        return (n instanceof Type) ? Keyword.True : Keyword.False;\n    },\n    isunit = function (n, unit) {\n        if (unit === undefined) {\n            throw { type: \"Argument\", message: \"missing the required second argument to isunit.\" };\n        }\n        unit = typeof unit.value === \"string\" ? unit.value : unit;\n        if (typeof unit !== \"string\") {\n            throw { type: \"Argument\", message: \"Second argument to isunit should be a unit or a string.\" };\n        }\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n    },\n    getItemsFromNode = function(node) {\n        // handle non-array values as an array of length 1\n        // return 'undefined' if index is invalid\n        var items = Array.isArray(node.value) ?\n            node.value : Array(node);\n\n        return items;\n    };\nfunctionRegistry.addMultiple({\n    isruleset: function (n) {\n        return isa(n, DetachedRuleset);\n    },\n    iscolor: function (n) {\n        return isa(n, Color);\n    },\n    isnumber: function (n) {\n        return isa(n, Dimension);\n    },\n    isstring: function (n) {\n        return isa(n, Quoted);\n    },\n    iskeyword: function (n) {\n        return isa(n, Keyword);\n    },\n    isurl: function (n) {\n        return isa(n, URL);\n    },\n    ispixel: function (n) {\n        return isunit(n, 'px');\n    },\n    ispercentage: function (n) {\n        return isunit(n, '%');\n    },\n    isem: function (n) {\n        return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function (val, unit) {\n        if (!(val instanceof Dimension)) {\n            throw { type: \"Argument\",\n                message: \"the first argument to unit must be a number\" +\n                    (val instanceof Operation ? \". Have you forgotten parenthesis?\" : \"\") };\n        }\n        if (unit) {\n            if (unit instanceof Keyword) {\n                unit = unit.value;\n            } else {\n                unit = unit.toCSS();\n            }\n        } else {\n            unit = \"\";\n        }\n        return new Dimension(val.value, unit);\n    },\n    \"get-unit\": function (n) {\n        return new Anonymous(n.unit);\n    },\n    extract: function(values, index) {\n        index = index.value - 1; // (1-based index)\n\n        return getItemsFromNode(values)[index];\n    },\n    length: function(values) {\n        return new Dimension(getItemsFromNode(values).length);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/color\":53,\"../tree/detached-ruleset\":59,\"../tree/dimension\":60,\"../tree/keyword\":68,\"../tree/operation\":74,\"../tree/quoted\":77,\"../tree/url\":82,\"./function-registry\":26}],34:[function(require,module,exports){\nvar contexts = require(\"./contexts\"),\n    Parser = require('./parser/parser'),\n    LessError = require('./less-error'),\n    utils = require('./utils'),\n    PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n\nmodule.exports = function(environment) {\n\n    // FileInfo = {\n    //  'relativeUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n\n    var ImportManager = function(less, context, rootFileInfo) {\n        this.less = less;\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || [];  // Search paths, when importing\n        this.contents = {};             // map - filename to contents of all the files\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context;\n        // Deprecated? Unused outside of here, could be useful.\n        this.queue = [];        // Files which haven't been imported yet\n        this.files = {};        // Holds the imported parse trees.\n    };\n    \n    /**\n     * Add an import to be imported\n     * @param path - the raw path\n     * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n     * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n     * @param importOptions - import options\n     * @param callback - callback for when it is imported\n     */\n    ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n        var importManager = this,\n            pluginLoader = this.context.pluginManager.Loader;\n\n        this.queue.push(path);\n\n        var fileParsedFunc = function (e, root, fullPath) {\n            importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n            var importedEqualsRoot = fullPath === importManager.rootFilename;\n            if (importOptions.optional && e) {\n                callback(null, {rules:[]}, false, null);\n            }\n            else {\n                // Inline imports aren't cached here.\n                // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                // same name as they used to do before this comment and the condition below have been added.\n                if (!importManager.files[fullPath] && !importOptions.inline) {\n                    importManager.files[fullPath] = { root: root, options: importOptions };\n                } \n                if (e && !importManager.error) { importManager.error = e; }\n                callback(e, root, importedEqualsRoot, fullPath);\n            }\n        };\n\n        var newFileInfo = {\n            relativeUrls: this.context.relativeUrls,\n            entryPath: currentFileInfo.entryPath,\n            rootpath: currentFileInfo.rootpath,\n            rootFilename: currentFileInfo.rootFilename\n        };\n\n        var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n        if (!fileManager) {\n            fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n            return;\n        }\n\n        var loadFileCallback = function(loadedFile) {\n            var plugin,\n                resolvedFilename = loadedFile.filename,\n                contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n\n            // Pass on an updated rootpath if path of imported file is relative and file\n            // is in a (sub|sup) directory\n            //\n            // Examples:\n            // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/module/nav/'\n            // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/../'\n            newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n            if (newFileInfo.relativeUrls) {\n                newFileInfo.rootpath = fileManager.join(\n                    (importManager.context.rootpath || \"\"),\n                    fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n                if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                    newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                }\n            }\n            newFileInfo.filename = resolvedFilename;\n\n            var newEnv = new contexts.Parse(importManager.context);\n\n            newEnv.processImports = false;\n            importManager.contents[resolvedFilename] = contents;\n\n            if (currentFileInfo.reference || importOptions.reference) {\n                newFileInfo.reference = true;\n            }\n\n            if (importOptions.isPlugin) {\n                plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                if (plugin instanceof LessError) {\n                    fileParsedFunc(plugin, null, resolvedFilename);\n                }\n                else {\n                    fileParsedFunc(null, plugin, resolvedFilename);\n                }\n            } else if (importOptions.inline) {\n                fileParsedFunc(null, contents, resolvedFilename);\n            } else {\n                \n                // import (multiple) parse trees apparently get altered and can't be cached.\n                // TODO: investigate why this is\n                if (importManager.files[resolvedFilename] \n                    && !importManager.files[resolvedFilename].options.multiple\n                    && !importOptions.multiple) {\n\n                    fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                }\n                else {\n                    new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                        fileParsedFunc(e, root, resolvedFilename);\n                    });\n                }\n            }\n        };\n        var promise, context = utils.clone(this.context);\n\n        if (tryAppendExtension) {\n            context.ext = importOptions.isPlugin ? \".js\" : \".less\";\n        }\n\n        if (importOptions.isPlugin) {\n            promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n        }\n        else {\n            promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, \n                function(err, loadedFile) {\n                    if (err) {\n                        fileParsedFunc(err);\n                    } else {\n                        loadFileCallback(loadedFile);\n                    }\n                });\n        }\n        if (promise) {\n            promise.then(loadFileCallback, fileParsedFunc);\n        }\n\n    };\n    return ImportManager;\n};\n\n},{\"./contexts\":12,\"./less-error\":36,\"./parser/parser\":42,\"./utils\":86,\"promise\":undefined}],35:[function(require,module,exports){\nmodule.exports = function(environment, fileManagers) {\n    var SourceMapOutput, SourceMapBuilder, ParseTree, ImportManager, Environment;\n\n    var initial = {\n        version: [3, 0, 4],\n        data: require('./data'),\n        tree: require('./tree'),\n        Environment: (Environment = require(\"./environment/environment\")),\n        AbstractFileManager: require(\"./environment/abstract-file-manager\"),\n        AbstractPluginLoader: require(\"./environment/abstract-plugin-loader\"),\n        environment: (environment = new Environment(environment, fileManagers)),\n        visitors: require('./visitors'),\n        Parser: require('./parser/parser'),\n        functions: require('./functions')(environment),\n        contexts: require(\"./contexts\"),\n        SourceMapOutput: (SourceMapOutput = require('./source-map-output')(environment)),\n        SourceMapBuilder: (SourceMapBuilder = require('./source-map-builder')(SourceMapOutput, environment)),\n        ParseTree: (ParseTree = require('./parse-tree')(SourceMapBuilder)),\n        ImportManager: (ImportManager = require('./import-manager')(environment)),\n        render: require(\"./render\")(environment, ParseTree, ImportManager),\n        parse: require(\"./parse\")(environment, ParseTree, ImportManager),\n        LessError: require('./less-error'),\n        transformTree: require('./transform-tree'),\n        utils: require('./utils'),\n        PluginManager: require('./plugin-manager'),\n        logger: require('./logger')\n    };\n\n    // Create a public API\n\n    var ctor = function(t) {\n        return function() {\n            var obj = Object.create(t.prototype);\n            t.apply(obj, Array.prototype.slice.call(arguments, 0));\n            return obj;\n        };\n    };\n    var t, api = Object.create(initial);\n    for (var n in initial.tree) {\n        /* eslint guard-for-in: 0 */\n        t = initial.tree[n];\n        if (typeof t === \"function\") {\n            api[n.toLowerCase()] = ctor(t);\n        }\n        else {\n            api[n] = Object.create(null);\n            for (var o in t) {\n                /* eslint guard-for-in: 0 */\n                api[n][o.toLowerCase()] = ctor(t[o]);\n            }\n        }\n    }\n\n    return api;\n};\n\n},{\"./contexts\":12,\"./data\":14,\"./environment/abstract-file-manager\":17,\"./environment/abstract-plugin-loader\":18,\"./environment/environment\":19,\"./functions\":27,\"./import-manager\":34,\"./less-error\":36,\"./logger\":37,\"./parse\":39,\"./parse-tree\":38,\"./parser/parser\":42,\"./plugin-manager\":43,\"./render\":44,\"./source-map-builder\":45,\"./source-map-output\":46,\"./transform-tree\":47,\"./tree\":65,\"./utils\":86,\"./visitors\":90}],36:[function(require,module,exports){\nvar utils = require('./utils');\n/**\n * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n * Besides standard .message it keeps some additional data like a path to the file where the error\n * occurred along with line and column numbers.\n *\n * @class\n * @extends Error\n * @type {module.LessError}\n *\n * @prop {string} type\n * @prop {string} filename\n * @prop {number} index\n * @prop {number} line\n * @prop {number} column\n * @prop {number} callLine\n * @prop {number} callExtract\n * @prop {string[]} extract\n *\n * @param {Object} e              - An error object to wrap around or just a descriptive object\n * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n * @param {string} [currentFilename]\n */\nvar LessError = module.exports = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n\n    var filename = e.filename || currentFilename;\n\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n        var input = fileContentMap.contents[filename],\n            loc = utils.getLocation(e.index, input),\n            line = loc.line,\n            col  = loc.column,\n            callLine = e.call && utils.getLocation(e.call, input).line,\n            lines = input ? input.split('\\n') : '';\n\n        this.type = e.type || 'Syntax';\n        this.filename = filename;\n        this.index = e.index;\n        this.line = typeof line === 'number' ? line + 1 : null;\n        this.column = col;\n\n        if (!this.line && this.stack) {\n            var found = this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);\n\n            if (found) {\n                if (found[2]) {\n                    this.line = parseInt(found[2]) - 2;\n                }\n                if (found[3]) {\n                    this.column = parseInt(found[3]);\n                }\n            }\n        }\n\n        this.callLine = callLine + 1;\n        this.callExtract = lines[callLine];\n\n        this.extract = [\n            lines[this.line - 2],\n            lines[this.line - 1],\n            lines[this.line]\n        ];\n\n    }\n\n};\n\nif (typeof Object.create === 'undefined') {\n    var F = function () {};\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n} else {\n    LessError.prototype = Object.create(Error.prototype);\n}\n\nLessError.prototype.constructor = LessError;\n\n/**\n * An overridden version of the default Object.prototype.toString\n * which uses additional information to create a helpful message.\n *\n * @param {Object} options\n * @returns {string}\n */\nLessError.prototype.toString = function(options) {\n    options = options || {};\n\n    var message = '';\n    var extract = this.extract || [];\n    var error = [];\n    var stylize = function (str) { return str; };\n    if (options.stylize) {\n        var type = typeof options.stylize;\n        if (type !== 'function') {\n            throw Error('options.stylize should be a function, got a ' + type + '!');\n        }\n        stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n        if (typeof extract[0] === 'string') {\n            error.push(stylize((this.line - 1) + ' ' + extract[0], 'grey'));\n        }\n\n        if (typeof extract[1] === 'string') {\n            var errorTxt = this.line + ' ';\n            if (extract[1]) {\n                errorTxt += extract[1].slice(0, this.column) +\n                    stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                        extract[1].slice(this.column + 1), 'red'), 'inverse');\n            }\n            error.push(errorTxt);\n        }\n\n        if (typeof extract[2] === 'string') {\n            error.push(stylize((this.line + 1) + ' ' + extract[2], 'grey'));\n        }\n        error = error.join('\\n') + stylize('', 'reset') + '\\n';\n    }\n\n    message += stylize(this.type + 'Error: ' + this.message, 'red');\n    if (this.filename) {\n        message += stylize(' in ', 'red') + this.filename;\n    }\n    if (this.line) {\n        message += stylize(' on line ' + this.line + ', column ' + (this.column + 1) + ':', 'grey');\n    }\n\n    message += '\\n' + error;\n\n    if (this.callLine) {\n        message += stylize('from ', 'red') + (this.filename || '') + '/n';\n        message += stylize(this.callLine, 'grey') + ' ' + this.callExtract + '/n';\n    }\n\n    return message;\n};\n\n},{\"./utils\":86}],37:[function(require,module,exports){\nmodule.exports = {\n    error: function(msg) {\n        this._fireEvent(\"error\", msg);\n    },\n    warn: function(msg) {\n        this._fireEvent(\"warn\", msg);\n    },\n    info: function(msg) {\n        this._fireEvent(\"info\", msg);\n    },\n    debug: function(msg) {\n        this._fireEvent(\"debug\", msg);\n    },\n    addListener: function(listener) {\n        this._listeners.push(listener);\n    },\n    removeListener: function(listener) {\n        for (var i = 0; i < this._listeners.length; i++) {\n            if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n            }\n        }\n    },\n    _fireEvent: function(type, msg) {\n        for (var i = 0; i < this._listeners.length; i++) {\n            var logFunction = this._listeners[i][type];\n            if (logFunction) {\n                logFunction(msg);\n            }\n        }\n    },\n    _listeners: []\n};\n\n},{}],38:[function(require,module,exports){\nvar LessError = require('./less-error'),\n    transformTree = require(\"./transform-tree\"),\n    logger = require(\"./logger\");\n\nmodule.exports = function(SourceMapBuilder) {\n    var ParseTree = function(root, imports) {\n        this.root = root;\n        this.imports = imports;\n    };\n\n    ParseTree.prototype.toCSS = function(options) {\n        var evaldRoot, result = {}, sourceMapBuilder;\n        try {\n            evaldRoot = transformTree(this.root, options);\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        try {\n            var compress = Boolean(options.compress);\n            if (compress) {\n                logger.warn(\"The compress option has been deprecated. We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.\");\n            }\n\n            var toCSSOptions = {\n                compress: compress,\n                dumpLineNumbers: options.dumpLineNumbers,\n                strictUnits: Boolean(options.strictUnits),\n                numPrecision: 8};\n\n            if (options.sourceMap) {\n                sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n            } else {\n                result.css = evaldRoot.toCSS(toCSSOptions);\n            }\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        if (options.pluginManager) {\n            var postProcessors = options.pluginManager.getPostProcessors();\n            for (var i = 0; i < postProcessors.length; i++) {\n                result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n            }\n        }\n        if (options.sourceMap) {\n            result.map = sourceMapBuilder.getExternalSourceMap();\n        }\n\n        result.imports = [];\n        for (var file in this.imports.files) {\n            if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                result.imports.push(file);\n            }\n        }\n        return result;\n    };\n    return ParseTree;\n};\n\n},{\"./less-error\":36,\"./logger\":37,\"./transform-tree\":47}],39:[function(require,module,exports){\nvar PromiseConstructor,\n    contexts = require(\"./contexts\"),\n    Parser = require('./parser/parser'),\n    PluginManager = require('./plugin-manager'),\n    LessError = require('./less-error'),\n    utils = require('./utils');\n\nmodule.exports = function(environment, ParseTree, ImportManager) {\n    var parse = function (input, options, callback) {\n\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.defaults(this.options, {});\n        }\n        else {\n            options = utils.defaults(this.options, options || {});\n        }\n\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                parse.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            var context,\n                rootFileInfo,\n                pluginManager = new PluginManager(this, !options.reUsePluginManager);\n\n            options.pluginManager = pluginManager;\n\n            context = new contexts.Parse(options);\n\n            if (options.rootFileInfo) {\n                rootFileInfo = options.rootFileInfo;\n            } else {\n                var filename = options.filename || \"input\";\n                var entryPath = filename.replace(/[^\\/\\\\]*$/, \"\");\n                rootFileInfo = {\n                    filename: filename,\n                    relativeUrls: context.relativeUrls,\n                    rootpath: context.rootpath || \"\",\n                    currentDirectory: entryPath,\n                    entryPath: entryPath,\n                    rootFilename: filename\n                };\n                // add in a missing trailing slash\n                if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== \"/\") {\n                    rootFileInfo.rootpath += \"/\";\n                }\n            }\n\n            var imports = new ImportManager(this, context, rootFileInfo);\n            this.importManager = imports;\n\n            // TODO: allow the plugins to be just a list of paths or names\n            // Do an async plugin queue like lessc\n\n            if (options.plugins) {\n                options.plugins.forEach(function(plugin) {\n                    var evalResult, contents;\n                    if (plugin.fileContent) {\n                        contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                        evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n                        if (evalResult instanceof LessError) {\n                            return callback(evalResult);\n                        }\n                    }\n                    else {\n                        pluginManager.addPlugin(plugin);\n                    }\n                });\n            }\n\n            new Parser(context, imports, rootFileInfo)\n                .parse(input, function (e, root) {\n                    if (e) { return callback(e); }\n                    callback(null, root, imports, options);\n                }, options);\n        }\n    };\n    return parse;\n};\n\n},{\"./contexts\":12,\"./less-error\":36,\"./parser/parser\":42,\"./plugin-manager\":43,\"./utils\":86,\"promise\":undefined}],40:[function(require,module,exports){\n// Split the input into chunks.\nmodule.exports = function (input, fail) {\n    var len = input.length, level = 0, parenLevel = 0,\n        lastOpening, lastOpeningParen, lastMultiComment, lastMultiCommentEndBrace,\n        chunks = [], emitFrom = 0,\n        chunkerCurrentIndex, currentChunkStartIndex, cc, cc2, matched;\n\n    function emitChunk(force) {\n        var len = chunkerCurrentIndex - emitFrom;\n        if (((len < 512) && !force) || !len) {\n            return;\n        }\n        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n        emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n        cc = input.charCodeAt(chunkerCurrentIndex);\n        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n            // a-z or whitespace\n            continue;\n        }\n\n        switch (cc) {\n            case 40:                        // (\n                parenLevel++;\n                lastOpeningParen = chunkerCurrentIndex;\n                continue;\n            case 41:                        // )\n                if (--parenLevel < 0) {\n                    return fail(\"missing opening `(`\", chunkerCurrentIndex);\n                }\n                continue;\n            case 59:                        // ;\n                if (!parenLevel) { emitChunk(); }\n                continue;\n            case 123:                       // {\n                level++;\n                lastOpening = chunkerCurrentIndex;\n                continue;\n            case 125:                       // }\n                if (--level < 0) {\n                    return fail(\"missing opening `{`\", chunkerCurrentIndex);\n                }\n                if (!level && !parenLevel) { emitChunk(); }\n                continue;\n            case 92:                        // \\\n                if (chunkerCurrentIndex < len - 1) { chunkerCurrentIndex++; continue; }\n                return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n            case 34:\n            case 39:\n            case 96:                        // \", ' and `\n                matched = 0;\n                currentChunkStartIndex = chunkerCurrentIndex;\n                for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                    cc2 = input.charCodeAt(chunkerCurrentIndex);\n                    if (cc2 > 96) { continue; }\n                    if (cc2 == cc) { matched = 1; break; }\n                    if (cc2 == 92) {        // \\\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                }\n                if (matched) { continue; }\n                return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n            case 47:                        // /, check for comment\n                if (parenLevel || (chunkerCurrentIndex == len - 1)) { continue; }\n                cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                if (cc2 == 47) {\n                    // //, find lnfeed\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) { break; }\n                    }\n                } else if (cc2 == 42) {\n                    // /*, find */\n                    lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 == 125) { lastMultiCommentEndBrace = chunkerCurrentIndex; }\n                        if (cc2 != 42) { continue; }\n                        if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) { break; }\n                    }\n                    if (chunkerCurrentIndex == len - 1) {\n                        return fail(\"missing closing `*/`\", currentChunkStartIndex);\n                    }\n                    chunkerCurrentIndex++;\n                }\n                continue;\n            case 42:                       // *, check for unmatched */\n                if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                    return fail(\"unmatched `/*`\", chunkerCurrentIndex);\n                }\n                continue;\n        }\n    }\n\n    if (level !== 0) {\n        if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n            return fail(\"missing closing `}` or `*/`\", lastOpening);\n        } else {\n            return fail(\"missing closing `}`\", lastOpening);\n        }\n    } else if (parenLevel !== 0) {\n        return fail(\"missing closing `)`\", lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n};\n\n},{}],41:[function(require,module,exports){\nvar chunker = require('./chunker');\n\nmodule.exports = function() {\n    var input,       // Less input string\n        j,           // current chunk\n        saveStack = [],   // holds state for backtracking\n        furthest,    // furthest index the parser has gone to\n        furthestPossibleErrorMessage, // if this is furthest we got to, this is the probably cause\n        chunks,      // chunkified input\n        current,     // current chunk\n        currentPos,  // index of current chunk, in `input`\n        parserInput = {};\n\n    var CHARCODE_SPACE = 32,\n        CHARCODE_TAB = 9,\n        CHARCODE_LF = 10,\n        CHARCODE_CR = 13,\n        CHARCODE_PLUS = 43,\n        CHARCODE_COMMA = 44,\n        CHARCODE_FORWARD_SLASH = 47,\n        CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n        var oldi = parserInput.i, oldj = j,\n            curr = parserInput.i - currentPos,\n            endIndex = parserInput.i + current.length - curr,\n            mem = (parserInput.i += length),\n            inp = input,\n            c, nextChar, comment;\n\n        for (; parserInput.i < endIndex; parserInput.i++) {\n            c = inp.charCodeAt(parserInput.i);\n\n            if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                nextChar = inp.charAt(parserInput.i + 1);\n                if (nextChar === '/') {\n                    comment = {index: parserInput.i, isLineComment: true};\n                    var nextNewLine = inp.indexOf(\"\\n\", parserInput.i + 2);\n                    if (nextNewLine < 0) {\n                        nextNewLine = endIndex;\n                    }\n                    parserInput.i = nextNewLine;\n                    comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                    parserInput.commentStore.push(comment);\n                    continue;\n                } else if (nextChar === '*') {\n                    var nextStarSlash = inp.indexOf(\"*/\", parserInput.i + 2);\n                    if (nextStarSlash >= 0) {\n                        comment = {\n                            index: parserInput.i,\n                            text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                            isLineComment: false\n                        };\n                        parserInput.i += comment.text.length - 1;\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                }\n                break;\n            }\n\n            if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                break;\n            }\n        }\n\n        current = current.slice(length + parserInput.i - mem + curr);\n        currentPos = parserInput.i;\n\n        if (!current.length) {\n            if (j < chunks.length - 1) {\n                current = chunks[++j];\n                skipWhitespace(0); // skip space at the beginning of a chunk\n                return true; // things changed\n            }\n            parserInput.finished = true;\n        }\n\n        return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = function() {\n        currentPos = parserInput.i;\n        saveStack.push( { current: current, i: parserInput.i, j: j });\n    };\n    parserInput.restore = function(possibleErrorMessage) {\n\n        if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n            furthest = parserInput.i;\n            furthestPossibleErrorMessage = possibleErrorMessage;\n        }\n        var state = saveStack.pop();\n        current = state.current;\n        currentPos = parserInput.i = state.i;\n        j = state.j;\n    };\n    parserInput.forget = function() {\n        saveStack.pop();\n    };\n    parserInput.isWhitespace = function (offset) {\n        var pos = parserInput.i + (offset || 0),\n            code = input.charCodeAt(pos);\n        return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n    };\n\n    // Specialization of $(tok)\n    parserInput.$re = function(tok) {\n        if (parserInput.i > currentPos) {\n            current = current.slice(parserInput.i - currentPos);\n            currentPos = parserInput.i;\n        }\n\n        var m = tok.exec(current);\n        if (!m) {\n            return null;\n        }\n\n        skipWhitespace(m[0].length);\n        if (typeof m === \"string\") {\n            return m;\n        }\n\n        return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = function(tok) {\n        if (input.charAt(parserInput.i) !== tok) {\n            return null;\n        }\n        skipWhitespace(1);\n        return tok;\n    };\n\n    parserInput.$str = function(tok) {\n        var tokLength = tok.length;\n\n        // https://jsperf.com/string-startswith/21\n        for (var i = 0; i < tokLength; i++) {\n            if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                return null;\n            }\n        }\n\n        skipWhitespace(tokLength);\n        return tok;\n    };\n\n    parserInput.$quoted = function() {\n\n        var startChar = input.charAt(parserInput.i);\n        if (startChar !== \"'\" && startChar !== '\"') {\n            return;\n        }\n        var length = input.length,\n            currentPosition = parserInput.i;\n\n        for (var i = 1; i + currentPosition < length; i++) {\n            var nextChar = input.charAt(i + currentPosition);\n            switch (nextChar) {\n                case \"\\\\\":\n                    i++;\n                    continue;\n                case \"\\r\":\n                case \"\\n\":\n                    break;\n                case startChar:\n                    var str = input.substr(currentPosition, i + 1);\n                    skipWhitespace(i + 1);\n                    return str;\n                default:\n            }\n        }\n        return null;\n    };\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false;\n\n    // Same as $(), but don't change the state of the parser,\n    // just return the match.\n    parserInput.peek = function(tok) {\n        if (typeof tok === 'string') {\n            // https://jsperf.com/string-startswith/21\n            for (var i = 0; i < tok.length; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return tok.test(current);\n        }\n    };\n\n    // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n    parserInput.peekChar = function(tok) {\n        return input.charAt(parserInput.i) === tok;\n    };\n\n    parserInput.currentChar = function() {\n        return input.charAt(parserInput.i);\n    };\n\n    parserInput.getInput = function() {\n        return input;\n    };\n\n    parserInput.peekNotNumeric = function() {\n        var c = input.charCodeAt(parserInput.i);\n        // Is the first char of the dimension 0-9, '.', '+' or '-'\n        return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = function(str, chunkInput, failFunction) {\n        input = str;\n        parserInput.i = j = currentPos = furthest = 0;\n\n        // chunking apparently makes things quicker (but my tests indicate\n        // it might actually make things slower in node at least)\n        // and it is a non-perfect parse - it can't recognise\n        // unquoted urls, meaning it can't distinguish comments\n        // meaning comments with quotes or {}() in them get 'counted'\n        // and then lead to parse errors.\n        // In addition if the chunking chunks in the wrong place we might\n        // not be able to parse a parser statement in one go\n        // this is officially deprecated but can be switched on via an option\n        // in the case it causes too much performance issues.\n        if (chunkInput) {\n            chunks = chunker(str, failFunction);\n        } else {\n            chunks = [str];\n        }\n\n        current = chunks[0];\n\n        skipWhitespace(0);\n    };\n\n    parserInput.end = function() {\n        var message,\n            isFinished = parserInput.i >= input.length;\n\n        if (parserInput.i < furthest) {\n            message = furthestPossibleErrorMessage;\n            parserInput.i = furthest;\n        }\n        return {\n            isFinished: isFinished,\n            furthest: parserInput.i,\n            furthestPossibleErrorMessage: message,\n            furthestReachedEnd: parserInput.i >= input.length - 1,\n            furthestChar: input[parserInput.i]\n        };\n    };\n\n    return parserInput;\n};\n\n},{\"./chunker\":40}],42:[function(require,module,exports){\nvar LessError = require('../less-error'),\n    tree = require(\"../tree\"),\n    visitors = require(\"../visitors\"),\n    getParserInput = require(\"./parser-input\"),\n    utils = require(\"../utils\"),\n    functionRegistry = require('../functions/function-registry');\n\n//\n// less.js - parser\n//\n//    A relatively straight-forward predictive parser.\n//    There is no tokenization/lexing stage, the input is parsed\n//    in one sweep.\n//\n//    To make the parser fast enough to run in the browser, several\n//    optimization had to be made:\n//\n//    - Matching and slicing on a huge input is often cause of slowdowns.\n//      The solution is to chunkify the input into smaller strings.\n//      The chunks are stored in the `chunks` var,\n//      `j` holds the current chunk index, and `currentPos` holds\n//      the index of the current chunk in relation to `input`.\n//      This gives us an almost 4x speed-up.\n//\n//    - In many cases, we don't need to match individual tokens;\n//      for example, if a value doesn't hold any variables, operations\n//      or dynamic references, the parser can effectively 'skip' it,\n//      treating it as a literal.\n//      An example would be '1px solid #000' - which evaluates to itself,\n//      we don't need to know what the individual components are.\n//      The drawback, of course is that you don't get the benefits of\n//      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n//      and a smaller speed-up in the code-gen.\n//\n//\n//    Token matching is done with the `$` function, which either takes\n//    a terminal string or regexp, or a non-terminal function to call.\n//    It also takes care of moving all the indices forwards.\n//\n\nvar Parser = function Parser(context, imports, fileInfo) {\n    var parsers,\n        parserInput = getParserInput();\n\n    function error(msg, type) {\n        throw new LessError(\n            {\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            },\n            imports\n        );\n    }\n\n    function expect(arg, msg, index) {\n        // some older browsers return typeof 'function' for RegExp\n        var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n        if (result) {\n            return result;\n        }\n        error(msg || (typeof arg === 'string' ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\n                                               : \"unexpected token\"));\n    }\n\n    // Specialization of expect()\n    function expectChar(arg, msg) {\n        if (parserInput.$char(arg)) {\n            return arg;\n        }\n        error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n    }\n\n    function getDebugInfo(index) {\n        var filename = fileInfo.filename;\n\n        return {\n            lineNumber: utils.getLocation(index, parserInput.getInput()).line + 1,\n            fileName: filename\n        };\n    }\n\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n        var result, returnNodes = [];\n        var parser = parserInput;\n\n        try {\n            parser.start(str, false, function fail(msg, index) {\n                callback({\n                    message: msg,\n                    index: index + currentIndex\n                });\n            });\n            for (var x = 0, p, i; (p = parseList[x]); x++) {\n                i = parser.i;\n                result = parsers[p]();\n                if (result) {\n                    result._index = i + currentIndex;\n                    result._fileInfo = fileInfo;\n                    returnNodes.push(result);\n                }\n                else {\n                    returnNodes.push(null);\n                }\n            }\n\n            var endInfo = parser.end();\n            if (endInfo.isFinished) {\n                callback(null, returnNodes);\n            }\n            else {\n                callback(true, null);\n            }\n        } catch (e) {\n            throw new LessError({\n                index: e.index + currentIndex,\n                message: e.message\n            }, imports, fileInfo.filename);\n        }\n    }\n    \n    //\n    // The Parser\n    //\n    return {\n        parserInput: parserInput,\n        imports: imports,\n        fileInfo: fileInfo,\n        parseNode: parseNode,\n        //\n        // Parse an input string into an abstract syntax tree,\n        // @param str A string containing 'less' markup\n        // @param callback call `callback` when done.\n        // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n        //\n        parse: function (str, callback, additionalData) {\n            var root, error = null, globalVars, modifyVars, ignored, preText = \"\";\n\n            globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + '\\n' : '';\n            modifyVars = (additionalData && additionalData.modifyVars) ? '\\n' + Parser.serializeVars(additionalData.modifyVars) : '';\n\n            if (context.pluginManager) {\n                var preProcessors = context.pluginManager.getPreProcessors();\n                for (var i = 0; i < preProcessors.length; i++) {\n                    str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\n                }\n            }\n\n            if (globalVars || (additionalData && additionalData.banner)) {\n                preText = ((additionalData && additionalData.banner) ? additionalData.banner : \"\") + globalVars;\n                ignored = imports.contentsIgnoredChars;\n                ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                ignored[fileInfo.filename] += preText.length;\n            }\n\n            str = str.replace(/\\r\\n?/g, '\\n');\n            // Remove potential UTF Byte Order Mark\n            str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n            imports.contents[fileInfo.filename] = str;\n\n            // Start with the primary rule.\n            // The whole syntax tree is held under a Ruleset node,\n            // with the `root` property set to true, so no `{}` are\n            // output. The callback is called when the input is parsed.\n            try {\n                parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                    throw new LessError({\n                        index: index,\n                        type: 'Parse',\n                        message: msg,\n                        filename: fileInfo.filename\n                    }, imports);\n                });\n\n                tree.Node.prototype.parse = this;\n                root = new tree.Ruleset(null, this.parsers.primary());\n                tree.Node.prototype.rootNode = root;\n                root.root = true;\n                root.firstRoot = true;\n                root.functionRegistry = functionRegistry.inherit();\n                \n            } catch (e) {\n                return callback(new LessError(e, imports, fileInfo.filename));\n            }\n\n            // If `i` is smaller than the `input.length - 1`,\n            // it means the parser wasn't able to parse the whole\n            // string, so we've got a parsing error.\n            //\n            // We try to extract a \\n delimited string,\n            // showing the line where the parse error occurred.\n            // We split it up into two parts (the part which parsed,\n            // and the part which didn't), so we can color them differently.\n            var endInfo = parserInput.end();\n            if (!endInfo.isFinished) {\n\n                var message = endInfo.furthestPossibleErrorMessage;\n\n                if (!message) {\n                    message = \"Unrecognised input\";\n                    if (endInfo.furthestChar === '}') {\n                        message += \". Possibly missing opening '{'\";\n                    } else if (endInfo.furthestChar === ')') {\n                        message += \". Possibly missing opening '('\";\n                    } else if (endInfo.furthestReachedEnd) {\n                        message += \". Possibly missing something\";\n                    }\n                }\n\n                error = new LessError({\n                    type: \"Parse\",\n                    message: message,\n                    index: endInfo.furthest,\n                    filename: fileInfo.filename\n                }, imports);\n            }\n\n            var finish = function (e) {\n                e = error || e || imports.error;\n\n                if (e) {\n                    if (!(e instanceof LessError)) {\n                        e = new LessError(e, imports, fileInfo.filename);\n                    }\n\n                    return callback(e);\n                }\n                else {\n                    return callback(null, root);\n                }\n            };\n\n            if (context.processImports !== false) {\n                new visitors.ImportVisitor(imports, finish)\n                    .run(root);\n            } else {\n                return finish();\n            }\n        },\n\n        //\n        // Here in, the parsing rules/functions\n        //\n        // The basic structure of the syntax tree generated is as follows:\n        //\n        //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n        //\n        // Here's some Less code:\n        //\n        //    .class {\n        //      color: #fff;\n        //      border: 1px solid #000;\n        //      width: @w + 4px;\n        //      > .child {...}\n        //    }\n        //\n        // And here's what the parse tree might look like:\n        //\n        //     Ruleset (Selector '.class', [\n        //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n        //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n        //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n        //         Ruleset (Selector [Element '>', '.child'], [...])\n        //     ])\n        //\n        //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n        //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n        //  first, before parsing, that's when we use `peek()`.\n        //\n        parsers: parsers = {\n            //\n            // The `primary` rule is the *entry* and *exit* point of the parser.\n            // The rules here can appear at any level of the parse tree.\n            //\n            // The recursive nature of the grammar is an interplay between the `block`\n            // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n            // as represented by this simplified grammar:\n            //\n            //     primary  →  (ruleset | declaration)+\n            //     ruleset  →  selector+ block\n            //     block    →  '{' primary '}'\n            //\n            // Only at one point is the primary rule not called from the\n            // block rule: at the root level.\n            //\n            primary: function () {\n                var mixin = this.mixin, root = [], node;\n\n                while (true) {\n                    while (true) {\n                        node = this.comment();\n                        if (!node) { break; }\n                        root.push(node);\n                    }\n                    // always process comments before deciding if finished\n                    if (parserInput.finished) {\n                        break;\n                    }\n                    if (parserInput.peek('}')) {\n                        break;\n                    }\n\n                    node = this.extendRule();\n                    if (node) {\n                        root = root.concat(node);\n                        continue;\n                    }\n\n                    node = mixin.definition() || this.declaration() || this.ruleset() ||\n                        mixin.call() || this.variableCall() || this.entities.call() || this.atrule();\n                    if (node) {\n                        root.push(node);\n                    } else {\n                        var foundSemiColon = false;\n                        while (parserInput.$char(\";\")) {\n                            foundSemiColon = true;\n                        }\n                        if (!foundSemiColon) {\n                            break;\n                        }\n                    }\n                }\n\n                return root;\n            },\n\n            // comments are collected by the main parsing mechanism and then assigned to nodes\n            // where the current structure allows it\n            comment: function () {\n                if (parserInput.commentStore.length) {\n                    var comment = parserInput.commentStore.shift();\n                    return new(tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                }\n            },\n\n            //\n            // Entities are tokens which can be found inside an Expression\n            //\n            entities: {\n                //\n                // A string, which supports escaping \" and '\n                //\n                //     \"milky way\" 'he\\'s the one!'\n                //\n                quoted: function () {\n                    var str, index = parserInput.i, isEscaped = false;\n\n                    parserInput.save();\n                    if (parserInput.$char(\"~\")) {\n                        isEscaped = true;\n                    }\n                    str = parserInput.$quoted();\n                    if (!str) {\n                        parserInput.restore();\n                        return;\n                    }\n                    parserInput.forget();\n\n                    return new(tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                },\n\n                //\n                // A catch-all word, such as:\n                //\n                //     black border-collapse\n                //\n                keyword: function () {\n                    var k = parserInput.$char(\"%\") || parserInput.$re(/^\\[?[_A-Za-z-][_A-Za-z0-9-]*\\]?/);\n                    if (k) {\n                        return tree.Color.fromKeyword(k) || new(tree.Keyword)(k);\n                    }\n                },\n\n                //\n                // A function call\n                //\n                //     rgb(255, 0, 255)\n                //\n                // The arguments are parsed with the `entities.arguments` parser.\n                //\n                call: function () {\n                    var name, args, func, index = parserInput.i;\n\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (parserInput.peek(/^url\\(/i)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n                    if (!name) {\n                        parserInput.forget(); \n                        return;\n                    }\n\n                    name = name[1];\n                    func = this.customFuncCall(name);\n                    if (func) {\n                        args = func.parse();\n                        if (args && func.stop) {\n                            parserInput.forget();\n                            return args;\n                        }\n                    }\n\n                    args = this.arguments(args);\n\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore(\"Could not parse call arguments or missing ')'\");\n                        return;\n                    }\n\n                    parserInput.forget();\n                    \n                    return new(tree.Call)(name, args, index, fileInfo);\n                },\n                \n                //\n                // Parsing rules for functions with non-standard args, e.g.:\n                //\n                //     boolean(not(2 > 1))\n                //\n                //     This is a quick prototype, to be modified/improved when\n                //     more custom-parsed funcs come (e.g. `selector(...)`)\n                //\n\n                customFuncCall: function (name) {\n                    /* Ideally the table is to be moved out of here for faster perf.,\n                       but it's quite tricky since it relies on all these `parsers`\n                       and `expect` available only here */\n                    return {\n                        alpha:   f(parsers.ieAlpha, true),\n                        boolean: f(condition),\n                        'if':    f(condition)\n                    }[name.toLowerCase()];\n\n                    function f(parse, stop) {\n                        return {\n                            parse: parse, // parsing function\n                            stop:  stop   // when true - stop after parse() and return its result, \n                                          // otherwise continue for plain args\n                        };\n                    }\n                \n                    function condition() {\n                        return [expect(parsers.condition, 'expected condition')];\n                    }\n                },\n\n                arguments: function (prevArgs) {\n                    var argsComma = prevArgs || [],\n                        argsSemiColon = [],\n                        isSemiColonSeparated, value;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (prevArgs) {\n                            prevArgs = false;\n                        } else {\n                            value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                            if (!value) {\n                                break;\n                            }\n\n                            if (value.value && value.value.length == 1) {\n                                value = value.value[0];\n                            }\n\n                            argsComma.push(value);\n                        }\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n                            isSemiColonSeparated = true;\n                            value = (argsComma.length < 1) ? argsComma[0]\n                                : new tree.Value(argsComma);\n                            argsSemiColon.push(value);\n                            argsComma = [];\n                        }\n                    }\n\n                    parserInput.forget();\n                    return isSemiColonSeparated ? argsSemiColon : argsComma;\n                },\n                literal: function () {\n                    return this.dimension() ||\n                           this.color() ||\n                           this.quoted() ||\n                           this.unicodeDescriptor();\n                },\n\n                // Assignments are argument entities for calls.\n                // They are present in ie filter properties as shown below.\n                //\n                //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                //\n\n                assignment: function () {\n                    var key, value;\n                    parserInput.save();\n                    key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                    if (!key) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char('=')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    value = parsers.entity();\n                    if (value) {\n                        parserInput.forget();\n                        return new(tree.Assignment)(key, value);\n                    } else {\n                        parserInput.restore();\n                    }\n                },\n\n                //\n                // Parse url() tokens\n                //\n                // We use a specific rule for urls, because they don't really behave like\n                // standard function calls. The difference is that the argument doesn't have\n                // to be enclosed within a string, so it can't be parsed as an Expression.\n                //\n                url: function () {\n                    var value, index = parserInput.i;\n\n                    parserInput.autoCommentAbsorb = false;\n\n                    if (!parserInput.$str(\"url(\")) {\n                        parserInput.autoCommentAbsorb = true;\n                        return;\n                    }\n\n                    value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || \"\";\n\n                    parserInput.autoCommentAbsorb = true;\n\n                    expectChar(')');\n\n                    return new(tree.URL)((value.value != null || \n                        value instanceof tree.Variable || \n                        value instanceof tree.Property) ?\n                        value : new(tree.Anonymous)(value, index), index, fileInfo);\n                },\n\n                //\n                // A Variable entity, such as `@fink`, in\n                //\n                //     width: @fink + 2px\n                //\n                // We use a different parser for variable definitions,\n                // see `parsers.variable`.\n                //\n                variable: function () {\n                    var name, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                        return new(tree.Variable)(name, index, fileInfo);\n                    }\n                },\n\n                // A variable entity using the protective {} e.g. @{var}\n                variableCurly: function () {\n                    var curly, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                        return new(tree.Variable)(\"@\" + curly[1], index, fileInfo);\n                    }\n                },\n                //\n                // A Property accessor, such as `$color`, in\n                //\n                //     background-color: $color\n                //\n                property: function () {\n                    var name, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                        return new(tree.Property)(name, index, fileInfo);\n                    }\n                },\n\n                // A property entity useing the protective {} e.g. ${prop}\n                propertyCurly: function () {\n                    var curly, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                        return new(tree.Property)(\"$\" + curly[1], index, fileInfo);\n                    }\n                },\n                //\n                // A Hexadecimal color\n                //\n                //     #4F3C2F\n                //\n                // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                //\n                color: function () {\n                    var rgb;\n\n                    if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/))) {\n                        // strip colons, brackets, whitespaces and other characters that should not\n                        // definitely be part of color string\n                        var colorCandidateString = rgb.input.match(/^#([\\w]+).*/);\n                        colorCandidateString = colorCandidateString[1];\n                        if (!colorCandidateString.match(/^[A-Fa-f0-9]+$/)) { // verify if candidate consists only of allowed HEX characters\n                            error(\"Invalid HEX color code\");\n                        }\n                        return new(tree.Color)(rgb[1], undefined, '#' + colorCandidateString);\n                    }\n                },\n\n                colorKeyword: function () {\n                    parserInput.save();\n                    var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                    parserInput.autoCommentAbsorb = false;\n                    var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                    parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                    if (!k) {\n                        parserInput.forget();\n                        return;\n                    }\n                    parserInput.restore();\n                    var color = tree.Color.fromKeyword(k);\n                    if (color) {\n                        parserInput.$str(k);\n                        return color;\n                    }\n                },\n\n                //\n                // A Dimension, that is, a number and a unit\n                //\n                //     0.5em 95%\n                //\n                dimension: function () {\n                    if (parserInput.peekNotNumeric()) {\n                        return;\n                    }\n\n                    var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                    if (value) {\n                        return new(tree.Dimension)(value[1], value[2]);\n                    }\n                },\n\n                //\n                // A unicode descriptor, as is used in unicode-range\n                //\n                // U+0??  or U+00A1-00A9\n                //\n                unicodeDescriptor: function () {\n                    var ud;\n\n                    ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                    if (ud) {\n                        return new(tree.UnicodeDescriptor)(ud[0]);\n                    }\n                },\n\n                //\n                // JavaScript code to be evaluated\n                //\n                //     `window.location.href`\n                //\n                javascript: function () {\n                    var js, index = parserInput.i;\n\n                    parserInput.save();\n\n                    var escape = parserInput.$char(\"~\");\n                    var jsQuote = parserInput.$char(\"`\");\n\n                    if (!jsQuote) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    js = parserInput.$re(/^[^`]*`/);\n                    if (js) {\n                        parserInput.forget();\n                        return new(tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                    }\n                    parserInput.restore(\"invalid javascript definition\");\n                }\n            },\n\n            //\n            // The variable part of a variable definition. Used in the `rule` parser\n            //\n            //     @fink:\n            //\n            variable: function () {\n                var name;\n\n                if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) { return name[1]; }\n            },\n\n            //\n            // Call a variable value\n            //\n            //     @fink()\n            //\n            variableCall: function () {\n                var name;\n\n                if (parserInput.currentChar() === '@'\n                    && (name = parserInput.$re(/^(@[\\w-]+)\\(\\s*\\)/))\n                    && parsers.end()) {\n                    return new tree.VariableCall(name[1]);\n                }\n            },\n\n            //\n            // extend syntax - used to extend selectors\n            //\n            extend: function(isRule) {\n                var elements, e, index = parserInput.i, option, extendList, extend;\n\n                if (!parserInput.$str(isRule ? \"&:extend(\" : \":extend(\")) {\n                    return;\n                }\n\n                do {\n                    option = null;\n                    elements = null;\n                    while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                        e = this.element();\n                        if (!e) {\n                            break;\n                        }\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                    }\n\n                    option = option && option[1];\n                    if (!elements) {\n                        error(\"Missing target selector for :extend().\");\n                    }\n                    extend = new(tree.Extend)(new(tree.Selector)(elements), option, index, fileInfo);\n                    if (extendList) {\n                        extendList.push(extend);\n                    } else {\n                        extendList = [ extend ];\n                    }\n                } while (parserInput.$char(\",\"));\n\n                expect(/^\\)/);\n\n                if (isRule) {\n                    expect(/^;/);\n                }\n\n                return extendList;\n            },\n\n            //\n            // extendRule - used in a rule to extend all the parent selectors\n            //\n            extendRule: function() {\n                return this.extend(true);\n            },\n\n            //\n            // Mixins\n            //\n            mixin: {\n                //\n                // A Mixin call, with an optional argument list\n                //\n                //     #mixins > .square(#fff);\n                //     .rounded(4px, black);\n                //     .button;\n                //\n                // The `while` loop is there because mixins can be\n                // namespaced, but we only support the child and descendant\n                // selector for now.\n                //\n                call: function () {\n                    var s = parserInput.currentChar(), important = false, index = parserInput.i, elemIndex,\n                        elements, elem, e, c, args;\n\n                    if (s !== '.' && s !== '#') { return; }\n\n                    parserInput.save(); // stop us absorbing part of an invalid selector\n\n                    while (true) {\n                        elemIndex = parserInput.i;\n                        e = parserInput.$re(/^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/);\n                        if (!e) {\n                            break;\n                        }\n                        elem = new(tree.Element)(c, e, elemIndex, fileInfo);\n                        if (elements) {\n                            elements.push(elem);\n                        } else {\n                            elements = [ elem ];\n                        }\n                        c = parserInput.$char('>');\n                    }\n\n                    if (elements) {\n                        if (parserInput.$char('(')) {\n                            args = this.args(true).args;\n                            expectChar(')');\n                        }\n\n                        if (parsers.important()) {\n                            important = true;\n                        }\n\n                        if (parsers.end()) {\n                            parserInput.forget();\n                            return new(tree.mixin.Call)(elements, args, index, fileInfo, important);\n                        }\n                    }\n\n                    parserInput.restore();\n                },\n                args: function (isCall) {\n                    var entities = parsers.entities,\n                        returner = { args:null, variadic: false },\n                        expressions = [], argsSemiColon = [], argsComma = [],\n                        isSemiColonSeparated, expressionContainsNamed, name, nameLoop,\n                        value, arg, expand;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (isCall) {\n                            arg = parsers.detachedRuleset() || parsers.expression();\n                        } else {\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str(\"...\")) {\n                                returner.variadic = true;\n                                if (parserInput.$char(\";\") && !isSemiColonSeparated) {\n                                    isSemiColonSeparated = true;\n                                }\n                                (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                    .push({ variadic: true });\n                                break;\n                            }\n                            arg = entities.variable() || entities.property() || entities.literal() || entities.keyword();\n                        }\n\n                        if (!arg) {\n                            break;\n                        }\n\n                        nameLoop = null;\n                        if (arg.throwAwayComments) {\n                            arg.throwAwayComments();\n                        }\n                        value = arg;\n                        var val = null;\n\n                        if (isCall) {\n                            // Variable\n                            if (arg.value && arg.value.length == 1) {\n                                val = arg.value[0];\n                            }\n                        } else {\n                            val = arg;\n                        }\n\n                        if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                            if (parserInput.$char(':')) {\n                                if (expressions.length > 0) {\n                                    if (isSemiColonSeparated) {\n                                        error(\"Cannot mix ; and , as delimiter types\");\n                                    }\n                                    expressionContainsNamed = true;\n                                }\n\n                                value = parsers.detachedRuleset() || parsers.expression();\n\n                                if (!value) {\n                                    if (isCall) {\n                                        error(\"could not understand value for named argument\");\n                                    } else {\n                                        parserInput.restore();\n                                        returner.args = [];\n                                        return returner;\n                                    }\n                                }\n                                nameLoop = (name = val.name);\n                            } else if (parserInput.$str(\"...\")) {\n                                if (!isCall) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(\";\") && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ name: arg.name, variadic: true });\n                                    break;\n                                } else {\n                                    expand = true;\n                                }\n                            } else if (!isCall) {\n                                name = nameLoop = val.name;\n                                value = null;\n                            }\n                        }\n\n                        if (value) {\n                            expressions.push(value);\n                        }\n\n                        argsComma.push({ name:nameLoop, value:value, expand:expand });\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n\n                            if (expressionContainsNamed) {\n                                error(\"Cannot mix ; and , as delimiter types\");\n                            }\n\n                            isSemiColonSeparated = true;\n\n                            if (expressions.length > 1) {\n                                value = new(tree.Value)(expressions);\n                            }\n                            argsSemiColon.push({ name:name, value:value, expand:expand });\n\n                            name = null;\n                            expressions = [];\n                            expressionContainsNamed = false;\n                        }\n                    }\n\n                    parserInput.forget();\n                    returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                    return returner;\n                },\n                //\n                // A Mixin definition, with a list of parameters\n                //\n                //     .rounded (@radius: 2px, @color) {\n                //        ...\n                //     }\n                //\n                // Until we have a finer grained state-machine, we have to\n                // do a look-ahead, to make sure we don't have a mixin call.\n                // See the `rule` function for more information.\n                //\n                // We start by matching `.rounded (`, and then proceed on to\n                // the argument list, which has optional default values.\n                // We store the parameters in `params`, with a `value` key,\n                // if there is a value, such as in the case of `@radius`.\n                //\n                // Once we've got our params list, and a closing `)`, we parse\n                // the `{...}` block.\n                //\n                definition: function () {\n                    var name, params = [], match, ruleset, cond, variadic = false;\n                    if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                        parserInput.peek(/^[^{]*\\}/)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                    if (match) {\n                        name = match[1];\n\n                        var argInfo = this.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n\n                        // .mixincall(\"@{a}\");\n                        // looks a bit like a mixin definition..\n                        // also\n                        // .mixincall(@a: {rule: set;});\n                        // so we have to be nice and restore\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore(\"Missing closing ')'\");\n                            return;\n                        }\n\n                        parserInput.commentStore.length = 0;\n\n                        if (parserInput.$str(\"when\")) { // Guard\n                            cond = expect(parsers.conditions, 'expected condition');\n                        }\n\n                        ruleset = parsers.block();\n\n                        if (ruleset) {\n                            parserInput.forget();\n                            return new(tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                        } else {\n                            parserInput.restore();\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n            },\n\n            //\n            // Entities are the smallest recognized token,\n            // and can be found inside a rule's value.\n            //\n            entity: function () {\n                var entities = this.entities;\n\n                return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                       entities.property() || entities.call() || entities.keyword()  || entities.javascript();\n            },\n\n            //\n            // A Declaration terminator. Note that we use `peek()` to check for '}',\n            // because the `block` rule will be expecting it, but we still need to make sure\n            // it's there, if ';' was omitted.\n            //\n            end: function () {\n                return parserInput.$char(';') || parserInput.peek('}');\n            },\n\n            //\n            // IE's alpha function\n            //\n            //     alpha(opacity=88)\n            //\n            ieAlpha: function () {\n                var value;\n\n                // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                if (!parserInput.$re(/^opacity=/i)) { return; }\n                value = parserInput.$re(/^\\d+/);\n                if (!value) {\n                    value = expect(parsers.entities.variable, \"Could not parse alpha\");\n                    value = '@{' + value.name.slice(1) + '}';\n                }\n                expectChar(')');\n                return new tree.Quoted('', 'alpha(opacity=' + value + ')');\n            },\n\n            //\n            // A Selector Element\n            //\n            //     div\n            //     + h1\n            //     #socks\n            //     input[type=\"text\"]\n            //\n            // Elements are the building blocks for Selectors,\n            // they are made out of a `Combinator` (see combinator rule),\n            // and an element name, such as a tag a class, or `*`.\n            //\n            element: function () {\n                var e, c, v, index = parserInput.i;\n\n                c = this.combinator();\n\n                e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                    parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                    parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                    parserInput.$re(/^\\([^&()@]+\\)/) ||  parserInput.$re(/^[\\.#:](?=@)/) ||\n                    this.entities.variableCurly();\n\n                if (!e) {\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        if ((v = this.selector(false)) && parserInput.$char(')')) {\n                            e = new(tree.Paren)(v);\n                            parserInput.forget();\n                        } else {\n                            parserInput.restore(\"Missing closing ')'\");\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n\n                if (e) { return new(tree.Element)(c, e, index, fileInfo); }\n            },\n\n            //\n            // Combinators combine elements together, in a Selector.\n            //\n            // Because our parser isn't white-space sensitive, special care\n            // has to be taken, when parsing the descendant combinator, ` `,\n            // as it's an empty space. We have to check the previous character\n            // in the input, to see if it's a ` ` character. More info on how\n            // we deal with this in *combinator.js*.\n            //\n            combinator: function () {\n                var c = parserInput.currentChar();\n\n                if (c === '/') {\n                    parserInput.save();\n                    var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                    if (slashedCombinator) {\n                        parserInput.forget();\n                        return new(tree.Combinator)(slashedCombinator);\n                    }\n                    parserInput.restore();\n                }\n\n                if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                    parserInput.i++;\n                    if (c === '^' && parserInput.currentChar() === '^') {\n                        c = '^^';\n                        parserInput.i++;\n                    }\n                    while (parserInput.isWhitespace()) { parserInput.i++; }\n                    return new(tree.Combinator)(c);\n                } else if (parserInput.isWhitespace(-1)) {\n                    return new(tree.Combinator)(\" \");\n                } else {\n                    return new(tree.Combinator)(null);\n                }\n            },\n            //\n            // A CSS Selector\n            // with less extensions e.g. the ability to extend and guard\n            //\n            //     .class > div + h1\n            //     li a:hover\n            //\n            // Selectors are made out of one or more Elements, see above.\n            //\n            selector: function (isLess) {\n                var index = parserInput.i, elements, extendList, c, e, allExtends, when, condition;\n                isLess = isLess !== false;\n                while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str(\"when\"))) || (e = this.element())) {\n                    if (when) {\n                        condition = expect(this.conditions, 'expected condition');\n                    } else if (condition) {\n                        error(\"CSS guard can only be used at the end of selector\");\n                    } else if (extendList) {\n                        if (allExtends) {\n                            allExtends = allExtends.concat(extendList);\n                        } else {\n                            allExtends = extendList;\n                        }\n                    } else {\n                        if (allExtends) { error(\"Extend can only be used at the end of selector\"); }\n                        c = parserInput.currentChar();\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                        e = null;\n                    }\n                    if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                        break;\n                    }\n                }\n\n                if (elements) { return new(tree.Selector)(elements, allExtends, condition, index, fileInfo); }\n                if (allExtends) { error(\"Extend must be used to extend a selector, it cannot be used on its own\"); }\n            },\n            attribute: function () {\n                if (!parserInput.$char('[')) { return; }\n\n                var entities = this.entities,\n                    key, val, op;\n\n                if (!(key = entities.variableCurly())) {\n                    key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                }\n\n                op = parserInput.$re(/^[|~*$^]?=/);\n                if (op) {\n                    val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                }\n\n                expectChar(']');\n\n                return new(tree.Attribute)(key, op, val);\n            },\n\n            //\n            // The `block` rule is used by `ruleset` and `mixin.definition`.\n            // It's a wrapper around the `primary` rule, with added `{}`.\n            //\n            block: function () {\n                var content;\n                if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                    return content;\n                }\n            },\n\n            blockRuleset: function() {\n                var block = this.block();\n\n                if (block) {\n                    block = new tree.Ruleset(null, block);\n                }\n                return block;\n            },\n\n            detachedRuleset: function() {\n                var blockRuleset = this.blockRuleset();\n                if (blockRuleset) {\n                    return new tree.DetachedRuleset(blockRuleset);\n                }\n            },\n\n            //\n            // div, .class, body > p {...}\n            //\n            ruleset: function () {\n                var selectors, s, rules, debugInfo;\n\n                parserInput.save();\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(parserInput.i);\n                }\n\n                while (true) {\n                    s = this.selector();\n                    if (!s) {\n                        break;\n                    }\n                    if (selectors) {\n                        selectors.push(s);\n                    } else {\n                        selectors = [ s ];\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (s.condition && selectors.length > 1) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    if (!parserInput.$char(',')) { break; }\n                    if (s.condition) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    parserInput.commentStore.length = 0;\n                }\n\n                if (selectors && (rules = this.block())) {\n                    parserInput.forget();\n                    var ruleset = new(tree.Ruleset)(selectors, rules, context.strictImports);\n                    if (context.dumpLineNumbers) {\n                        ruleset.debugInfo = debugInfo;\n                    }\n                    return ruleset;\n                } else {\n                    parserInput.restore();\n                }\n            },\n            declaration: function () {\n                var name, value, startOfRule = parserInput.i, c = parserInput.currentChar(), important, merge, isVariable;\n\n                if (c === '.' || c === '#' || c === '&' || c === ':') { return; }\n\n                parserInput.save();\n\n                name = this.variable() || this.ruleProperty();\n                if (name) {\n                    isVariable = typeof name === \"string\";\n\n                    if (isVariable) {\n                        value = this.detachedRuleset();\n                    }\n\n                    parserInput.commentStore.length = 0;\n                    if (!value) {\n                        // a name returned by this.ruleProperty() is always an array of the form:\n                        // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                        // where each item is a tree.Keyword or tree.Variable\n                        merge = !isVariable && name.length > 1 && name.pop().value;\n\n                        // Try to store values as anonymous\n                        // If we need the value later we'll re-parse it in ruleset.parseValue\n                        value = this.anonymousValue();\n                        if (value) {\n                            parserInput.forget();\n                            // anonymous values absorb the end ';' which is required for them to work\n                            return new (tree.Declaration)(name, value, false, merge, startOfRule, fileInfo);\n                        }\n\n                        if (!value) {\n                            value = this.value();\n                        }\n\n                        important = this.important();\n                    }\n\n                    if (value && this.end()) {\n                        parserInput.forget();\n                        return new (tree.Declaration)(name, value, important, merge, startOfRule, fileInfo);\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                } else {\n                    parserInput.restore();\n                }\n            },\n            anonymousValue: function () {\n                var index = parserInput.i;\n                var match = parserInput.$re(/^([^@\\$+\\/'\"*`(;{}-]*);/);\n                if (match) {\n                    return new(tree.Anonymous)(match[1], index);\n                }\n            },\n\n            //\n            // An @import atrule\n            //\n            //     @import \"lib\";\n            //\n            // Depending on our environment, importing is done differently:\n            // In the browser, it's an XHR request, in Node, it would be a\n            // file-system operation. The function used for importing is\n            // stored in `import`, which we pass to the Import constructor.\n            //\n            \"import\": function () {\n                var path, features, index = parserInput.i;\n\n                var dir = parserInput.$re(/^@import?\\s+/);\n\n                if (dir) {\n                    var options = (dir ? this.importOptions() : null) || {};\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n                        features = this.mediaFeatures();\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error(\"missing semi-colon or unrecognised media features on import\");\n                        }\n                        features = features && new(tree.Value)(features);\n                        return new(tree.Import)(path, features, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error(\"malformed import statement\");\n                    }\n                }\n            },\n\n            importOptions: function() {\n                var o, options = {}, optionName, value;\n\n                // list of options, surrounded by parens\n                if (!parserInput.$char('(')) { return null; }\n                do {\n                    o = this.importOption();\n                    if (o) {\n                        optionName = o;\n                        value = true;\n                        switch (optionName) {\n                            case \"css\":\n                                optionName = \"less\";\n                                value = false;\n                                break;\n                            case \"once\":\n                                optionName = \"multiple\";\n                                value = false;\n                                break;\n                        }\n                        options[optionName] = value;\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (o);\n                expectChar(')');\n                return options;\n            },\n\n            importOption: function() {\n                var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                if (opt) {\n                    return opt[1];\n                }\n            },\n\n            mediaFeature: function () {\n                var entities = this.entities, nodes = [], e, p;\n                parserInput.save();\n                do {\n                    e = entities.keyword() || entities.variable();\n                    if (e) {\n                        nodes.push(e);\n                    } else if (parserInput.$char('(')) {\n                        p = this.property();\n                        e = this.value();\n                        if (parserInput.$char(')')) {\n                            if (p && e) {\n                                nodes.push(new(tree.Paren)(new(tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                            } else if (e) {\n                                nodes.push(new(tree.Paren)(e));\n                            } else {\n                                error(\"badly formed media feature definition\");\n                            }\n                        } else {\n                            error(\"Missing closing ')'\", \"Parse\");\n                        }\n                    }\n                } while (e);\n\n                parserInput.forget();\n                if (nodes.length > 0) {\n                    return new(tree.Expression)(nodes);\n                }\n            },\n\n            mediaFeatures: function () {\n                var entities = this.entities, features = [], e;\n                do {\n                    e = this.mediaFeature();\n                    if (e) {\n                        features.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    } else {\n                        e = entities.variable();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) { break; }\n                        }\n                    }\n                } while (e);\n\n                return features.length > 0 ? features : null;\n            },\n\n            media: function () {\n                var features, rules, media, debugInfo, index = parserInput.i;\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(index);\n                }\n\n                parserInput.save();\n\n                if (parserInput.$str(\"@media\")) {\n                    features = this.mediaFeatures();\n\n                    rules = this.block();\n\n                    if (!rules) {\n                        error(\"media definitions require block statements after any features\");\n                    }\n\n                    parserInput.forget();\n\n                    media = new(tree.Media)(rules, features, index, fileInfo);\n                    if (context.dumpLineNumbers) {\n                        media.debugInfo = debugInfo;\n                    }\n\n                    return media;\n                }\n\n                parserInput.restore();\n            },\n\n            //\n\n            // A @plugin directive, used to import plugins dynamically.\n            //\n            //     @plugin (args) \"lib\";\n            //\n            plugin: function () {\n                var path, args, options,\n                    index = parserInput.i,\n                    dir   = parserInput.$re(/^@plugin?\\s+/);\n\n                if (dir) {\n                    args = this.pluginArgs();\n\n                    if (args) {\n                        options = {\n                            pluginArgs: args,\n                            isPlugin: true\n                        };\n                    }\n                    else {\n                        options = { isPlugin: true };\n                    }\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error(\"missing semi-colon on @plugin\");\n                        }\n                        return new(tree.Import)(path, null, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error(\"malformed @plugin statement\");\n                    }\n                }\n            },\n\n            pluginArgs: function() {\n                // list of options, surrounded by parens\n                parserInput.save();\n                if (!parserInput.$char('(')) {\n                    parserInput.restore();\n                    return null;\n                }\n                var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                if (args[1]) {\n                    parserInput.forget();\n                    return args[1].trim();\n                }\n                else { \n                    parserInput.restore();\n                    return null;\n                }\n            },\n\n            //\n            // A CSS AtRule\n            //\n            //     @charset \"utf-8\";\n            //\n            atrule: function () {\n                var index = parserInput.i, name, value, rules, nonVendorSpecificName,\n                    hasIdentifier, hasExpression, hasUnknown, hasBlock = true, isRooted = true;\n\n                if (parserInput.currentChar() !== '@') { return; }\n\n                value = this['import']() || this.plugin() || this.media();\n                if (value) {\n                    return value;\n                }\n\n                parserInput.save();\n\n                name = parserInput.$re(/^@[a-z-]+/);\n\n                if (!name) { return; }\n\n                nonVendorSpecificName = name;\n                if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                    nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n                }\n\n                switch (nonVendorSpecificName) {\n                    case \"@charset\":\n                        hasIdentifier = true;\n                        hasBlock = false;\n                        break;\n                    case \"@namespace\":\n                        hasExpression = true;\n                        hasBlock = false;\n                        break;\n                    case \"@keyframes\":\n                    case \"@counter-style\":\n                        hasIdentifier = true;\n                        break;\n                    case \"@document\":\n                    case \"@supports\":\n                        hasUnknown = true;\n                        isRooted = false;\n                        break;\n                    default:\n                        hasUnknown = true;\n                        break;\n                }\n\n                parserInput.commentStore.length = 0;\n\n                if (hasIdentifier) {\n                    value = this.entity();\n                    if (!value) {\n                        error(\"expected \" + name + \" identifier\");\n                    }\n                } else if (hasExpression) {\n                    value = this.expression();\n                    if (!value) {\n                        error(\"expected \" + name + \" expression\");\n                    }\n                } else if (hasUnknown) {\n                    value = (parserInput.$re(/^[^{;]+/) || '').trim();\n                    hasBlock = (parserInput.currentChar() == '{');\n                    if (value) {\n                        value = new(tree.Anonymous)(value);\n                    }\n                }\n\n                if (hasBlock) {\n                    rules = this.blockRuleset();\n                }\n\n                if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                    parserInput.forget();\n                    return new (tree.AtRule)(name, value, rules, index, fileInfo,\n                        context.dumpLineNumbers ? getDebugInfo(index) : null,\n                        isRooted\n                    );\n                }\n\n                parserInput.restore(\"at-rule options not recognised\");\n            },\n\n            //\n            // A Value is a comma-delimited list of Expressions\n            //\n            //     font-family: Baskerville, Georgia, serif;\n            //\n            // In a Rule, a Value represents everything after the `:`,\n            // and before the `;`.\n            //\n            value: function () {\n                var e, expressions = [], index = parserInput.i;\n\n                do {\n                    e = this.expression();\n                    if (e) {\n                        expressions.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (e);\n\n                if (expressions.length > 0) {\n                    return new(tree.Value)(expressions, index);\n                }\n            },\n            important: function () {\n                if (parserInput.currentChar() === '!') {\n                    return parserInput.$re(/^! *important/);\n                }\n            },\n            sub: function () {\n                var a, e;\n\n                parserInput.save();\n                if (parserInput.$char('(')) {\n                    a = this.addition();\n                    if (a && parserInput.$char(')')) {\n                        parserInput.forget();\n                        e = new(tree.Expression)([a]);\n                        e.parens = true;\n                        return e;\n                    }\n                    parserInput.restore(\"Expected ')'\");\n                    return;\n                }\n                parserInput.restore();\n            },\n            multiplication: function () {\n                var m, a, op, operation, isSpaced;\n                m = this.operand();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        if (parserInput.peek(/^\\/[*\\/]/)) {\n                            break;\n                        }\n\n                        parserInput.save();\n\n                        op = parserInput.$char('/') || parserInput.$char('*');\n\n                        if (!op) { parserInput.forget(); break; }\n\n                        a = this.operand();\n\n                        if (!a) { parserInput.restore(); break; }\n                        parserInput.forget();\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            addition: function () {\n                var m, a, op, operation, isSpaced;\n                m = this.multiplication();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                        if (!op) {\n                            break;\n                        }\n                        a = this.multiplication();\n                        if (!a) {\n                            break;\n                        }\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            conditions: function () {\n                var a, b, index = parserInput.i, condition;\n\n                a = this.condition();\n                if (a) {\n                    while (true) {\n                        if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                            break;\n                        }\n                        b = this.condition();\n                        if (!b) {\n                            break;\n                        }\n                        condition = new(tree.Condition)('or', condition || a, b, index);\n                    }\n                    return condition || a;\n                }\n            },\n            condition: function () {\n                var result, logical, next;\n                function or() {\n                    return parserInput.$str(\"or\");\n                }\n\n                result = this.conditionAnd(this);\n                if (!result) {\n                    return ;\n                }\n                logical = or();\n                if (logical) {\n                    next = this.condition();\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            conditionAnd: function () {\n                var result, logical, next;\n                function insideCondition(me) {\n                    return me.negatedCondition() || me.parenthesisCondition();\n                }\n                function and() {\n                    return parserInput.$str(\"and\");\n                }\n\n                result = insideCondition(this);\n                if (!result) {\n                    return ;\n                }\n                logical = and();\n                if (logical) {\n                    next = this.conditionAnd();\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            negatedCondition: function () {\n                if (parserInput.$str(\"not\")) {\n                    var result = this.parenthesisCondition();\n                    if (result) {\n                        result.negate = !result.negate;\n                    }\n                    return result;\n                }\n            },\n            parenthesisCondition: function () {\n                function tryConditionFollowedByParenthesis(me) {\n                    var body;\n                    parserInput.save();\n                    body = me.condition();\n                    if (!body) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    parserInput.forget();\n                    return body;\n                }\n\n                var body;\n                parserInput.save();\n                if (!parserInput.$str(\"(\")) {\n                    parserInput.restore();\n                    return ;\n                }\n                body = tryConditionFollowedByParenthesis(this);\n                if (body) {\n                    parserInput.forget();\n                    return body;\n                }\n\n                body = this.atomicCondition();\n                if (!body) {\n                    parserInput.restore();\n                    return ;\n                }\n                if (!parserInput.$char(')')) {\n                    parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n                    return ;\n                }\n                parserInput.forget();\n                return body;\n            },\n            atomicCondition: function () {\n                var entities = this.entities, index = parserInput.i, a, b, c, op;\n\n                a = this.addition() || entities.keyword() || entities.quoted();\n                if (a) {\n                    if (parserInput.$char('>')) {\n                        if (parserInput.$char('=')) {\n                            op = \">=\";\n                        } else {\n                            op = '>';\n                        }\n                    } else\n                    if (parserInput.$char('<')) {\n                        if (parserInput.$char('=')) {\n                            op = \"<=\";\n                        } else {\n                            op = '<';\n                        }\n                    } else\n                    if (parserInput.$char('=')) {\n                        if (parserInput.$char('>')) {\n                            op = \"=>\";\n                        } else if (parserInput.$char('<')) {\n                            op = '=<';\n                        } else {\n                            op = '=';\n                        }\n                    }\n                    if (op) {\n                        b = this.addition() || entities.keyword() || entities.quoted();\n                        if (b) {\n                            c = new(tree.Condition)(op, a, b, index, false);\n                        } else {\n                            error('expected expression');\n                        }\n                    } else {\n                        c = new(tree.Condition)('=', a, new(tree.Keyword)('true'), index, false);\n                    }\n                    return c;\n                }\n            },\n\n            //\n            // An operand is anything that can be part of an operation,\n            // such as a Color, or a Variable\n            //\n            operand: function () {\n                var entities = this.entities, negate;\n\n                if (parserInput.peek(/^-[@\\$\\(]/)) {\n                    negate = parserInput.$char('-');\n                }\n\n                var o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.colorKeyword();\n\n                if (negate) {\n                    o.parensInOp = true;\n                    o = new(tree.Negative)(o);\n                }\n\n                return o;\n            },\n\n            //\n            // Expressions either represent mathematical operations,\n            // or white-space delimited Entities.\n            //\n            //     1px solid black\n            //     @var * 2\n            //\n            expression: function () {\n                var entities = [], e, delim, index = parserInput.i;\n\n                do {\n                    e = this.comment();\n                    if (e) {\n                        entities.push(e);\n                        continue;\n                    }\n                    e = this.addition() || this.entity();\n                    if (e) {\n                        entities.push(e);\n                        // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                        if (!parserInput.peek(/^\\/[\\/*]/)) {\n                            delim = parserInput.$char('/');\n                            if (delim) {\n                                entities.push(new(tree.Anonymous)(delim, index));\n                            }\n                        }\n                    }\n                } while (e);\n                if (entities.length > 0) {\n                    return new(tree.Expression)(entities);\n                }\n            },\n            property: function () {\n                var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                if (name) {\n                    return name[1];\n                }\n            },\n            ruleProperty: function () {\n                var name = [], index = [], s, k;\n\n                parserInput.save();\n\n                var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                if (simpleProperty) {\n                    name = [new(tree.Keyword)(simpleProperty[1])];\n                    parserInput.forget();\n                    return name;\n                }\n\n                function match(re) {\n                    var i = parserInput.i,\n                        chunk = parserInput.$re(re);\n                    if (chunk) {\n                        index.push(i);\n                        return name.push(chunk[1]);\n                    }\n                }\n\n                match(/^(\\*?)/);\n                while (true) {\n                    if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                        break;\n                    }\n                }\n\n                if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                    parserInput.forget();\n\n                    // at last, we have the complete match now. move forward,\n                    // convert name particles to tree objects and return:\n                    if (name[0] === '') {\n                        name.shift();\n                        index.shift();\n                    }\n                    for (k = 0; k < name.length; k++) {\n                        s = name[k];\n                        name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                            new(tree.Keyword)(s) :\n                            (s.charAt(0) === '@' ?\n                                new(tree.Variable)('@' + s.slice(2, -1), index[k], fileInfo) :\n                                new(tree.Property)('$' + s.slice(2, -1), index[k], fileInfo));\n                    }\n                    return name;\n                }\n                parserInput.restore();\n            }\n        }\n    };\n};\nParser.serializeVars = function(vars) {\n    var s = '';\n\n    for (var name in vars) {\n        if (Object.hasOwnProperty.call(vars, name)) {\n            var value = vars[name];\n            s += ((name[0] === '@') ? '' : '@') + name + ': ' + value +\n                ((String(value).slice(-1) === ';') ? '' : ';');\n        }\n    }\n\n    return s;\n};\n\nmodule.exports = Parser;\n\n},{\"../functions/function-registry\":26,\"../less-error\":36,\"../tree\":65,\"../utils\":86,\"../visitors\":90,\"./parser-input\":41}],43:[function(require,module,exports){\n/**\n * Plugin Manager\n */\nvar PluginManager = function(less) {\n    this.less = less;\n    this.visitors = [];\n    this.preProcessors = [];\n    this.postProcessors = [];\n    this.installedPlugins = [];\n    this.fileManagers = [];\n    this.iterator = -1;\n    this.pluginCache = {};\n    this.Loader = new less.PluginLoader(less);\n};\n\nvar pm, PluginManagerFactory = function(less, newFactory) {\n        if (newFactory || !pm) {\n            pm = new PluginManager(less);\n        }\n        return pm;\n    };\n\n/**\n * Adds all the plugins in the array\n * @param {Array} plugins\n */\nPluginManager.prototype.addPlugins = function(plugins) {\n    if (plugins) {\n        for (var i = 0; i < plugins.length; i++) {\n            this.addPlugin(plugins[i]);\n        }\n    }\n};\n/**\n *\n * @param plugin\n * @param {String} filename\n */\nPluginManager.prototype.addPlugin = function(plugin, filename, functionRegistry) {\n    this.installedPlugins.push(plugin);\n    if (filename) {\n        this.pluginCache[filename] = plugin;\n    }\n    if (plugin.install) {\n        plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n    }\n};\n/**\n *\n * @param filename\n */\nPluginManager.prototype.get = function(filename) {\n    return this.pluginCache[filename];\n};\n\n/**\n * Adds a visitor. The visitor object has options on itself to determine\n * when it should run.\n * @param visitor\n */\nPluginManager.prototype.addVisitor = function(visitor) {\n    this.visitors.push(visitor);\n};\n/**\n * Adds a pre processor object\n * @param {object} preProcessor\n * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n */\nPluginManager.prototype.addPreProcessor = function(preProcessor, priority) {\n    var indexToInsertAt;\n    for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n        if (this.preProcessors[indexToInsertAt].priority >= priority) {\n            break;\n        }\n    }\n    this.preProcessors.splice(indexToInsertAt, 0, {preProcessor: preProcessor, priority: priority});\n};\n/**\n * Adds a post processor object\n * @param {object} postProcessor\n * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n */\nPluginManager.prototype.addPostProcessor = function(postProcessor, priority) {\n    var indexToInsertAt;\n    for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n        if (this.postProcessors[indexToInsertAt].priority >= priority) {\n            break;\n        }\n    }\n    this.postProcessors.splice(indexToInsertAt, 0, {postProcessor: postProcessor, priority: priority});\n};\n/**\n *\n * @param manager\n */\nPluginManager.prototype.addFileManager = function(manager) {\n    this.fileManagers.push(manager);\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getPreProcessors = function() {\n    var preProcessors = [];\n    for (var i = 0; i < this.preProcessors.length; i++) {\n        preProcessors.push(this.preProcessors[i].preProcessor);\n    }\n    return preProcessors;\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getPostProcessors = function() {\n    var postProcessors = [];\n    for (var i = 0; i < this.postProcessors.length; i++) {\n        postProcessors.push(this.postProcessors[i].postProcessor);\n    }\n    return postProcessors;\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getVisitors = function() {\n    return this.visitors;\n};\n\nPluginManager.prototype.visitor = function() {\n    var self = this;\n    return {\n        first: function() {\n            self.iterator = -1;\n            return self.visitors[self.iterator];\n        },\n        get: function() {\n            self.iterator += 1;\n            return self.visitors[self.iterator];\n        }\n    };\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getFileManagers = function() {\n    return this.fileManagers;\n};\n\n//\nmodule.exports = PluginManagerFactory;\n\n},{}],44:[function(require,module,exports){\nvar PromiseConstructor,\n    utils = require('./utils');\n\nmodule.exports = function(environment, ParseTree, ImportManager) {\n    var render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.defaults(this.options, {});\n        }\n        else {\n            options = utils.defaults(this.options, options || {});\n        }\n\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                render.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, function(err, root, imports, options) {\n                if (err) { return callback(err); }\n\n                var result;\n                try {\n                    var parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                }\n                catch (err) { return callback(err); }\n\n                callback(null, result);\n            });\n        }\n    };\n\n    return render;\n};\n\n},{\"./utils\":86,\"promise\":undefined}],45:[function(require,module,exports){\nmodule.exports = function (SourceMapOutput, environment) {\n\n    var SourceMapBuilder = function (options) {\n        this.options = options;\n    };\n\n    SourceMapBuilder.prototype.toCSS = function(rootNode, options, imports) {\n        var sourceMapOutput = new SourceMapOutput(\n            {\n                contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                rootNode: rootNode,\n                contentsMap: imports.contents,\n                sourceMapFilename: this.options.sourceMapFilename,\n                sourceMapURL: this.options.sourceMapURL,\n                outputFilename: this.options.sourceMapOutputFilename,\n                sourceMapBasepath: this.options.sourceMapBasepath,\n                sourceMapRootpath: this.options.sourceMapRootpath,\n                outputSourceFiles: this.options.outputSourceFiles,\n                sourceMapGenerator: this.options.sourceMapGenerator,\n                sourceMapFileInline: this.options.sourceMapFileInline\n            });\n\n        var css = sourceMapOutput.toCSS(options);\n        this.sourceMap = sourceMapOutput.sourceMap;\n        this.sourceMapURL = sourceMapOutput.sourceMapURL;\n        if (this.options.sourceMapInputFilename) {\n            this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n        }\n        if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n            this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n        }\n        return css + this.getCSSAppendage();\n    };\n\n    SourceMapBuilder.prototype.getCSSAppendage = function() {\n\n        var sourceMapURL = this.sourceMapURL;\n        if (this.options.sourceMapFileInline) {\n            if (this.sourceMap === undefined) {\n                return \"\";\n            }\n            sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n        }\n\n        if (sourceMapURL) {\n            return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n        }\n        return \"\";\n    };\n\n    SourceMapBuilder.prototype.getExternalSourceMap = function() {\n        return this.sourceMap;\n    };\n    SourceMapBuilder.prototype.setExternalSourceMap = function(sourceMap) {\n        this.sourceMap = sourceMap;\n    };\n\n    SourceMapBuilder.prototype.isInline = function() {\n        return this.options.sourceMapFileInline;\n    };\n    SourceMapBuilder.prototype.getSourceMapURL = function() {\n        return this.sourceMapURL;\n    };\n    SourceMapBuilder.prototype.getOutputFilename = function() {\n        return this.options.sourceMapOutputFilename;\n    };\n    SourceMapBuilder.prototype.getInputFilename = function() {\n        return this.sourceMapInputFilename;\n    };\n\n    return SourceMapBuilder;\n};\n\n},{}],46:[function(require,module,exports){\nmodule.exports = function (environment) {\n\n    var SourceMapOutput = function (options) {\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n        if (options.sourceMapFilename) {\n            this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n        if (options.sourceMapBasepath) {\n            this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n        if (options.sourceMapRootpath) {\n            this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n            if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                this._sourceMapRootpath += '/';\n            }\n        } else {\n            this._sourceMapRootpath = \"\";\n        }\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n\n        this._lineNumber = 0;\n        this._column = 0;\n    };\n\n    SourceMapOutput.prototype.removeBasepath = function(path) {\n        if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n            path = path.substring(this._sourceMapBasepath.length);\n            if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                path = path.substring(1);\n            }\n        }\n\n        return path;\n    };\n\n    SourceMapOutput.prototype.normalizeFilename = function(filename) {\n        filename = filename.replace(/\\\\/g, '/');\n        filename = this.removeBasepath(filename);\n        return (this._sourceMapRootpath || \"\") + filename;\n    };\n\n    SourceMapOutput.prototype.add = function(chunk, fileInfo, index, mapLines) {\n\n        // ignore adding empty strings\n        if (!chunk) {\n            return;\n        }\n\n        var lines,\n            sourceLines,\n            columns,\n            sourceColumns,\n            i;\n\n        if (fileInfo) {\n            var inputSource = this._contentsMap[fileInfo.filename];\n\n            // remove vars/banner added to the top of the file\n            if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                // adjust the index\n                index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                if (index < 0) { index = 0; }\n                // adjust the source\n                inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n            }\n            inputSource = inputSource.substring(0, index);\n            sourceLines = inputSource.split(\"\\n\");\n            sourceColumns = sourceLines[sourceLines.length - 1];\n        }\n\n        lines = chunk.split(\"\\n\");\n        columns = lines[lines.length - 1];\n\n        if (fileInfo) {\n            if (!mapLines) {\n                this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column},\n                    original: { line: sourceLines.length, column: sourceColumns.length},\n                    source: this.normalizeFilename(fileInfo.filename)});\n            } else {\n                for (i = 0; i < lines.length; i++) {\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0},\n                        original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0},\n                        source: this.normalizeFilename(fileInfo.filename)});\n                }\n            }\n        }\n\n        if (lines.length === 1) {\n            this._column += columns.length;\n        } else {\n            this._lineNumber += lines.length - 1;\n            this._column = columns.length;\n        }\n\n        this._css.push(chunk);\n    };\n\n    SourceMapOutput.prototype.isEmpty = function() {\n        return this._css.length === 0;\n    };\n\n    SourceMapOutput.prototype.toCSS = function(context) {\n        this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n\n        if (this._outputSourceFiles) {\n            for (var filename in this._contentsMap) {\n                if (this._contentsMap.hasOwnProperty(filename)) {\n                    var source = this._contentsMap[filename];\n                    if (this._contentsIgnoredCharsMap[filename]) {\n                        source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                    }\n                    this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                }\n            }\n        }\n\n        this._rootNode.genCSS(context, this);\n\n        if (this._css.length > 0) {\n            var sourceMapURL,\n                sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n            if (this.sourceMapURL) {\n                sourceMapURL = this.sourceMapURL;\n            } else if (this._sourceMapFilename) {\n                sourceMapURL = this._sourceMapFilename;\n            }\n            this.sourceMapURL = sourceMapURL;\n\n            this.sourceMap = sourceMapContent;\n        }\n\n        return this._css.join('');\n    };\n\n    return SourceMapOutput;\n};\n\n},{}],47:[function(require,module,exports){\nvar contexts = require(\"./contexts\"),\n    visitor = require(\"./visitors\"),\n    tree = require(\"./tree\");\n\nmodule.exports = function(root, options) {\n    options = options || {};\n    var evaldRoot,\n        variables = options.variables,\n        evalEnv = new contexts.Eval(options);\n\n    //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\n        variables = Object.keys(variables).map(function (k) {\n            var value = variables[k];\n\n            if (!(value instanceof tree.Value)) {\n                if (!(value instanceof tree.Expression)) {\n                    value = new tree.Expression([value]);\n                }\n                value = new tree.Value([value]);\n            }\n            return new tree.Declaration('@' + k, value, false, null, 0);\n        });\n        evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    var visitors = [\n            new visitor.JoinSelectorVisitor(),\n            new visitor.MarkVisibleSelectorsVisitor(true),\n            new visitor.ExtendVisitor(),\n            new visitor.ToCSSVisitor({compress: Boolean(options.compress)})\n        ], v, visitorIterator;\n\n    // first() / get() allows visitors to be added while visiting\n    if (options.pluginManager) {\n        visitorIterator = options.pluginManager.visitor();\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (v.isPreEvalVisitor) {\n                v.run(root);\n            }\n        }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors.length; i++) {\n        visitors[i].run(evaldRoot);\n    }\n\n    if (options.pluginManager) {\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (!v.isPreEvalVisitor) {\n                v.run(evaldRoot);\n            }\n        }\n    }\n\n    return evaldRoot;\n};\n\n},{\"./contexts\":12,\"./tree\":65,\"./visitors\":90}],48:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n    this.value = value;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.mapLines = mapLines;\n    this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n    this.allowRoot = true;\n    this.copyVisibilityInfo(visibilityInfo);\n};\nAnonymous.prototype = new Node();\nAnonymous.prototype.type = \"Anonymous\";\nAnonymous.prototype.eval = function () {\n    return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n};\nAnonymous.prototype.compare = function (other) {\n    return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n};\nAnonymous.prototype.isRulesetLike = function() {\n    return this.rulesetLike;\n};\nAnonymous.prototype.genCSS = function (context, output) {\n    this.nodeVisible = Boolean(this.value);\n    if (this.nodeVisible) {\n        output.add(this.value, this._fileInfo, this._index, this.mapLines);\n    }\n};\nmodule.exports = Anonymous;\n\n},{\"./node\":73}],49:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Assignment = function (key, val) {\n    this.key = key;\n    this.value = val;\n};\n\nAssignment.prototype = new Node();\nAssignment.prototype.type = \"Assignment\";\nAssignment.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nAssignment.prototype.eval = function (context) {\n    if (this.value.eval) {\n        return new Assignment(this.key, this.value.eval(context));\n    }\n    return this;\n};\nAssignment.prototype.genCSS = function (context, output) {\n    output.add(this.key + '=');\n    if (this.value.genCSS) {\n        this.value.genCSS(context, output);\n    } else {\n        output.add(this.value);\n    }\n};\nmodule.exports = Assignment;\n\n},{\"./node\":73}],50:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    Ruleset = require(\"./ruleset\"),\n    Anonymous = require('./anonymous');\n\nvar AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n    var i;\n\n    this.name  = name;\n    this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n    if (rules) {\n        if (Array.isArray(rules)) {\n            this.rules = rules;\n        } else {\n            this.rules = [rules];\n            this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n        }\n        for (i = 0; i < this.rules.length; i++) {\n            this.rules[i].allowImports = true;\n        }\n        this.setParent(this.rules, this);\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.debugInfo = debugInfo;\n    this.isRooted = isRooted || false;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n};\n\nAtRule.prototype = new Node();\nAtRule.prototype.type = \"AtRule\";\nAtRule.prototype.accept = function (visitor) {\n    var value = this.value, rules = this.rules;\n    if (rules) {\n        this.rules = visitor.visitArray(rules);\n    }\n    if (value) {\n        this.value = visitor.visit(value);\n    }\n};\nAtRule.prototype.isRulesetLike = function() {\n    return this.rules || !this.isCharset();\n};\nAtRule.prototype.isCharset = function() {\n    return \"@charset\" === this.name;\n};\nAtRule.prototype.genCSS = function (context, output) {\n    var value = this.value, rules = this.rules;\n    output.add(this.name, this.fileInfo(), this.getIndex());\n    if (value) {\n        output.add(' ');\n        value.genCSS(context, output);\n    }\n    if (rules) {\n        this.outputRuleset(context, output, rules);\n    } else {\n        output.add(';');\n    }\n};\nAtRule.prototype.eval = function (context) {\n    var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n\n    // media stored inside other atrule should not bubble over it\n    // backpup media bubbling information\n    mediaPathBackup = context.mediaPath;\n    mediaBlocksBackup = context.mediaBlocks;\n    // deleted media bubbling information\n    context.mediaPath = [];\n    context.mediaBlocks = [];\n\n    if (value) {\n        value = value.eval(context);\n    }\n    if (rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        rules = [rules[0].eval(context)];\n        rules[0].root = true;\n    }\n    // restore media bubbling information\n    context.mediaPath = mediaPathBackup;\n    context.mediaBlocks = mediaBlocksBackup;\n\n    return new AtRule(this.name, value, rules,\n        this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n};\nAtRule.prototype.variable = function (name) {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.variable.call(this.rules[0], name);\n    }\n};\nAtRule.prototype.find = function () {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.find.apply(this.rules[0], arguments);\n    }\n};\nAtRule.prototype.rulesets = function () {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.rulesets.apply(this.rules[0]);\n    }\n};\nAtRule.prototype.outputRuleset = function (context, output, rules) {\n    var ruleCnt = rules.length, i;\n    context.tabLevel = (context.tabLevel | 0) + 1;\n\n    // Compressed\n    if (context.compress) {\n        output.add('{');\n        for (i = 0; i < ruleCnt; i++) {\n            rules[i].genCSS(context, output);\n        }\n        output.add('}');\n        context.tabLevel--;\n        return;\n    }\n\n    // Non-compressed\n    var tabSetStr = '\\n' + Array(context.tabLevel).join(\"  \"), tabRuleStr = tabSetStr + \"  \";\n    if (!ruleCnt) {\n        output.add(\" {\" + tabSetStr + '}');\n    } else {\n        output.add(\" {\" + tabRuleStr);\n        rules[0].genCSS(context, output);\n        for (i = 1; i < ruleCnt; i++) {\n            output.add(tabRuleStr);\n            rules[i].genCSS(context, output);\n        }\n        output.add(tabSetStr + '}');\n    }\n\n    context.tabLevel--;\n};\nmodule.exports = AtRule;\n\n},{\"./anonymous\":48,\"./node\":73,\"./ruleset\":78,\"./selector\":79}],51:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Attribute = function (key, op, value) {\n    this.key = key;\n    this.op = op;\n    this.value = value;\n};\nAttribute.prototype = new Node();\nAttribute.prototype.type = \"Attribute\";\nAttribute.prototype.eval = function (context) {\n    return new Attribute(this.key.eval ? this.key.eval(context) : this.key,\n        this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n};\nAttribute.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context));\n};\nAttribute.prototype.toCSS = function (context) {\n    var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n    if (this.op) {\n        value += this.op;\n        value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n    }\n\n    return '[' + value + ']';\n};\nmodule.exports = Attribute;\n\n},{\"./node\":73}],52:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Anonymous = require(\"./anonymous\"),\n    FunctionCaller = require(\"../functions/function-caller\");\n//\n// A function call node.\n//\nvar Call = function (name, args, index, currentFileInfo) {\n    this.name = name;\n    this.args = args;\n    this.mathOn = name === 'calc' ? false : true;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nCall.prototype = new Node();\nCall.prototype.type = \"Call\";\nCall.prototype.accept = function (visitor) {\n    if (this.args) {\n        this.args = visitor.visitArray(this.args);\n    }\n};\n//\n// When evaluating a function call,\n// we either find the function in the functionRegistry,\n// in which case we call it, passing the  evaluated arguments,\n// if this returns null or we cannot find the function, we\n// simply print it out as it appeared originally [2].\n//\n// The reason why we evaluate the arguments, is in the case where\n// we try to pass a variable to a function, like: `saturate(@color)`.\n// The function should receive the value, not the variable.\n//\nCall.prototype.eval = function (context) {\n\n    /**\n     * Turn off math for calc(), and switch back on for evaluating nested functions\n     */\n    var currentMathContext = context.mathOn;\n    context.mathOn = this.mathOn;\n    var args = this.args.map(function (a) { return a.eval(context); });\n    context.mathOn = currentMathContext;\n\n    var result, funcCaller = new FunctionCaller(this.name, context, this.getIndex(), this.fileInfo());\n    \n    if (funcCaller.isValid()) {\n        try {\n            result = funcCaller.call(args);\n        } catch (e) {\n            throw { \n                type: e.type || \"Runtime\",\n                message: \"error evaluating function `\" + this.name + \"`\" +\n                         (e.message ? ': ' + e.message : ''),\n                index: this.getIndex(), \n                filename: this.fileInfo().filename,\n                line: e.lineNumber,\n                column: e.columnNumber\n            };\n        }\n\n        if (result !== null && result !== undefined) {\n            // Results that that are not nodes are cast as Anonymous nodes\n            // Falsy values or booleans are returned as empty nodes\n            if (!(result instanceof Node)) {\n                if (!result || result === true) {\n                    result = new Anonymous(null); \n                }\n                else {\n                    result = new Anonymous(result.toString()); \n                }\n                \n            }\n            result._index = this._index;\n            result._fileInfo = this._fileInfo;\n            return result;\n        }\n\n    }\n\n    return new Call(this.name, args, this.getIndex(), this.fileInfo());\n};\nCall.prototype.genCSS = function (context, output) {\n    output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n\n    for (var i = 0; i < this.args.length; i++) {\n        this.args[i].genCSS(context, output);\n        if (i + 1 < this.args.length) {\n            output.add(\", \");\n        }\n    }\n\n    output.add(\")\");\n};\nmodule.exports = Call;\n\n},{\"../functions/function-caller\":25,\"./anonymous\":48,\"./node\":73}],53:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    colors = require(\"../data/colors\");\n\n//\n// RGB Colors - #ff0014, #eee\n//\nvar Color = function (rgb, a, originalForm) {\n    //\n    // The end goal here, is to parse the arguments\n    // into an integer triplet, such as `128, 255, 0`\n    //\n    // This facilitates operations and conversions.\n    //\n    if (Array.isArray(rgb)) {\n        this.rgb = rgb;\n    } else if (rgb.length == 6) {\n        this.rgb = rgb.match(/.{2}/g).map(function (c) {\n            return parseInt(c, 16);\n        });\n    } else {\n        this.rgb = rgb.split('').map(function (c) {\n            return parseInt(c + c, 16);\n        });\n    }\n    this.alpha = typeof a === 'number' ? a : 1;\n    if (typeof originalForm !== 'undefined') {\n        this.value = originalForm;\n    }\n};\n\nColor.prototype = new Node();\nColor.prototype.type = \"Color\";\n\nfunction clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n}\n\nfunction toHex(v) {\n    return '#' + v.map(function (c) {\n        c = clamp(Math.round(c), 255);\n        return (c < 16 ? '0' : '') + c.toString(16);\n    }).join('');\n}\n\nColor.prototype.luma = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255;\n\n    r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n    g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n    b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\nColor.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context));\n};\nColor.prototype.toCSS = function (context, doNotCompress) {\n    var compress = context && context.compress && !doNotCompress, color, alpha;\n\n    // `value` is set if this color was originally\n    // converted from a named color string so we need\n    // to respect this and try to output named color too.\n    if (this.value) {\n        return this.value;\n    }\n\n    // If we have some transparency, the only way to represent it\n    // is via `rgba`. Otherwise, we use the hex representation,\n    // which has better compatibility with older browsers.\n    // Values are capped between `0` and `255`, rounded and zero-padded.\n    alpha = this.fround(context, this.alpha);\n    if (alpha < 1) {\n        return \"rgba(\" + this.rgb.map(function (c) {\n            return clamp(Math.round(c), 255);\n        }).concat(clamp(alpha, 1))\n            .join(',' + (compress ? '' : ' ')) + \")\";\n    }\n\n    color = this.toRGB();\n\n    if (compress) {\n        var splitcolor = color.split('');\n\n        // Convert color to short format\n        if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n            color = '#' + splitcolor[1] + splitcolor[3] + splitcolor[5];\n        }\n    }\n\n    return color;\n};\n\n//\n// Operations have to be done per-channel, if not,\n// channels will spill onto each other. Once we have\n// our result, in the form of an integer triplet,\n// we create a new Color node to hold the result.\n//\nColor.prototype.operate = function (context, op, other) {\n    var rgb = new Array(3);\n    var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n    for (var c = 0; c < 3; c++) {\n        rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n    }\n    return new Color(rgb, alpha);\n};\nColor.prototype.toRGB = function () {\n    return toHex(this.rgb);\n};\nColor.prototype.toHSL = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255,\n        a = this.alpha;\n\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2, d = max - min;\n\n    if (max === min) {\n        h = s = 0;\n    } else {\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2;               break;\n            case b: h = (r - g) / d + 4;               break;\n        }\n        h /= 6;\n    }\n    return { h: h * 360, s: s, l: l, a: a };\n};\n// Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\nColor.prototype.toHSV = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255,\n        a = this.alpha;\n\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = d / max;\n    }\n\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h * 360, s: s, v: v, a: a };\n};\nColor.prototype.toARGB = function () {\n    return toHex([this.alpha * 255].concat(this.rgb));\n};\nColor.prototype.compare = function (x) {\n    return (x.rgb &&\n        x.rgb[0] === this.rgb[0] &&\n        x.rgb[1] === this.rgb[1] &&\n        x.rgb[2] === this.rgb[2] &&\n        x.alpha  === this.alpha) ? 0 : undefined;\n};\n\nColor.fromKeyword = function(keyword) {\n    var c, key = keyword.toLowerCase();\n    if (colors.hasOwnProperty(key)) {\n        c = new Color(colors[key].slice(1));\n    }\n    else if (key === \"transparent\") {\n        c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n        c.value = keyword;\n        return c;\n    }\n};\nmodule.exports = Color;\n\n},{\"../data/colors\":13,\"./node\":73}],54:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Combinator = function (value) {\n    if (value === ' ') {\n        this.value = ' ';\n        this.emptyOrWhitespace = true;\n    } else {\n        this.value = value ? value.trim() : \"\";\n        this.emptyOrWhitespace = this.value === \"\";\n    }\n};\nCombinator.prototype = new Node();\nCombinator.prototype.type = \"Combinator\";\nvar _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n};\nCombinator.prototype.genCSS = function (context, output) {\n    var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n    output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n};\nmodule.exports = Combinator;\n\n},{\"./node\":73}],55:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    getDebugInfo = require(\"./debug-info\");\n\nvar Comment = function (value, isLineComment, index, currentFileInfo) {\n    this.value = value;\n    this.isLineComment = isLineComment;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n};\nComment.prototype = new Node();\nComment.prototype.type = \"Comment\";\nComment.prototype.genCSS = function (context, output) {\n    if (this.debugInfo) {\n        output.add(getDebugInfo(context, this), this.fileInfo(), this.getIndex());\n    }\n    output.add(this.value);\n};\nComment.prototype.isSilent = function(context) {\n    var isCompressed = context.compress && this.value[2] !== \"!\";\n    return this.isLineComment || isCompressed;\n};\nmodule.exports = Comment;\n\n},{\"./debug-info\":57,\"./node\":73}],56:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Condition = function (op, l, r, i, negate) {\n    this.op = op.trim();\n    this.lvalue = l;\n    this.rvalue = r;\n    this._index = i;\n    this.negate = negate;\n};\nCondition.prototype = new Node();\nCondition.prototype.type = \"Condition\";\nCondition.prototype.accept = function (visitor) {\n    this.lvalue = visitor.visit(this.lvalue);\n    this.rvalue = visitor.visit(this.rvalue);\n};\nCondition.prototype.eval = function (context) {\n    var result = (function (op, a, b) {\n        switch (op) {\n            case 'and': return a && b;\n            case 'or':  return a || b;\n            default:\n                switch (Node.compare(a, b)) {\n                    case -1:\n                        return op === '<' || op === '=<' || op === '<=';\n                    case 0:\n                        return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                    case 1:\n                        return op === '>' || op === '>=';\n                    default:\n                        return false;\n                }\n        }\n    })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n    return this.negate ? !result : result;\n};\nmodule.exports = Condition;\n\n},{\"./node\":73}],57:[function(require,module,exports){\nvar debugInfo = function(context, ctx, lineSeparator) {\n    var result = \"\";\n    if (context.dumpLineNumbers && !context.compress) {\n        switch (context.dumpLineNumbers) {\n            case 'comments':\n                result = debugInfo.asComment(ctx);\n                break;\n            case 'mediaquery':\n                result = debugInfo.asMediaQuery(ctx);\n                break;\n            case 'all':\n                result = debugInfo.asComment(ctx) + (lineSeparator || \"\") + debugInfo.asMediaQuery(ctx);\n                break;\n        }\n    }\n    return result;\n};\n\ndebugInfo.asComment = function(ctx) {\n    return '/* line ' + ctx.debugInfo.lineNumber + ', ' + ctx.debugInfo.fileName + ' */\\n';\n};\n\ndebugInfo.asMediaQuery = function(ctx) {\n    var filenameWithProtocol = ctx.debugInfo.fileName;\n    if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n        filenameWithProtocol = 'file://' + filenameWithProtocol;\n    }\n    return '@media -sass-debug-info{filename{font-family:' +\n        filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n            if (a == '\\\\') {\n                a = '\\/';\n            }\n            return '\\\\' + a;\n        }) +\n        '}line{font-family:\\\\00003' + ctx.debugInfo.lineNumber + '}}\\n';\n};\n\nmodule.exports = debugInfo;\n\n},{}],58:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Value = require(\"./value\"),\n    Keyword = require(\"./keyword\"),\n    Anonymous = require(\"./anonymous\");\n\nvar Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\n    this.name = name;\n    this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n    this.important = important ? ' ' + important.trim() : '';\n    this.merge = merge;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.inline = inline || false;\n    this.variable = (variable !== undefined) ? variable\n        : (name.charAt && (name.charAt(0) === '@'));\n    this.allowRoot = true;\n    this.setParent(this.value, this);\n};\n\nfunction evalName(context, name) {\n    var value = \"\", i, n = name.length,\n        output = {add: function (s) {value += s;}};\n    for (i = 0; i < n; i++) {\n        name[i].eval(context).genCSS(context, output);\n    }\n    return value;\n}\n\nDeclaration.prototype = new Node();\nDeclaration.prototype.type = \"Declaration\";\nDeclaration.prototype.genCSS = function (context, output) {\n    output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n    try {\n        this.value.genCSS(context, output);\n    }\n    catch (e) {\n        e.index = this._index;\n        e.filename = this._fileInfo.filename;\n        throw e;\n    }\n    output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? \"\" : \";\"), this._fileInfo, this._index);\n};\nDeclaration.prototype.eval = function (context) {\n    var strictMathBypass = false, name = this.name, evaldValue, variable = this.variable;\n    if (typeof name !== \"string\") {\n        // expand 'primitive' name directly to get\n        // things faster (~10% for benchmark.less):\n        name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                name[0].value : evalName(context, name);\n        variable = false; // never treat expanded interpolation as new variable name\n    }\n    if (name === \"font\" && !context.strictMath) {\n        strictMathBypass = true;\n        context.strictMath = true;\n    }\n    try {\n        context.importantScope.push({});\n        evaldValue = this.value.eval(context);\n\n        if (!this.variable && evaldValue.type === \"DetachedRuleset\") {\n            throw { message: \"Rulesets cannot be evaluated on a property.\",\n                index: this.getIndex(), filename: this.fileInfo().filename };\n        }\n        var important = this.important,\n            importantResult = context.importantScope.pop();\n        if (!important && importantResult.important) {\n            important = importantResult.important;\n        }\n\n        return new Declaration(name,\n                          evaldValue,\n                          important,\n                          this.merge,\n                          this.getIndex(), this.fileInfo(), this.inline,\n                              variable);\n    }\n    catch (e) {\n        if (typeof e.index !== 'number') {\n            e.index = this.getIndex();\n            e.filename = this.fileInfo().filename;\n        }\n        throw e;\n    }\n    finally {\n        if (strictMathBypass) {\n            context.strictMath = false;\n        }\n    }\n};\nDeclaration.prototype.makeImportant = function () {\n    return new Declaration(this.name,\n                          this.value,\n                          \"!important\",\n                          this.merge,\n                          this.getIndex(), this.fileInfo(), this.inline);\n};\n\nmodule.exports = Declaration;\n},{\"./anonymous\":48,\"./keyword\":68,\"./node\":73,\"./value\":83}],59:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    contexts = require(\"../contexts\"),\n    utils = require(\"../utils\");\n\nvar DetachedRuleset = function (ruleset, frames) {\n    this.ruleset = ruleset;\n    this.frames = frames;\n    this.setParent(this.ruleset, this);\n};\nDetachedRuleset.prototype = new Node();\nDetachedRuleset.prototype.type = \"DetachedRuleset\";\nDetachedRuleset.prototype.evalFirst = true;\nDetachedRuleset.prototype.accept = function (visitor) {\n    this.ruleset = visitor.visit(this.ruleset);\n};\nDetachedRuleset.prototype.eval = function (context) {\n    var frames = this.frames || utils.copyArray(context.frames);\n    return new DetachedRuleset(this.ruleset, frames);\n};\nDetachedRuleset.prototype.callEval = function (context) {\n    return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n};\nmodule.exports = DetachedRuleset;\n\n},{\"../contexts\":12,\"../utils\":86,\"./node\":73}],60:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    unitConversions = require(\"../data/unit-conversions\"),\n    Unit = require(\"./unit\"),\n    Color = require(\"./color\");\n\n//\n// A number with a unit\n//\nvar Dimension = function (value, unit) {\n    this.value = parseFloat(value);\n    if (isNaN(this.value)) {\n        throw new Error(\"Dimension is not a number.\");\n    }\n    this.unit = (unit && unit instanceof Unit) ? unit :\n      new Unit(unit ? [unit] : undefined);\n    this.setParent(this.unit, this);\n};\n\nDimension.prototype = new Node();\nDimension.prototype.type = \"Dimension\";\nDimension.prototype.accept = function (visitor) {\n    this.unit = visitor.visit(this.unit);\n};\nDimension.prototype.eval = function (context) {\n    return this;\n};\nDimension.prototype.toColor = function () {\n    return new Color([this.value, this.value, this.value]);\n};\nDimension.prototype.genCSS = function (context, output) {\n    if ((context && context.strictUnits) && !this.unit.isSingular()) {\n        throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n    }\n\n    var value = this.fround(context, this.value),\n        strValue = String(value);\n\n    if (value !== 0 && value < 0.000001 && value > -0.000001) {\n        // would be output 1e-6 etc.\n        strValue = value.toFixed(20).replace(/0+$/, \"\");\n    }\n\n    if (context && context.compress) {\n        // Zero values doesn't need a unit\n        if (value === 0 && this.unit.isLength()) {\n            output.add(strValue);\n            return;\n        }\n\n        // Float values doesn't need a leading zero\n        if (value > 0 && value < 1) {\n            strValue = (strValue).substr(1);\n        }\n    }\n\n    output.add(strValue);\n    this.unit.genCSS(context, output);\n};\n\n// In an operation between two Dimensions,\n// we default to the first Dimension's unit,\n// so `1px + 2` will yield `3px`.\nDimension.prototype.operate = function (context, op, other) {\n    /* jshint noempty:false */\n    var value = this._operate(context, op, this.value, other.value),\n        unit = this.unit.clone();\n\n    if (op === '+' || op === '-') {\n        if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n            unit = other.unit.clone();\n            if (this.unit.backupUnit) {\n                unit.backupUnit = this.unit.backupUnit;\n            }\n        } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) {\n            // do nothing\n        } else {\n            other = other.convertTo(this.unit.usedUnits());\n\n            if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                throw new Error(\"Incompatible units. Change the units or use the unit function. Bad units: '\" + unit.toString() +\n                    \"' and '\" + other.unit.toString() + \"'.\");\n            }\n\n            value = this._operate(context, op, this.value, other.value);\n        }\n    } else if (op === '*') {\n        unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n        unit.cancel();\n    } else if (op === '/') {\n        unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n        unit.cancel();\n    }\n    return new Dimension(value, unit);\n};\nDimension.prototype.compare = function (other) {\n    var a, b;\n\n    if (!(other instanceof Dimension)) {\n        return undefined;\n    }\n\n    if (this.unit.isEmpty() || other.unit.isEmpty()) {\n        a = this;\n        b = other;\n    } else {\n        a = this.unify();\n        b = other.unify();\n        if (a.unit.compare(b.unit) !== 0) {\n            return undefined;\n        }\n    }\n\n    return Node.numericCompare(a.value, b.value);\n};\nDimension.prototype.unify = function () {\n    return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n};\nDimension.prototype.convertTo = function (conversions) {\n    var value = this.value, unit = this.unit.clone(),\n        i, groupName, group, targetUnit, derivedConversions = {}, applyUnit;\n\n    if (typeof conversions === 'string') {\n        for (i in unitConversions) {\n            if (unitConversions[i].hasOwnProperty(conversions)) {\n                derivedConversions = {};\n                derivedConversions[i] = conversions;\n            }\n        }\n        conversions = derivedConversions;\n    }\n    applyUnit = function (atomicUnit, denominator) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit)) {\n            if (denominator) {\n                value = value / (group[atomicUnit] / group[targetUnit]);\n            } else {\n                value = value * (group[atomicUnit] / group[targetUnit]);\n            }\n\n            return targetUnit;\n        }\n\n        return atomicUnit;\n    };\n\n    for (groupName in conversions) {\n        if (conversions.hasOwnProperty(groupName)) {\n            targetUnit = conversions[groupName];\n            group = unitConversions[groupName];\n\n            unit.map(applyUnit);\n        }\n    }\n\n    unit.cancel();\n\n    return new Dimension(value, unit);\n};\nmodule.exports = Dimension;\n\n},{\"../data/unit-conversions\":15,\"./color\":53,\"./node\":73,\"./unit\":81}],61:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Paren = require(\"./paren\"),\n    Combinator = require(\"./combinator\");\n\nvar Element = function (combinator, value, index, currentFileInfo, visibilityInfo) {\n    this.combinator = combinator instanceof Combinator ?\n                      combinator : new Combinator(combinator);\n\n    if (typeof value === 'string') {\n        this.value = value.trim();\n    } else if (value) {\n        this.value = value;\n    } else {\n        this.value = \"\";\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.combinator, this);\n};\nElement.prototype = new Node();\nElement.prototype.type = \"Element\";\nElement.prototype.accept = function (visitor) {\n    var value = this.value;\n    this.combinator = visitor.visit(this.combinator);\n    if (typeof value === \"object\") {\n        this.value = visitor.visit(value);\n    }\n};\nElement.prototype.eval = function (context) {\n    return new Element(this.combinator,\n                             this.value.eval ? this.value.eval(context) : this.value,\n                             this.getIndex(),\n                             this.fileInfo(), this.visibilityInfo());\n};\nElement.prototype.clone = function () {\n    return new Element(this.combinator,\n        this.value,\n        this.getIndex(),\n        this.fileInfo(), this.visibilityInfo());\n};\nElement.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n};\nElement.prototype.toCSS = function (context) {\n    context = context || {};\n    var value = this.value, firstSelector = context.firstSelector;\n    if (value instanceof Paren) {\n        // selector in parens should not be affected by outer selector\n        // flags (breaks only interpolated selectors - see #1973)\n        context.firstSelector = true;\n    }\n    value = value.toCSS ? value.toCSS(context) : value;\n    context.firstSelector = firstSelector;\n    if (value === '' && this.combinator.value.charAt(0) === '&') {\n        return '';\n    } else {\n        return this.combinator.toCSS(context) + value;\n    }\n};\nmodule.exports = Element;\n\n},{\"./combinator\":54,\"./node\":73,\"./paren\":75}],62:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Paren = require(\"./paren\"),\n    Comment = require(\"./comment\");\n\nvar Expression = function (value) {\n    this.value = value;\n    if (!value) {\n        throw new Error(\"Expression requires an array parameter\");\n    }\n};\nExpression.prototype = new Node();\nExpression.prototype.type = \"Expression\";\nExpression.prototype.accept = function (visitor) {\n    this.value = visitor.visitArray(this.value);\n};\nExpression.prototype.eval = function (context) {\n    var returnValue,\n        inParenthesis = this.parens && !this.parensInOp,\n        doubleParen = false;\n    if (inParenthesis) {\n        context.inParenthesis();\n    }\n    if (this.value.length > 1) {\n        returnValue = new Expression(this.value.map(function (e) {\n            return e.eval(context);\n        }));\n    } else if (this.value.length === 1) {\n        if (this.value[0].parens && !this.value[0].parensInOp) {\n            doubleParen = true;\n        }\n        returnValue = this.value[0].eval(context);\n    } else {\n        returnValue = this;\n    }\n    if (inParenthesis) {\n        context.outOfParenthesis();\n    }\n    if (this.parens && this.parensInOp && !(context.isMathOn()) && !doubleParen) {\n        returnValue = new Paren(returnValue);\n    }\n    return returnValue;\n};\nExpression.prototype.genCSS = function (context, output) {\n    for (var i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n        if (i + 1 < this.value.length) {\n            output.add(\" \");\n        }\n    }\n};\nExpression.prototype.throwAwayComments = function () {\n    this.value = this.value.filter(function(v) {\n        return !(v instanceof Comment);\n    });\n};\nmodule.exports = Expression;\n\n},{\"./comment\":55,\"./node\":73,\"./paren\":75}],63:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\");\n\nvar Extend = function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n    this.selector = selector;\n    this.option = option;\n    this.object_id = Extend.next_id++;\n    this.parent_ids = [this.object_id];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    switch (option) {\n        case \"all\":\n            this.allowBefore = true;\n            this.allowAfter = true;\n            break;\n        default:\n            this.allowBefore = false;\n            this.allowAfter = false;\n            break;\n    }\n    this.setParent(this.selector, this);\n};\nExtend.next_id = 0;\n\nExtend.prototype = new Node();\nExtend.prototype.type = \"Extend\";\nExtend.prototype.accept = function (visitor) {\n    this.selector = visitor.visit(this.selector);\n};\nExtend.prototype.eval = function (context) {\n    return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n};\nExtend.prototype.clone = function (context) {\n    return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n};\n// it concatenates (joins) all selectors in selector array\nExtend.prototype.findSelfSelectors = function (selectors) {\n    var selfElements = [],\n        i,\n        selectorElements;\n\n    for (i = 0; i < selectors.length; i++) {\n        selectorElements = selectors[i].elements;\n        // duplicate the logic in genCSS function inside the selector node.\n        // future TODO - move both logics into the selector joiner visitor\n        if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === \"\") {\n            selectorElements[0].combinator.value = ' ';\n        }\n        selfElements = selfElements.concat(selectors[i].elements);\n    }\n\n    this.selfSelectors = [new Selector(selfElements)];\n    this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n};\nmodule.exports = Extend;\n\n},{\"./node\":73,\"./selector\":79}],64:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Media = require(\"./media\"),\n    URL = require(\"./url\"),\n    Quoted = require(\"./quoted\"),\n    Ruleset = require(\"./ruleset\"),\n    Anonymous = require(\"./anonymous\"),\n    utils = require(\"../utils\"),\n    LessError = require(\"../less-error\");\n\n//\n// CSS @import node\n//\n// The general strategy here is that we don't want to wait\n// for the parsing to be completed, before we start importing\n// the file. That's because in the context of a browser,\n// most of the time will be spent waiting for the server to respond.\n//\n// On creation, we push the import path to our import queue, though\n// `import,push`, we also pass it a callback, which it'll call once\n// the file has been fetched, and parsed.\n//\nvar Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\n    this.options = options;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.path = path;\n    this.features = features;\n    this.allowRoot = true;\n\n    if (this.options.less !== undefined || this.options.inline) {\n        this.css = !this.options.less || this.options.inline;\n    } else {\n        var pathValue = this.getPath();\n        if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n            this.css = true;\n        }\n    }\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.features, this);\n    this.setParent(this.path, this);\n};\n\n//\n// The actual import node doesn't return anything, when converted to CSS.\n// The reason is that it's used at the evaluation stage, so that the rules\n// it imports can be treated like any other rules.\n//\n// In `eval`, we make sure all Import nodes get evaluated, recursively, so\n// we end up with a flat structure, which can easily be imported in the parent\n// ruleset.\n//\nImport.prototype = new Node();\nImport.prototype.type = \"Import\";\nImport.prototype.accept = function (visitor) {\n    if (this.features) {\n        this.features = visitor.visit(this.features);\n    }\n    this.path = visitor.visit(this.path);\n    if (!this.options.isPlugin && !this.options.inline && this.root) {\n        this.root = visitor.visit(this.root);\n    }\n};\nImport.prototype.genCSS = function (context, output) {\n    if (this.css && this.path._fileInfo.reference === undefined) {\n        output.add(\"@import \", this._fileInfo, this._index);\n        this.path.genCSS(context, output);\n        if (this.features) {\n            output.add(\" \");\n            this.features.genCSS(context, output);\n        }\n        output.add(';');\n    }\n};\nImport.prototype.getPath = function () {\n    return (this.path instanceof URL) ?\n        this.path.value.value : this.path.value;\n};\nImport.prototype.isVariableImport = function () {\n    var path = this.path;\n    if (path instanceof URL) {\n        path = path.value;\n    }\n    if (path instanceof Quoted) {\n        return path.containsVariables();\n    }\n\n    return true;\n};\nImport.prototype.evalForImport = function (context) {\n    var path = this.path;\n\n    if (path instanceof URL) {\n        path = path.value;\n    }\n\n    return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n};\nImport.prototype.evalPath = function (context) {\n    var path = this.path.eval(context);\n    var rootpath = this._fileInfo && this._fileInfo.rootpath;\n\n    if (!(path instanceof URL)) {\n        if (rootpath) {\n            var pathValue = path.value;\n            // Add the base path if the import is relative\n            if (pathValue && context.isPathRelative(pathValue)) {\n                path.value = rootpath + pathValue;\n            }\n        }\n        path.value = context.normalizePath(path.value);\n    }\n\n    return path;\n};\nImport.prototype.eval = function (context) {\n    var result = this.doEval(context);\n    if (this.options.reference || this.blocksVisibility()) {\n        if (result.length || result.length === 0) {\n            result.forEach(function (node) {\n                node.addVisibilityBlock();\n            }\n            );\n        } else {\n            result.addVisibilityBlock();\n        }\n    }\n    return result;\n};\nImport.prototype.doEval = function (context) {\n    var ruleset, registry,\n        features = this.features && this.features.eval(context);\n\n    if (this.options.isPlugin) {\n        if (this.root && this.root.eval) {\n            try {\n                this.root.eval(context);\n            }\n            catch (e) {\n                e.message = \"Plugin error during evaluation\";\n                throw new LessError(e, this.root.imports, this.root.filename);\n            }\n        }\n        registry = context.frames[0] && context.frames[0].functionRegistry;\n        if ( registry && this.root && this.root.functions ) {\n            registry.addMultiple( this.root.functions );\n        }\n\n        return [];\n    }\n\n    if (this.skip) {\n        if (typeof this.skip === \"function\") {\n            this.skip = this.skip();\n        }\n        if (this.skip) {\n            return [];\n        }\n    }\n    if (this.options.inline) {\n        var contents = new Anonymous(this.root, 0,\n            {\n                filename: this.importedFilename,\n                reference: this.path._fileInfo && this.path._fileInfo.reference\n            }, true, true);\n\n        return this.features ? new Media([contents], this.features.value) : [contents];\n    } else if (this.css) {\n        var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n        if (!newImport.css && this.error) {\n            throw this.error;\n        }\n        return newImport;\n    } else {\n        ruleset = new Ruleset(null, utils.copyArray(this.root.rules));\n        ruleset.evalImports(context);\n\n        return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n    }\n};\nmodule.exports = Import;\n\n},{\"../less-error\":36,\"../utils\":86,\"./anonymous\":48,\"./media\":69,\"./node\":73,\"./quoted\":77,\"./ruleset\":78,\"./url\":82}],65:[function(require,module,exports){\nvar tree = Object.create(null);\n\ntree.Node = require('./node');\ntree.Color = require('./color');\ntree.AtRule = require('./atrule');\ntree.DetachedRuleset = require('./detached-ruleset');\ntree.Operation = require('./operation');\ntree.Dimension = require('./dimension');\ntree.Unit = require('./unit');\ntree.Keyword = require('./keyword');\ntree.Variable = require('./variable');\ntree.Property = require('./property');\ntree.Ruleset = require('./ruleset');\ntree.Element = require('./element');\ntree.Attribute = require('./attribute');\ntree.Combinator = require('./combinator');\ntree.Selector = require('./selector');\ntree.Quoted = require('./quoted');\ntree.Expression = require('./expression');\ntree.Declaration = require('./declaration');\ntree.Call = require('./call');\ntree.URL = require('./url');\ntree.Import = require('./import');\ntree.mixin = {\n    Call: require('./mixin-call'),\n    Definition: require('./mixin-definition')\n};\ntree.Comment = require('./comment');\ntree.Anonymous = require('./anonymous');\ntree.Value = require('./value');\ntree.JavaScript = require('./javascript');\ntree.Assignment = require('./assignment');\ntree.Condition = require('./condition');\ntree.Paren = require('./paren');\ntree.Media = require('./media');\ntree.UnicodeDescriptor = require('./unicode-descriptor');\ntree.Negative = require('./negative');\ntree.Extend = require('./extend');\ntree.VariableCall = require('./variable-call');\n\nmodule.exports = tree;\n\n},{\"./anonymous\":48,\"./assignment\":49,\"./atrule\":50,\"./attribute\":51,\"./call\":52,\"./color\":53,\"./combinator\":54,\"./comment\":55,\"./condition\":56,\"./declaration\":58,\"./detached-ruleset\":59,\"./dimension\":60,\"./element\":61,\"./expression\":62,\"./extend\":63,\"./import\":64,\"./javascript\":66,\"./keyword\":68,\"./media\":69,\"./mixin-call\":70,\"./mixin-definition\":71,\"./negative\":72,\"./node\":73,\"./operation\":74,\"./paren\":75,\"./property\":76,\"./quoted\":77,\"./ruleset\":78,\"./selector\":79,\"./unicode-descriptor\":80,\"./unit\":81,\"./url\":82,\"./value\":83,\"./variable\":85,\"./variable-call\":84}],66:[function(require,module,exports){\nvar JsEvalNode = require(\"./js-eval-node\"),\n    Dimension = require(\"./dimension\"),\n    Quoted = require(\"./quoted\"),\n    Anonymous = require(\"./anonymous\");\n\nvar JavaScript = function (string, escaped, index, currentFileInfo) {\n    this.escaped = escaped;\n    this.expression = string;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nJavaScript.prototype = new JsEvalNode();\nJavaScript.prototype.type = \"JavaScript\";\nJavaScript.prototype.eval = function(context) {\n    var result = this.evaluateJavaScript(this.expression, context);\n\n    if (typeof result === 'number') {\n        return new Dimension(result);\n    } else if (typeof result === 'string') {\n        return new Quoted('\"' + result + '\"', result, this.escaped, this._index);\n    } else if (Array.isArray(result)) {\n        return new Anonymous(result.join(', '));\n    } else {\n        return new Anonymous(result);\n    }\n};\n\nmodule.exports = JavaScript;\n\n},{\"./anonymous\":48,\"./dimension\":60,\"./js-eval-node\":67,\"./quoted\":77}],67:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\");\n\nvar JsEvalNode = function() {\n};\nJsEvalNode.prototype = new Node();\n\nJsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\n    var result,\n        that = this,\n        evalContext = {};\n\n    if (!context.javascriptEnabled) {\n        throw { message: \"Inline JavaScript is not enabled. Is it set in your options?\",\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n        return that.jsify(new Variable('@' + name, that.getIndex(), that.fileInfo()).eval(context));\n    });\n\n    try {\n        expression = new Function('return (' + expression + ')');\n    } catch (e) {\n        throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\" ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    var variables = context.frames[0].variables();\n    for (var k in variables) {\n        if (variables.hasOwnProperty(k)) {\n            /* jshint loopfunc:true */\n            evalContext[k.slice(1)] = {\n                value: variables[k].value,\n                toJS: function () {\n                    return this.value.eval(context).toCSS();\n                }\n            };\n        }\n    }\n\n    try {\n        result = expression.call(evalContext);\n    } catch (e) {\n        throw { message: \"JavaScript evaluation error: '\" + e.name + ': ' + e.message.replace(/[\"]/g, \"'\") + \"'\" ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n    return result;\n};\nJsEvalNode.prototype.jsify = function (obj) {\n    if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n        return '[' + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + ']';\n    } else {\n        return obj.toCSS();\n    }\n};\n\nmodule.exports = JsEvalNode;\n\n},{\"./node\":73,\"./variable\":85}],68:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Keyword = function (value) { this.value = value; };\nKeyword.prototype = new Node();\nKeyword.prototype.type = \"Keyword\";\nKeyword.prototype.genCSS = function (context, output) {\n    if (this.value === '%') { throw { type: \"Syntax\", message: \"Invalid % without number\" }; }\n    output.add(this.value);\n};\n\nKeyword.True = new Keyword('true');\nKeyword.False = new Keyword('false');\n\nmodule.exports = Keyword;\n\n},{\"./node\":73}],69:[function(require,module,exports){\nvar Ruleset = require(\"./ruleset\"),\n    Value = require(\"./value\"),\n    Selector = require(\"./selector\"),\n    Anonymous = require(\"./anonymous\"),\n    Expression = require(\"./expression\"),\n    AtRule = require(\"./atrule\"),\n    utils = require(\"../utils\");\n\nvar Media = function (value, features, index, currentFileInfo, visibilityInfo) {\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n\n    var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n\n    this.features = new Value(features);\n    this.rules = [new Ruleset(selectors, value)];\n    this.rules[0].allowImports = true;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n    this.setParent(selectors, this);\n    this.setParent(this.features, this);\n    this.setParent(this.rules, this);\n};\nMedia.prototype = new AtRule();\nMedia.prototype.type = \"Media\";\nMedia.prototype.isRulesetLike = function() { return true; };\nMedia.prototype.accept = function (visitor) {\n    if (this.features) {\n        this.features = visitor.visit(this.features);\n    }\n    if (this.rules) {\n        this.rules = visitor.visitArray(this.rules);\n    }\n};\nMedia.prototype.genCSS = function (context, output) {\n    output.add('@media ', this._fileInfo, this._index);\n    this.features.genCSS(context, output);\n    this.outputRuleset(context, output, this.rules);\n};\nMedia.prototype.eval = function (context) {\n    if (!context.mediaBlocks) {\n        context.mediaBlocks = [];\n        context.mediaPath = [];\n    }\n\n    var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n    if (this.debugInfo) {\n        this.rules[0].debugInfo = this.debugInfo;\n        media.debugInfo = this.debugInfo;\n    }\n    \n    media.features = this.features.eval(context);\n\n    context.mediaPath.push(media);\n    context.mediaBlocks.push(media);\n\n    this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n    context.frames.unshift(this.rules[0]);\n    media.rules = [this.rules[0].eval(context)];\n    context.frames.shift();\n\n    context.mediaPath.pop();\n\n    return context.mediaPath.length === 0 ? media.evalTop(context) :\n                media.evalNested(context);\n};\nMedia.prototype.evalTop = function (context) {\n    var result = this;\n\n    // Render all dependent Media blocks.\n    if (context.mediaBlocks.length > 1) {\n        var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n        result = new Ruleset(selectors, context.mediaBlocks);\n        result.multiMedia = true;\n        result.copyVisibilityInfo(this.visibilityInfo());\n        this.setParent(result, this);\n    }\n\n    delete context.mediaBlocks;\n    delete context.mediaPath;\n\n    return result;\n};\nMedia.prototype.evalNested = function (context) {\n    var i, value,\n        path = context.mediaPath.concat([this]);\n\n    // Extract the media-query conditions separated with `,` (OR).\n    for (i = 0; i < path.length; i++) {\n        value = path[i].features instanceof Value ?\n                    path[i].features.value : path[i].features;\n        path[i] = Array.isArray(value) ? value : [value];\n    }\n\n    // Trace all permutations to generate the resulting media-query.\n    //\n    // (a, b and c) with nested (d, e) ->\n    //    a and d\n    //    a and e\n    //    b and c and d\n    //    b and c and e\n    this.features = new Value(this.permute(path).map(function (path) {\n        path = path.map(function (fragment) {\n            return fragment.toCSS ? fragment : new Anonymous(fragment);\n        });\n\n        for (i = path.length - 1; i > 0; i--) {\n            path.splice(i, 0, new Anonymous(\"and\"));\n        }\n\n        return new Expression(path);\n    }));\n    this.setParent(this.features, this);\n\n    // Fake a tree-node that doesn't output anything.\n    return new Ruleset([], []);\n};\nMedia.prototype.permute = function (arr) {\n    if (arr.length === 0) {\n        return [];\n    } else if (arr.length === 1) {\n        return arr[0];\n    } else {\n        var result = [];\n        var rest = this.permute(arr.slice(1));\n        for (var i = 0; i < rest.length; i++) {\n            for (var j = 0; j < arr[0].length; j++) {\n                result.push([arr[0][j]].concat(rest[i]));\n            }\n        }\n        return result;\n    }\n};\nMedia.prototype.bubbleSelectors = function (selectors) {\n    if (!selectors) {\n        return;\n    }\n    this.rules = [new Ruleset(utils.copyArray(selectors), [this.rules[0]])];\n    this.setParent(this.rules, this);\n};\nmodule.exports = Media;\n\n},{\"../utils\":86,\"./anonymous\":48,\"./atrule\":50,\"./expression\":62,\"./ruleset\":78,\"./selector\":79,\"./value\":83}],70:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    MixinDefinition = require(\"./mixin-definition\"),\n    defaultFunc = require(\"../functions/default\");\n\nvar MixinCall = function (elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n    this.setParent(this.selector, this);\n};\nMixinCall.prototype = new Node();\nMixinCall.prototype.type = \"MixinCall\";\nMixinCall.prototype.accept = function (visitor) {\n    if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n    }\n    if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n    }\n};\nMixinCall.prototype.eval = function (context) {\n    var mixins, mixin, mixinPath, args = [], arg, argValue,\n        rules = [], match = false, i, m, f, isRecursive, isOneFound,\n        candidates = [], candidate, conditionResult = [], defaultResult, defFalseEitherCase = -1,\n        defNone = 0, defTrue = 1, defFalse = 2, count, originalRuleset, noArgumentsFilter;\n\n    function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n\n        for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                namespace = mixinPath[p];\n                if (namespace.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                }\n            }\n            if (mixin.matchCondition) {\n                conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n        }\n        if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n                return conditionResult[1] ?\n                    defTrue : defFalse;\n            }\n\n            return defNone;\n        }\n        return defFalseEitherCase;\n    }\n\n    for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n        if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n            for (m = 0; m < argValue.length; m++) {\n                args.push({value: argValue[m]});\n            }\n        } else {\n            args.push({name: arg.name, value: argValue});\n        }\n    }\n\n    noArgumentsFilter = function(rule) {return rule.matchArgs(null, context);};\n\n    for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true;\n\n            // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n                mixin = mixins[m].rule;\n                mixinPath = mixins[m].path;\n                isRecursive = false;\n                for (f = 0; f < context.frames.length; f++) {\n                    if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                        isRecursive = true;\n                        break;\n                    }\n                }\n                if (isRecursive) {\n                    continue;\n                }\n\n                if (mixin.matchArgs(args, context)) {\n                    candidate = {mixin: mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                    if (candidate.group !== defFalseEitherCase) {\n                        candidates.push(candidate);\n                    }\n\n                    match = true;\n                }\n            }\n\n            defaultFunc.reset();\n\n            count = [0, 0, 0];\n            for (m = 0; m < candidates.length; m++) {\n                count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n                defaultResult = defFalse;\n            } else {\n                defaultResult = defTrue;\n                if ((count[defTrue] + count[defFalse]) > 1) {\n                    throw { type: 'Runtime',\n                        message: 'Ambiguous use of `default()` found when matching for `' + this.format(args) + '`',\n                        index: this.getIndex(), filename: this.fileInfo().filename };\n                }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n                candidate = candidates[m].group;\n                if ((candidate === defNone) || (candidate === defaultResult)) {\n                    try {\n                        mixin = candidates[m].mixin;\n                        if (!(mixin instanceof MixinDefinition)) {\n                            originalRuleset = mixin.originalRuleset || mixin;\n                            mixin = new MixinDefinition(\"\", [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                            mixin.originalRuleset = originalRuleset;\n                        }\n                        var newRules = mixin.evalCall(context, args, this.important).rules;\n                        this._setVisibilityToReplacement(newRules);\n                        Array.prototype.push.apply(rules, newRules);\n                    } catch (e) {\n                        throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                    }\n                }\n            }\n\n            if (match) {\n                return rules;\n            }\n        }\n    }\n    if (isOneFound) {\n        throw { type:    'Runtime',\n            message: 'No matching definition was found for `' + this.format(args) + '`',\n            index:   this.getIndex(), filename: this.fileInfo().filename };\n    } else {\n        throw { type:    'Name',\n            message: this.selector.toCSS().trim() + \" is undefined\",\n            index:   this.getIndex(), filename: this.fileInfo().filename };\n    }\n};\n\nMixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n    var i, rule;\n    if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n        }\n    }\n};\nMixinCall.prototype.format = function (args) {\n    return this.selector.toCSS().trim() + '(' +\n        (args ? args.map(function (a) {\n            var argValue = \"\";\n            if (a.name) {\n                argValue += a.name + \":\";\n            }\n            if (a.value.toCSS) {\n                argValue += a.value.toCSS();\n            } else {\n                argValue += \"???\";\n            }\n            return argValue;\n        }).join(', ') : \"\") + \")\";\n};\nmodule.exports = MixinCall;\n\n},{\"../functions/default\":24,\"./mixin-definition\":71,\"./node\":73,\"./selector\":79}],71:[function(require,module,exports){\nvar Selector = require(\"./selector\"),\n    Element = require(\"./element\"),\n    Ruleset = require(\"./ruleset\"),\n    Declaration = require(\"./declaration\"),\n    Expression = require(\"./expression\"),\n    contexts = require(\"../contexts\"),\n    utils = require(\"../utils\");\n\nvar Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\n    this.name = name;\n    this.selectors = [new Selector([new Element(null, name, this._index, this._fileInfo)])];\n    this.params = params;\n    this.condition = condition;\n    this.variadic = variadic;\n    this.arity = params.length;\n    this.rules = rules;\n    this._lookups = {};\n    var optionalParameters = [];\n    this.required = params.reduce(function (count, p) {\n        if (!p.name || (p.name && !p.value)) {\n            return count + 1;\n        }\n        else {\n            optionalParameters.push(p.name);\n            return count;\n        }\n    }, 0);\n    this.optionalParameters = optionalParameters;\n    this.frames = frames;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n};\nDefinition.prototype = new Ruleset();\nDefinition.prototype.type = \"MixinDefinition\";\nDefinition.prototype.evalFirst = true;\nDefinition.prototype.accept = function (visitor) {\n    if (this.params && this.params.length) {\n        this.params = visitor.visitArray(this.params);\n    }\n    this.rules = visitor.visitArray(this.rules);\n    if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n    }\n};\nDefinition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\n    /* jshint boss:true */\n    var frame = new Ruleset(null, null),\n        varargs, arg,\n        params = utils.copyArray(this.params),\n        i, j, val, name, isNamedFound, argIndex, argsLength = 0;\n\n    if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n        frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n    }\n    mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n    if (args) {\n        args = utils.copyArray(args);\n        argsLength = args.length;\n\n        for (i = 0; i < argsLength; i++) {\n            arg = args[i];\n            if (name = (arg && arg.name)) {\n                isNamedFound = false;\n                for (j = 0; j < params.length; j++) {\n                    if (!evaldArguments[j] && name === params[j].name) {\n                        evaldArguments[j] = arg.value.eval(context);\n                        frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                        isNamedFound = true;\n                        break;\n                    }\n                }\n                if (isNamedFound) {\n                    args.splice(i, 1);\n                    i--;\n                    continue;\n                } else {\n                    throw { type: 'Runtime', message: \"Named argument for \" + this.name +\n                        ' ' + args[i].name + ' not found' };\n                }\n            }\n        }\n    }\n    argIndex = 0;\n    for (i = 0; i < params.length; i++) {\n        if (evaldArguments[i]) { continue; }\n\n        arg = args && args[argIndex];\n\n        if (name = params[i].name) {\n            if (params[i].variadic) {\n                varargs = [];\n                for (j = argIndex; j < argsLength; j++) {\n                    varargs.push(args[j].value.eval(context));\n                }\n                frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n            } else {\n                val = arg && arg.value;\n                if (val) {\n                    val = val.eval(context);\n                } else if (params[i].value) {\n                    val = params[i].value.eval(mixinEnv);\n                    frame.resetCache();\n                } else {\n                    throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name +\n                        ' (' + argsLength + ' for ' + this.arity + ')' };\n                }\n\n                frame.prependRule(new Declaration(name, val));\n                evaldArguments[i] = val;\n            }\n        }\n\n        if (params[i].variadic && args) {\n            for (j = argIndex; j < argsLength; j++) {\n                evaldArguments[j] = args[j].value.eval(context);\n            }\n        }\n        argIndex++;\n    }\n\n    return frame;\n};\nDefinition.prototype.makeImportant = function() {\n    var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n        if (r.makeImportant) {\n            return r.makeImportant(true);\n        } else {\n            return r;\n        }\n    });\n    var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n    return result;\n};\nDefinition.prototype.eval = function (context) {\n    return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || utils.copyArray(context.frames));\n};\nDefinition.prototype.evalCall = function (context, args, important) {\n    var _arguments = [],\n        mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames,\n        frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments),\n        rules, ruleset;\n\n    frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n\n    rules = utils.copyArray(this.rules);\n\n    ruleset = new Ruleset(null, rules);\n    ruleset.originalRuleset = this;\n    ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n    if (important) {\n        ruleset = ruleset.makeImportant();\n    }\n    return ruleset;\n};\nDefinition.prototype.matchCondition = function (args, context) {\n    if (this.condition && !this.condition.eval(\n        new contexts.Eval(context,\n            [this.evalParams(context, /* the parameter variables */\n                new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n            .concat(this.frames || []) // the parent namespace/mixin frames\n            .concat(context.frames)))) { // the current environment frames\n        return false;\n    }\n    return true;\n};\nDefinition.prototype.matchArgs = function (args, context) {\n    var allArgsCnt = (args && args.length) || 0, len, optionalParameters = this.optionalParameters;\n    var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n        if (optionalParameters.indexOf(p.name) < 0) {\n            return count + 1;\n        } else {\n            return count;\n        }\n    }, 0);\n\n    if (!this.variadic) {\n        if (requiredArgsCnt < this.required) {\n            return false;\n        }\n        if (allArgsCnt > this.params.length) {\n            return false;\n        }\n    } else {\n        if (requiredArgsCnt < (this.required - 1)) {\n            return false;\n        }\n    }\n\n    // check patterns\n    len = Math.min(requiredArgsCnt, this.arity);\n\n    for (var i = 0; i < len; i++) {\n        if (!this.params[i].name && !this.params[i].variadic) {\n            if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nmodule.exports = Definition;\n\n},{\"../contexts\":12,\"../utils\":86,\"./declaration\":58,\"./element\":61,\"./expression\":62,\"./ruleset\":78,\"./selector\":79}],72:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Operation = require(\"./operation\"),\n    Dimension = require(\"./dimension\");\n\nvar Negative = function (node) {\n    this.value = node;\n};\nNegative.prototype = new Node();\nNegative.prototype.type = \"Negative\";\nNegative.prototype.genCSS = function (context, output) {\n    output.add('-');\n    this.value.genCSS(context, output);\n};\nNegative.prototype.eval = function (context) {\n    if (context.isMathOn()) {\n        return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n    }\n    return new Negative(this.value.eval(context));\n};\nmodule.exports = Negative;\n\n},{\"./dimension\":60,\"./node\":73,\"./operation\":74}],73:[function(require,module,exports){\nvar Node = function() {\n    this.parent = null;\n    this.visibilityBlocks = undefined;\n    this.nodeVisible = undefined;\n    this.rootNode = null;\n    this.parsed = null;\n\n    var self = this;\n    Object.defineProperty(this, \"currentFileInfo\", {\n        get: function() { return self.fileInfo(); }\n    });\n    Object.defineProperty(this, \"index\", {\n        get: function() { return self.getIndex(); }\n    });\n\n};\nNode.prototype.setParent = function(nodes, parent) {\n    function set(node) {\n        if (node && node instanceof Node) {\n            node.parent = parent;\n        }\n    }\n    if (Array.isArray(nodes)) {\n        nodes.forEach(set);\n    }\n    else {\n        set(nodes);\n    }\n};\nNode.prototype.getIndex = function() {\n    return this._index || (this.parent && this.parent.getIndex()) || 0;\n};\nNode.prototype.fileInfo = function() {\n    return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n};\nNode.prototype.isRulesetLike = function() { return false; };\nNode.prototype.toCSS = function (context) {\n    var strs = [];\n    this.genCSS(context, {\n        add: function(chunk, fileInfo, index) {\n            strs.push(chunk);\n        },\n        isEmpty: function () {\n            return strs.length === 0;\n        }\n    });\n    return strs.join('');\n};\nNode.prototype.genCSS = function (context, output) {\n    output.add(this.value);\n};\nNode.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nNode.prototype.eval = function () { return this; };\nNode.prototype._operate = function (context, op, a, b) {\n    switch (op) {\n        case '+': return a + b;\n        case '-': return a - b;\n        case '*': return a * b;\n        case '/': return a / b;\n    }\n};\nNode.prototype.fround = function(context, value) {\n    var precision = context && context.numPrecision;\n    // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n    return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n};\nNode.compare = function (a, b) {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n\n    if ((a.compare) &&\n        // for \"symmetric results\" force toCSS-based comparison\n        // of Quoted or Anonymous if either value is one of those\n        !(b.type === \"Quoted\" || b.type === \"Anonymous\")) {\n        return a.compare(b);\n    } else if (b.compare) {\n        return -b.compare(a);\n    } else if (a.type !== b.type) {\n        return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n    if (!Array.isArray(a)) {\n        return a === b ? 0 : undefined;\n    }\n    if (a.length !== b.length) {\n        return undefined;\n    }\n    for (var i = 0; i < a.length; i++) {\n        if (Node.compare(a[i], b[i]) !== 0) {\n            return undefined;\n        }\n    }\n    return 0;\n};\n\nNode.numericCompare = function (a, b) {\n    return a  <  b ? -1\n        : a === b ?  0\n        : a  >  b ?  1 : undefined;\n};\n// Returns true if this node represents root of ast imported by reference\nNode.prototype.blocksVisibility = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    return this.visibilityBlocks !== 0;\n};\nNode.prototype.addVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks + 1;\n};\nNode.prototype.removeVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks - 1;\n};\n// Turns on node visibility - if called node will be shown in output regardless\n// of whether it comes from import by reference or not\nNode.prototype.ensureVisibility = function () {\n    this.nodeVisible = true;\n};\n// Turns off node visibility - if called node will NOT be shown in output regardless\n// of whether it comes from import by reference or not\nNode.prototype.ensureInvisibility = function () {\n    this.nodeVisible = false;\n};\n// return values:\n// false - the node must not be visible\n// true - the node must be visible\n// undefined or null - the node has the same visibility as its parent\nNode.prototype.isVisible = function () {\n    return this.nodeVisible;\n};\nNode.prototype.visibilityInfo = function() {\n    return {\n        visibilityBlocks: this.visibilityBlocks,\n        nodeVisible: this.nodeVisible\n    };\n};\nNode.prototype.copyVisibilityInfo = function(info) {\n    if (!info) {\n        return;\n    }\n    this.visibilityBlocks = info.visibilityBlocks;\n    this.nodeVisible = info.nodeVisible;\n};\nmodule.exports = Node;\n\n},{}],74:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Color = require(\"./color\"),\n    Dimension = require(\"./dimension\");\n\nvar Operation = function (op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n};\nOperation.prototype = new Node();\nOperation.prototype.type = \"Operation\";\nOperation.prototype.accept = function (visitor) {\n    this.operands = visitor.visit(this.operands);\n};\nOperation.prototype.eval = function (context) {\n    var a = this.operands[0].eval(context),\n        b = this.operands[1].eval(context);\n\n    if (context.isMathOn()) {\n        if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n        }\n        if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n        }\n        if (!a.operate) {\n            throw { type: \"Operation\",\n                message: \"Operation on an invalid type\" };\n        }\n\n        return a.operate(context, this.op, b);\n    } else {\n        return new Operation(this.op, [a, b], this.isSpaced);\n    }\n};\nOperation.prototype.genCSS = function (context, output) {\n    this.operands[0].genCSS(context, output);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    output.add(this.op);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    this.operands[1].genCSS(context, output);\n};\n\nmodule.exports = Operation;\n\n},{\"./color\":53,\"./dimension\":60,\"./node\":73}],75:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Paren = function (node) {\n    this.value = node;\n};\nParen.prototype = new Node();\nParen.prototype.type = \"Paren\";\nParen.prototype.genCSS = function (context, output) {\n    output.add('(');\n    this.value.genCSS(context, output);\n    output.add(')');\n};\nParen.prototype.eval = function (context) {\n    return new Paren(this.value.eval(context));\n};\nmodule.exports = Paren;\n\n},{\"./node\":73}],76:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Declaration = require(\"./declaration\");\n\nvar Property = function (name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nProperty.prototype = new Node();\nProperty.prototype.type = \"Property\";\nProperty.prototype.eval = function (context) {\n    var property, name = this.name;\n    // TODO: shorten this reference\n    var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n    if (this.evaluating) {\n        throw { type: 'Name',\n            message: \"Recursive property reference for \" + name,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    this.evaluating = true;\n\n    property = this.find(context.frames, function (frame) {\n\n        var v, vArr = frame.property(name);\n        if (vArr) {\n            for (var i = 0; i < vArr.length; i++) {\n                v = vArr[i];\n\n                vArr[i] = new Declaration(v.name,\n                    v.value,\n                    v.important,\n                    v.merge,\n                    v.index,\n                    v.currentFileInfo,\n                    v.inline,\n                    v.variable\n                );\n            }\n            mergeRules(vArr);\n\n            v = vArr[vArr.length - 1];\n            if (v.important) {\n                var importantScope = context.importantScope[context.importantScope.length - 1];\n                importantScope.important = v.important;\n            }\n            v = v.value.eval(context);\n            return v;\n        }\n    });\n    if (property) {\n        this.evaluating = false;\n        return property;\n    } else {\n        throw { type: 'Name',\n            message: \"Property '\" + name + \"' is undefined\",\n            filename: this.currentFileInfo.filename,\n            index: this.index };\n    }\n};\nProperty.prototype.find = function (obj, fun) {\n    for (var i = 0, r; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n        if (r) { return r; }\n    }\n    return null;\n};\nmodule.exports = Property;\n\n},{\"./declaration\":58,\"./node\":73}],77:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\"),\n    Property = require(\"./property\");\n\nvar Quoted = function (str, content, escaped, index, currentFileInfo) {\n    this.escaped = (escaped == null) ? true : escaped;\n    this.value = content || '';\n    this.quote = str.charAt(0);\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nQuoted.prototype = new Node();\nQuoted.prototype.type = \"Quoted\";\nQuoted.prototype.genCSS = function (context, output) {\n    if (!this.escaped) {\n        output.add(this.quote, this.fileInfo(), this.getIndex());\n    }\n    output.add(this.value);\n    if (!this.escaped) {\n        output.add(this.quote);\n    }\n};\nQuoted.prototype.containsVariables = function() {\n    return this.value.match(/@\\{([\\w-]+)\\}/);\n};\nQuoted.prototype.eval = function (context) {\n    var that = this, value = this.value;\n    var variableReplacement = function (_, name) {\n        var v = new Variable('@' + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return (v instanceof Quoted) ? v.value : v.toCSS();\n    };\n    var propertyReplacement = function (_, name) {\n        var v = new Property('$' + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return (v instanceof Quoted) ? v.value : v.toCSS();\n    };\n    function iterativeReplace(value, regexp, replacementFnc) {\n        var evaluatedValue = value;\n        do {\n            value = evaluatedValue;\n            evaluatedValue = value.replace(regexp, replacementFnc);\n        } while (value !== evaluatedValue);\n        return evaluatedValue;\n    }\n    value = iterativeReplace(value, /@\\{([\\w-]+)\\}/g, variableReplacement);\n    value = iterativeReplace(value, /\\$\\{([\\w-]+)\\}/g, propertyReplacement);\n    return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n};\nQuoted.prototype.compare = function (other) {\n    // when comparing quoted strings allow the quote to differ\n    if (other.type === \"Quoted\" && !this.escaped && !other.escaped) {\n        return Node.numericCompare(this.value, other.value);\n    } else {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    }\n};\nmodule.exports = Quoted;\n\n},{\"./node\":73,\"./property\":76,\"./variable\":85}],78:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Declaration = require(\"./declaration\"),\n    Keyword = require(\"./keyword\"),\n    Comment = require(\"./comment\"),\n    Paren = require(\"./paren\"),\n    Selector = require(\"./selector\"),\n    Element = require(\"./element\"),\n    Anonymous = require(\"./anonymous\"),\n    contexts = require(\"../contexts\"),\n    globalFunctionRegistry = require(\"../functions/function-registry\"),\n    defaultFunc = require(\"../functions/default\"),\n    getDebugInfo = require(\"./debug-info\"),\n    utils = require(\"../utils\");\n\nvar Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\n    this.selectors = selectors;\n    this.rules = rules;\n    this._lookups = {};\n    this._variables = null;\n    this._properties = null;\n    this.strictImports = strictImports;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    this.setParent(this.selectors, this);\n    this.setParent(this.rules, this);\n\n};\nRuleset.prototype = new Node();\nRuleset.prototype.type = \"Ruleset\";\nRuleset.prototype.isRuleset = true;\nRuleset.prototype.isRulesetLike = function() { return true; };\nRuleset.prototype.accept = function (visitor) {\n    if (this.paths) {\n        this.paths = visitor.visitArray(this.paths, true);\n    } else if (this.selectors) {\n        this.selectors = visitor.visitArray(this.selectors);\n    }\n    if (this.rules && this.rules.length) {\n        this.rules = visitor.visitArray(this.rules);\n    }\n};\nRuleset.prototype.eval = function (context) {\n    var thisSelectors = this.selectors, selectors,\n        selCnt, selector, i, hasOnePassingSelector = false;\n\n    if (thisSelectors && (selCnt = thisSelectors.length)) {\n        selectors = new Array(selCnt);\n        defaultFunc.error({\n            type: \"Syntax\",\n            message: \"it is currently only allowed in parametric mixin guards,\"\n        });\n        for (i = 0; i < selCnt; i++) {\n            selector = thisSelectors[i].eval(context);\n            selectors[i] = selector;\n            if (selector.evaldCondition) {\n                hasOnePassingSelector = true;\n            }\n        }\n        defaultFunc.reset();\n    } else {\n        hasOnePassingSelector = true;\n    }\n\n    var rules = this.rules ? utils.copyArray(this.rules) : null,\n        ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo()),\n        rule, subRule;\n\n    ruleset.originalRuleset = this;\n    ruleset.root = this.root;\n    ruleset.firstRoot = this.firstRoot;\n    ruleset.allowImports = this.allowImports;\n\n    if (this.debugInfo) {\n        ruleset.debugInfo = this.debugInfo;\n    }\n\n    if (!hasOnePassingSelector) {\n        rules.length = 0;\n    }\n\n    // inherit a function registry from the frames stack when possible;\n    // otherwise from the global registry\n    ruleset.functionRegistry = (function (frames) {\n        var i = 0,\n            n = frames.length,\n            found;\n        for ( ; i !== n ; ++i ) {\n            found = frames[ i ].functionRegistry;\n            if ( found ) { return found; }\n        }\n        return globalFunctionRegistry;\n    }(context.frames)).inherit();\n\n    // push the current ruleset to the frames stack\n    var ctxFrames = context.frames;\n    ctxFrames.unshift(ruleset);\n\n    // currrent selectors\n    var ctxSelectors = context.selectors;\n    if (!ctxSelectors) {\n        context.selectors = ctxSelectors = [];\n    }\n    ctxSelectors.unshift(this.selectors);\n\n    // Evaluate imports\n    if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n        ruleset.evalImports(context);\n    }\n\n    // Store the frames around mixin definitions,\n    // so they can be evaluated like closures when the time comes.\n    var rsRules = ruleset.rules;\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (rule.evalFirst) {\n            rsRules[i] = rule.eval(context);\n        }\n    }\n\n    var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n\n    // Evaluate mixin calls.\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (rule.type === \"MixinCall\") {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).filter(function(r) {\n                if ((r instanceof Declaration) && r.variable) {\n                    // do not pollute the scope if the variable is\n                    // already there. consider returning false here\n                    // but we need a way to \"return\" variable from mixins\n                    return !(ruleset.variable(r.name));\n                }\n                return true;\n            });\n            rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n            i += rules.length - 1;\n            ruleset.resetCache();\n        } else if (rule.type ===  \"VariableCall\") {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).rules.filter(function(r) {\n                if ((r instanceof Declaration) && r.variable) {\n                    // do not pollute the scope at all\n                    return false;\n                }\n                return true;\n            });\n            rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n            i += rules.length - 1;\n            ruleset.resetCache();\n        }\n    }\n\n    // Evaluate everything else\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (!rule.evalFirst) {\n            rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n        }\n    }\n\n    // Evaluate everything else\n    for (i = 0; (rule = rsRules[i]); i++) {\n        // for rulesets, check if it is a css guard and can be removed\n        if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n            // check if it can be folded in (e.g. & where)\n            if (rule.selectors[0].isJustParentSelector()) {\n                rsRules.splice(i--, 1);\n\n                for (var j = 0; (subRule = rule.rules[j]); j++) {\n                    if (subRule instanceof Node) {\n                        subRule.copyVisibilityInfo(rule.visibilityInfo());\n                        if (!(subRule instanceof Declaration) || !subRule.variable) {\n                            rsRules.splice(++i, 0, subRule);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Pop the stack\n    ctxFrames.shift();\n    ctxSelectors.shift();\n\n    if (context.mediaBlocks) {\n        for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n            context.mediaBlocks[i].bubbleSelectors(selectors);\n        }\n    }\n\n    return ruleset;\n};\nRuleset.prototype.evalImports = function(context) {\n    var rules = this.rules, i, importRules;\n    if (!rules) { return; }\n\n    for (i = 0; i < rules.length; i++) {\n        if (rules[i].type === \"Import\") {\n            importRules = rules[i].eval(context);\n            if (importRules && (importRules.length || importRules.length === 0)) {\n                rules.splice.apply(rules, [i, 1].concat(importRules));\n                i += importRules.length - 1;\n            } else {\n                rules.splice(i, 1, importRules);\n            }\n            this.resetCache();\n        }\n    }\n};\nRuleset.prototype.makeImportant = function() {\n    var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n        if (r.makeImportant) {\n            return r.makeImportant();\n        } else {\n            return r;\n        }\n    }), this.strictImports, this.visibilityInfo());\n\n    return result;\n};\nRuleset.prototype.matchArgs = function (args) {\n    return !args || args.length === 0;\n};\n// lets you call a css selector with a guard\nRuleset.prototype.matchCondition = function (args, context) {\n    var lastSelector = this.selectors[this.selectors.length - 1];\n    if (!lastSelector.evaldCondition) {\n        return false;\n    }\n    if (lastSelector.condition &&\n        !lastSelector.condition.eval(\n            new contexts.Eval(context,\n                context.frames))) {\n        return false;\n    }\n    return true;\n};\nRuleset.prototype.resetCache = function () {\n    this._rulesets = null;\n    this._variables = null;\n    this._properties = null;\n    this._lookups = {};\n};\nRuleset.prototype.variables = function () {\n    if (!this._variables) {\n        this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable === true) {\n                hash[r.name] = r;\n            }\n            // when evaluating variables in an import statement, imports have not been eval'd\n            // so we need to go inside import statements.\n            // guard against root being a string (in the case of inlined less)\n            if (r.type === \"Import\" && r.root && r.root.variables) {\n                var vars = r.root.variables();\n                for (var name in vars) {\n                    if (vars.hasOwnProperty(name)) {\n                        hash[name] = vars[name];\n                    }\n                }\n            }\n            return hash;\n        }, {});\n    }\n    return this._variables;\n};\nRuleset.prototype.properties = function () {\n    if (!this._properties) {\n        this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable !== true) {\n                var name = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                    r.name[0].value : r.name;\n                // Properties don't overwrite as they can merge\n                if (!hash['$' + name]) {\n                    hash['$' + name] = [ r ];\n                }\n                else {\n                    hash['$' + name].push(r);\n                }\n            }\n            return hash;\n        }, {});\n    }\n    return this._properties;\n};\nRuleset.prototype.variable = function (name) {\n    var decl = this.variables()[name];\n    if (decl) {\n        return this.parseValue(decl);\n    }\n};\nRuleset.prototype.property = function (name) {\n    var decl = this.properties()[name];\n    if (decl) {\n        return this.parseValue(decl);\n    }\n};\nRuleset.prototype.parseValue = function(toParse) {\n    var self = this;\n    function transformDeclaration(decl) {\n        if (decl.value instanceof Anonymous && !decl.parsed) {\n            this.parse.parseNode(\n                decl.value.value, \n                [\"value\", \"important\"], \n                decl.value.getIndex(), \n                decl.fileInfo(), \n                function(err, result) {\n                    if (err) {\n                        decl.parsed = true;\n                    }\n                    if (result) {\n                        decl.value = result[0];\n                        decl.important = result[1] || '';\n                        decl.parsed = true;\n                    }\n                });\n\n            return decl;\n        }\n        else {\n            return decl;\n        }\n    }\n    if (!Array.isArray(toParse)) {\n        return transformDeclaration.call(self, toParse);\n    }\n    else {\n        var nodes = [];\n        toParse.forEach(function(n) {\n            nodes.push(transformDeclaration.call(self, n));\n        });\n        return nodes;\n    }\n};\nRuleset.prototype.rulesets = function () {\n    if (!this.rules) { return []; }\n\n    var filtRules = [], rules = this.rules,\n        i, rule;\n\n    for (i = 0; (rule = rules[i]); i++) {\n        if (rule.isRuleset) {\n            filtRules.push(rule);\n        }\n    }\n\n    return filtRules;\n};\nRuleset.prototype.prependRule = function (rule) {\n    var rules = this.rules;\n    if (rules) {\n        rules.unshift(rule);\n    } else {\n        this.rules = [ rule ];\n    }\n    this.setParent(rule, this);\n};\nRuleset.prototype.find = function (selector, self, filter) {\n    self = self || this;\n    var rules = [], match, foundMixins,\n        key = selector.toCSS();\n\n    if (key in this._lookups) { return this._lookups[key]; }\n\n    this.rulesets().forEach(function (rule) {\n        if (rule !== self) {\n            for (var j = 0; j < rule.selectors.length; j++) {\n                match = selector.match(rule.selectors[j]);\n                if (match) {\n                    if (selector.elements.length > match) {\n                        if (!filter || filter(rule)) {\n                            foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                            for (var i = 0; i < foundMixins.length; ++i) {\n                                foundMixins[i].path.push(rule);\n                            }\n                            Array.prototype.push.apply(rules, foundMixins);\n                        }\n                    } else {\n                        rules.push({ rule: rule, path: []});\n                    }\n                    break;\n                }\n            }\n        }\n    });\n    this._lookups[key] = rules;\n    return rules;\n};\nRuleset.prototype.genCSS = function (context, output) {\n    var i, j,\n        charsetRuleNodes = [],\n        ruleNodes = [],\n        debugInfo,     // Line number debugging\n        rule,\n        path;\n\n    context.tabLevel = (context.tabLevel || 0);\n\n    if (!this.root) {\n        context.tabLevel++;\n    }\n\n    var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join(\"  \"),\n        tabSetStr = context.compress ? '' : Array(context.tabLevel).join(\"  \"),\n        sep;\n\n    var charsetNodeIndex = 0;\n    var importNodeIndex = 0;\n    for (i = 0; (rule = this.rules[i]); i++) {\n        if (rule instanceof Comment) {\n            if (importNodeIndex === i) {\n                importNodeIndex++;\n            }\n            ruleNodes.push(rule);\n        } else if (rule.isCharset && rule.isCharset()) {\n            ruleNodes.splice(charsetNodeIndex, 0, rule);\n            charsetNodeIndex++;\n            importNodeIndex++;\n        } else if (rule.type === \"Import\") {\n            ruleNodes.splice(importNodeIndex, 0, rule);\n            importNodeIndex++;\n        } else {\n            ruleNodes.push(rule);\n        }\n    }\n    ruleNodes = charsetRuleNodes.concat(ruleNodes);\n\n    // If this is the root node, we don't render\n    // a selector, or {}.\n    if (!this.root) {\n        debugInfo = getDebugInfo(context, this, tabSetStr);\n\n        if (debugInfo) {\n            output.add(debugInfo);\n            output.add(tabSetStr);\n        }\n\n        var paths = this.paths, pathCnt = paths.length,\n            pathSubCnt;\n\n        sep = context.compress ? ',' : (',\\n' + tabSetStr);\n\n        for (i = 0; i < pathCnt; i++) {\n            path = paths[i];\n            if (!(pathSubCnt = path.length)) { continue; }\n            if (i > 0) { output.add(sep); }\n\n            context.firstSelector = true;\n            path[0].genCSS(context, output);\n\n            context.firstSelector = false;\n            for (j = 1; j < pathSubCnt; j++) {\n                path[j].genCSS(context, output);\n            }\n        }\n\n        output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n    }\n\n    // Compile rules and rulesets\n    for (i = 0; (rule = ruleNodes[i]); i++) {\n\n        if (i + 1 === ruleNodes.length) {\n            context.lastRule = true;\n        }\n\n        var currentLastRule = context.lastRule;\n        if (rule.isRulesetLike(rule)) {\n            context.lastRule = false;\n        }\n\n        if (rule.genCSS) {\n            rule.genCSS(context, output);\n        } else if (rule.value) {\n            output.add(rule.value.toString());\n        }\n\n        context.lastRule = currentLastRule;\n\n        if (!context.lastRule && rule.isVisible()) {\n            output.add(context.compress ? '' : ('\\n' + tabRuleStr));\n        } else {\n            context.lastRule = false;\n        }\n    }\n\n    if (!this.root) {\n        output.add((context.compress ? '}' : '\\n' + tabSetStr + '}'));\n        context.tabLevel--;\n    }\n\n    if (!output.isEmpty() && !context.compress && this.firstRoot) {\n        output.add('\\n');\n    }\n};\n\nRuleset.prototype.joinSelectors = function (paths, context, selectors) {\n    for (var s = 0; s < selectors.length; s++) {\n        this.joinSelector(paths, context, selectors[s]);\n    }\n};\n\nRuleset.prototype.joinSelector = function (paths, context, selector) {\n\n    function createParenthesis(elementsToPak, originalElement) {\n        var replacementParen, j;\n        if (elementsToPak.length === 0) {\n            replacementParen = new Paren(elementsToPak[0]);\n        } else {\n            var insideParent = new Array(elementsToPak.length);\n            for (j = 0; j < elementsToPak.length; j++) {\n                insideParent[j] = new Element(null, elementsToPak[j], originalElement._index, originalElement._fileInfo);\n            }\n            replacementParen = new Paren(new Selector(insideParent));\n        }\n        return replacementParen;\n    }\n\n    function createSelector(containedElement, originalElement) {\n        var element, selector;\n        element = new Element(null, containedElement, originalElement._index, originalElement._fileInfo);\n        selector = new Selector([element]);\n        return selector;\n    }\n\n    // joins selector path from `beginningPath` with selector path in `addPath`\n    // `replacedElement` contains element that is being replaced by `addPath`\n    // returns concatenated path\n    function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n        var newSelectorPath, lastSelector, newJoinedSelector;\n        // our new selector path\n        newSelectorPath = [];\n\n        // construct the joined selector - if & is the first thing this will be empty,\n        // if not newJoinedSelector will be the last set of elements in the selector\n        if (beginningPath.length > 0) {\n            newSelectorPath = utils.copyArray(beginningPath);\n            lastSelector = newSelectorPath.pop();\n            newJoinedSelector = originalSelector.createDerived(utils.copyArray(lastSelector.elements));\n        }\n        else {\n            newJoinedSelector = originalSelector.createDerived([]);\n        }\n\n        if (addPath.length > 0) {\n            // /deep/ is a combinator that is valid without anything in front of it\n            // so if the & does not have a combinator that is \"\" or \" \" then\n            // and there is a combinator on the parent, then grab that.\n            // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n            var combinator = replacedElement.combinator, parentEl = addPath[0].elements[0];\n            if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                combinator = parentEl.combinator;\n            }\n            // join the elements so far with the first part of the parent\n            newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement._index, replacedElement._fileInfo));\n            newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n        }\n\n        // now add the joined selector - but only if it is not empty\n        if (newJoinedSelector.elements.length !== 0) {\n            newSelectorPath.push(newJoinedSelector);\n        }\n\n        // put together the parent selectors after the join (e.g. the rest of the parent)\n        if (addPath.length > 1) {\n            var restOfPath = addPath.slice(1);\n            restOfPath = restOfPath.map(function (selector) {\n                return selector.createDerived(selector.elements, []);\n            });\n            newSelectorPath = newSelectorPath.concat(restOfPath);\n        }\n        return newSelectorPath;\n    }\n\n    // joins selector path from `beginningPath` with every selector path in `addPaths` array\n    // `replacedElement` contains element that is being replaced by `addPath`\n    // returns array with all concatenated paths\n    function addAllReplacementsIntoPath( beginningPath, addPaths, replacedElement, originalSelector, result) {\n        var j;\n        for (j = 0; j < beginningPath.length; j++) {\n            var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n            result.push(newSelectorPath);\n        }\n        return result;\n    }\n\n    function mergeElementsOnToSelectors(elements, selectors) {\n        var i, sel;\n\n        if (elements.length === 0) {\n            return ;\n        }\n        if (selectors.length === 0) {\n            selectors.push([ new Selector(elements) ]);\n            return;\n        }\n\n        for (i = 0; (sel = selectors[i]); i++) {\n            // if the previous thing in sel is a parent this needs to join on to it\n            if (sel.length > 0) {\n                sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n            }\n            else {\n                sel.push(new Selector(elements));\n            }\n        }\n    }\n\n    // replace all parent selectors inside `inSelector` by content of `context` array\n    // resulting selectors are returned inside `paths` array\n    // returns true if `inSelector` contained at least one parent selector\n    function replaceParentSelector(paths, context, inSelector) {\n        // The paths are [[Selector]]\n        // The first list is a list of comma separated selectors\n        // The inner list is a list of inheritance separated selectors\n        // e.g.\n        // .a, .b {\n        //   .c {\n        //   }\n        // }\n        // == [[.a] [.c]] [[.b] [.c]]\n        //\n        var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\n        function findNestedSelector(element) {\n            var maybeSelector;\n            if (!(element.value instanceof Paren)) {\n                return null;\n            }\n\n            maybeSelector = element.value.value;\n            if (!(maybeSelector instanceof Selector)) {\n                return null;\n            }\n\n            return maybeSelector;\n        }\n\n        // the elements from the current selector so far\n        currentElements = [];\n        // the current list of new selectors to add to the path.\n        // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n        // by the parents\n        newSelectors = [\n            []\n        ];\n\n        for (i = 0; (el = inSelector.elements[i]); i++) {\n            // non parent reference elements just get added\n            if (el.value !== \"&\") {\n                var nestedSelector = findNestedSelector(el);\n                if (nestedSelector != null) {\n                    // merge the current list of non parent selector elements\n                    // on to the current list of selectors to add\n                    mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                    var nestedPaths = [], replaced, replacedNewSelectors = [];\n                    replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                    hadParentSelector = hadParentSelector || replaced;\n                    // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                    for (k = 0; k < nestedPaths.length; k++) {\n                        var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                        addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                    }\n                    newSelectors = replacedNewSelectors;\n                    currentElements = [];\n\n                } else {\n                    currentElements.push(el);\n                }\n\n            } else {\n                hadParentSelector = true;\n                // the new list of selectors to add\n                selectorsMultiplied = [];\n\n                // merge the current list of non parent selector elements\n                // on to the current list of selectors to add\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                // loop through our current selectors\n                for (j = 0; j < newSelectors.length; j++) {\n                    sel = newSelectors[j];\n                    // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                    // whether there are parents or not\n                    if (context.length === 0) {\n                        // the combinator used on el should now be applied to the next element instead so that\n                        // it is not lost\n                        if (sel.length > 0) {\n                            sel[0].elements.push(new Element(el.combinator, '', el._index, el._fileInfo));\n                        }\n                        selectorsMultiplied.push(sel);\n                    }\n                    else {\n                        // and the parent selectors\n                        for (k = 0; k < context.length; k++) {\n                            // We need to put the current selectors\n                            // then join the last selector's elements on to the parents selectors\n                            var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                            // add that to our new set of selectors\n                            selectorsMultiplied.push(newSelectorPath);\n                        }\n                    }\n                }\n\n                // our new selectors has been multiplied, so reset the state\n                newSelectors = selectorsMultiplied;\n                currentElements = [];\n            }\n        }\n\n        // if we have any elements left over (e.g. .a& .b == .b)\n        // add them on to all the current selectors\n        mergeElementsOnToSelectors(currentElements, newSelectors);\n\n        for (i = 0; i < newSelectors.length; i++) {\n            length = newSelectors[i].length;\n            if (length > 0) {\n                paths.push(newSelectors[i]);\n                lastSelector = newSelectors[i][length - 1];\n                newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n            }\n        }\n\n        return hadParentSelector;\n    }\n\n    function deriveSelector(visibilityInfo, deriveFrom) {\n        var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n        newSelector.copyVisibilityInfo(visibilityInfo);\n        return newSelector;\n    }\n\n    // joinSelector code follows\n    var i, newPaths, hadParentSelector;\n\n    newPaths = [];\n    hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n    if (!hadParentSelector) {\n        if (context.length > 0) {\n            newPaths = [];\n            for (i = 0; i < context.length; i++) {\n\n                var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n\n                concatenated.push(selector);\n                newPaths.push(concatenated);\n            }\n        }\n        else {\n            newPaths = [[selector]];\n        }\n    }\n\n    for (i = 0; i < newPaths.length; i++) {\n        paths.push(newPaths[i]);\n    }\n\n};\nmodule.exports = Ruleset;\n\n},{\"../contexts\":12,\"../functions/default\":24,\"../functions/function-registry\":26,\"../utils\":86,\"./anonymous\":48,\"./comment\":55,\"./debug-info\":57,\"./declaration\":58,\"./element\":61,\"./keyword\":68,\"./node\":73,\"./paren\":75,\"./selector\":79}],79:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Element = require(\"./element\"),\n    LessError = require(\"../less-error\");\n\nvar Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n    this.extendList = extendList;\n    this.condition = condition;\n    this.evaldCondition = !condition;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.elements = this.getElements(elements);\n    this.mixinElements_ = undefined;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.elements, this);\n};\nSelector.prototype = new Node();\nSelector.prototype.type = \"Selector\";\nSelector.prototype.accept = function (visitor) {\n    if (this.elements) {\n        this.elements = visitor.visitArray(this.elements);\n    }\n    if (this.extendList) {\n        this.extendList = visitor.visitArray(this.extendList);\n    }\n    if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n    }\n};\nSelector.prototype.createDerived = function(elements, extendList, evaldCondition) {\n    elements = this.getElements(elements);\n    var newSelector = new Selector(elements, extendList || this.extendList,\n        null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n    newSelector.mediaEmpty = this.mediaEmpty;\n    return newSelector;\n};\nSelector.prototype.getElements = function(els) {\n    if (typeof els === \"string\") {\n        this.parse.parseNode(\n            els, \n            [\"selector\"],\n            this._index, \n            this._fileInfo, \n            function(err, result) {\n                if (err) {\n                    throw new LessError({\n                        index: err.index,\n                        message: err.message\n                    }, this.parse.imports, this._fileInfo.filename);\n                }\n                els = result[0].elements;\n            });\n    }\n    return els;\n};\nSelector.prototype.createEmptySelectors = function() {\n    var el = new Element('', '&', this._index, this._fileInfo),\n        sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n    sels[0].mediaEmpty = true;\n    return sels;\n};\nSelector.prototype.match = function (other) {\n    var elements = this.elements,\n        len = elements.length,\n        olen, i;\n\n    other = other.mixinElements();\n    olen = other.length;\n    if (olen === 0 || len < olen) {\n        return 0;\n    } else {\n        for (i = 0; i < olen; i++) {\n            if (elements[i].value !== other[i]) {\n                return 0;\n            }\n        }\n    }\n\n    return olen; // return number of matched elements\n};\nSelector.prototype.mixinElements = function() {\n    if (this.mixinElements_) {\n        return this.mixinElements_;\n    }\n\n    var elements = this.elements.map( function(v) {\n        return v.combinator.value + (v.value.value || v.value);\n    }).join(\"\").match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n    if (elements) {\n        if (elements[0] === \"&\") {\n            elements.shift();\n        }\n    } else {\n        elements = [];\n    }\n\n    return (this.mixinElements_ = elements);\n};\nSelector.prototype.isJustParentSelector = function() {\n    return !this.mediaEmpty &&\n        this.elements.length === 1 &&\n        this.elements[0].value === '&' &&\n        (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n};\nSelector.prototype.eval = function (context) {\n    var evaldCondition = this.condition && this.condition.eval(context),\n        elements = this.elements, extendList = this.extendList;\n\n    elements = elements && elements.map(function (e) { return e.eval(context); });\n    extendList = extendList && extendList.map(function(extend) { return extend.eval(context); });\n\n    return this.createDerived(elements, extendList, evaldCondition);\n};\nSelector.prototype.genCSS = function (context, output) {\n    var i, element;\n    if ((!context || !context.firstSelector) && this.elements[0].combinator.value === \"\") {\n        output.add(' ', this.fileInfo(), this.getIndex());\n    }\n    for (i = 0; i < this.elements.length; i++) {\n        element = this.elements[i];\n        element.genCSS(context, output);\n    }\n};\nSelector.prototype.getIsOutput = function() {\n    return this.evaldCondition;\n};\nmodule.exports = Selector;\n\n},{\"../less-error\":36,\"./element\":61,\"./node\":73}],80:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar UnicodeDescriptor = function (value) {\n    this.value = value;\n};\nUnicodeDescriptor.prototype = new Node();\nUnicodeDescriptor.prototype.type = \"UnicodeDescriptor\";\n\nmodule.exports = UnicodeDescriptor;\n\n},{\"./node\":73}],81:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    unitConversions = require(\"../data/unit-conversions\"),\n    utils = require(\"../utils\");\n\nvar Unit = function (numerator, denominator, backupUnit) {\n    this.numerator = numerator ? utils.copyArray(numerator).sort() : [];\n    this.denominator = denominator ? utils.copyArray(denominator).sort() : [];\n    if (backupUnit) {\n        this.backupUnit = backupUnit;\n    } else if (numerator && numerator.length) {\n        this.backupUnit = numerator[0];\n    }\n};\n\nUnit.prototype = new Node();\nUnit.prototype.type = \"Unit\";\nUnit.prototype.clone = function () {\n    return new Unit(utils.copyArray(this.numerator), utils.copyArray(this.denominator), this.backupUnit);\n};\nUnit.prototype.genCSS = function (context, output) {\n    // Dimension checks the unit is singular and throws an error if in strict math mode.\n    var strictUnits = context && context.strictUnits;\n    if (this.numerator.length === 1) {\n        output.add(this.numerator[0]); // the ideal situation\n    } else if (!strictUnits && this.backupUnit) {\n        output.add(this.backupUnit);\n    } else if (!strictUnits && this.denominator.length) {\n        output.add(this.denominator[0]);\n    }\n};\nUnit.prototype.toString = function () {\n    var i, returnStr = this.numerator.join(\"*\");\n    for (i = 0; i < this.denominator.length; i++) {\n        returnStr += \"/\" + this.denominator[i];\n    }\n    return returnStr;\n};\nUnit.prototype.compare = function (other) {\n    return this.is(other.toString()) ? 0 : undefined;\n};\nUnit.prototype.is = function (unitString) {\n    return this.toString().toUpperCase() === unitString.toUpperCase();\n};\nUnit.prototype.isLength = function () {\n    return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n};\nUnit.prototype.isEmpty = function () {\n    return this.numerator.length === 0 && this.denominator.length === 0;\n};\nUnit.prototype.isSingular = function() {\n    return this.numerator.length <= 1 && this.denominator.length === 0;\n};\nUnit.prototype.map = function(callback) {\n    var i;\n\n    for (i = 0; i < this.numerator.length; i++) {\n        this.numerator[i] = callback(this.numerator[i], false);\n    }\n\n    for (i = 0; i < this.denominator.length; i++) {\n        this.denominator[i] = callback(this.denominator[i], true);\n    }\n};\nUnit.prototype.usedUnits = function() {\n    var group, result = {}, mapUnit, groupName;\n\n    mapUnit = function (atomicUnit) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n            result[groupName] = atomicUnit;\n        }\n\n        return atomicUnit;\n    };\n\n    for (groupName in unitConversions) {\n        if (unitConversions.hasOwnProperty(groupName)) {\n            group = unitConversions[groupName];\n\n            this.map(mapUnit);\n        }\n    }\n\n    return result;\n};\nUnit.prototype.cancel = function () {\n    var counter = {}, atomicUnit, i;\n\n    for (i = 0; i < this.numerator.length; i++) {\n        atomicUnit = this.numerator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n    }\n\n    for (i = 0; i < this.denominator.length; i++) {\n        atomicUnit = this.denominator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n    }\n\n    this.numerator = [];\n    this.denominator = [];\n\n    for (atomicUnit in counter) {\n        if (counter.hasOwnProperty(atomicUnit)) {\n            var count = counter[atomicUnit];\n\n            if (count > 0) {\n                for (i = 0; i < count; i++) {\n                    this.numerator.push(atomicUnit);\n                }\n            } else if (count < 0) {\n                for (i = 0; i < -count; i++) {\n                    this.denominator.push(atomicUnit);\n                }\n            }\n        }\n    }\n\n    this.numerator.sort();\n    this.denominator.sort();\n};\nmodule.exports = Unit;\n\n},{\"../data/unit-conversions\":15,\"../utils\":86,\"./node\":73}],82:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar URL = function (val, index, currentFileInfo, isEvald) {\n    this.value = val;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.isEvald = isEvald;\n};\nURL.prototype = new Node();\nURL.prototype.type = \"Url\";\nURL.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nURL.prototype.genCSS = function (context, output) {\n    output.add(\"url(\");\n    this.value.genCSS(context, output);\n    output.add(\")\");\n};\nURL.prototype.eval = function (context) {\n    var val = this.value.eval(context),\n        rootpath;\n\n    if (!this.isEvald) {\n        // Add the base path if the URL is relative\n        rootpath = this.fileInfo() && this.fileInfo().rootpath;\n        if (rootpath &&\n            typeof val.value === \"string\" &&\n            context.isPathRelative(val.value)) {\n\n            if (!val.quote) {\n                rootpath = rootpath.replace(/[\\(\\)'\"\\s]/g, function(match) { return \"\\\\\" + match; });\n            }\n            val.value = rootpath + val.value;\n        }\n\n        val.value = context.normalizePath(val.value);\n\n        // Add url args if enabled\n        if (context.urlArgs) {\n            if (!val.value.match(/^\\s*data:/)) {\n                var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                var urlArgs = delimiter + context.urlArgs;\n                if (val.value.indexOf('#') !== -1) {\n                    val.value = val.value.replace('#', urlArgs + '#');\n                } else {\n                    val.value += urlArgs;\n                }\n            }\n        }\n    }\n\n    return new URL(val, this.getIndex(), this.fileInfo(), true);\n};\nmodule.exports = URL;\n\n},{\"./node\":73}],83:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Value = function (value) {\n    if (!value) {\n        throw new Error(\"Value requires an array argument\");\n    }\n    if (!Array.isArray(value)) {\n        this.value = [ value ];\n    }\n    else {\n        this.value = value;\n    }\n};\nValue.prototype = new Node();\nValue.prototype.type = \"Value\";\nValue.prototype.accept = function (visitor) {\n    if (this.value) {\n        this.value = visitor.visitArray(this.value);\n    }\n};\nValue.prototype.eval = function (context) {\n    if (this.value.length === 1) {\n        return this.value[0].eval(context);\n    } else {\n        return new Value(this.value.map(function (v) {\n            return v.eval(context);\n        }));\n    }\n};\nValue.prototype.genCSS = function (context, output) {\n    var i;\n    for (i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n        if (i + 1 < this.value.length) {\n            output.add((context && context.compress) ? ',' : ', ');\n        }\n    }\n};\nmodule.exports = Value;\n\n},{\"./node\":73}],84:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\");\n\nvar VariableCall = function (variable) {\n    this.variable = variable;\n    this.allowRoot = true;\n};\nVariableCall.prototype = new Node();\nVariableCall.prototype.type = \"VariableCall\";\nVariableCall.prototype.eval = function (context) {\n    var detachedRuleset = new Variable(this.variable).eval(context);\n    return detachedRuleset.callEval(context);\n};\nmodule.exports = VariableCall;\n\n},{\"./node\":73,\"./variable\":85}],85:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Variable = function (name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nVariable.prototype = new Node();\nVariable.prototype.type = \"Variable\";\nVariable.prototype.eval = function (context) {\n    var variable, name = this.name;\n\n    if (name.indexOf('@@') === 0) {\n        name = '@' + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n    }\n\n    if (this.evaluating) {\n        throw { type: 'Name',\n            message: \"Recursive variable definition for \" + name,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    this.evaluating = true;\n\n    variable = this.find(context.frames, function (frame) {\n        var v = frame.variable(name);\n        if (v) {\n            if (v.important) {\n                var importantScope = context.importantScope[context.importantScope.length - 1];\n                importantScope.important = v.important;\n            }\n            return v.value.eval(context);\n        }\n    });\n    if (variable) {\n        this.evaluating = false;\n        return variable;\n    } else {\n        throw { type: 'Name',\n            message: \"variable \" + name + \" is undefined\",\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n};\nVariable.prototype.find = function (obj, fun) {\n    for (var i = 0, r; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n        if (r) { return r; }\n    }\n    return null;\n};\nmodule.exports = Variable;\n\n},{\"./node\":73}],86:[function(require,module,exports){\n/* jshint proto: true */\nmodule.exports = {\n    getLocation: function(index, inputStream) {\n        var n = index + 1,\n            line = null,\n            column = -1;\n\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n            column++;\n        }\n\n        if (typeof index === 'number') {\n            line = (inputStream.slice(0, index).match(/\\n/g) || \"\").length;\n        }\n\n        return {\n            line: line,\n            column: column\n        };\n    },\n    copyArray: function(arr) {\n        var i, length = arr.length,\n            copy = new Array(length);\n        \n        for (i = 0; i < length; i++) {\n            copy[i] = arr[i];\n        }\n        return copy;\n    },\n    clone: function (obj) {\n        var cloned = {};\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    },\n    defaults: function(obj1, obj2) {\n        if (!obj2._defaults || obj2._defaults !== obj1) {\n            for (var prop in obj1) {\n                if (obj1.hasOwnProperty(prop)) {\n                    if (!obj2.hasOwnProperty(prop)) {\n                        obj2[prop] = obj1[prop];\n                    }\n                    else if (Array.isArray(obj1[prop])\n                        && Array.isArray(obj2[prop])) {\n\n                        obj1[prop].forEach(function(p) {\n                            if (obj2[prop].indexOf(p) === -1) {\n                                obj2[prop].push(p);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n        obj2._defaults = obj1;\n        return obj2;\n    },\n    merge: function(obj1, obj2) {\n        for (var prop in obj2) {\n            if (obj2.hasOwnProperty(prop)) {\n                obj1[prop] = obj2[prop];\n            }\n        }\n        return obj1;\n    }\n};\n\n},{}],87:[function(require,module,exports){\nvar tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\"),\n    logger = require(\"../logger\"),\n    utils = require(\"../utils\");\n\n/* jshint loopfunc:true */\n\nvar ExtendFinderVisitor = function() {\n    this._visitor = new Visitor(this);\n    this.contexts = [];\n    this.allExtendsStack = [[]];\n};\n\nExtendFinderVisitor.prototype = {\n    run: function (root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n\n        var i, j, extend, allSelectorsExtendList = [], extendList;\n\n        // get &:extend(.a); rules which apply to all selectors in this ruleset\n        var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n        for (i = 0; i < ruleCnt; i++) {\n            if (rulesetNode.rules[i] instanceof tree.Extend) {\n                allSelectorsExtendList.push(rules[i]);\n                rulesetNode.extendOnEveryPath = true;\n            }\n        }\n\n        // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n        var paths = rulesetNode.paths;\n        for (i = 0; i < paths.length; i++) {\n            var selectorPath = paths[i],\n                selector = selectorPath[selectorPath.length - 1],\n                selExtendList = selector.extendList;\n\n            extendList = selExtendList ? utils.copyArray(selExtendList).concat(allSelectorsExtendList)\n                                       : allSelectorsExtendList;\n\n            if (extendList) {\n                extendList = extendList.map(function(allSelectorsExtend) {\n                    return allSelectorsExtend.clone();\n                });\n            }\n\n            for (j = 0; j < extendList.length; j++) {\n                this.foundExtends = true;\n                extend = extendList[j];\n                extend.findSelfSelectors(selectorPath);\n                extend.ruleset = rulesetNode;\n                if (j === 0) { extend.firstExtendOnThisSelectorPath = true; }\n                this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n            }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        if (!rulesetNode.root) {\n            this.contexts.length = this.contexts.length - 1;\n        }\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n};\n\nvar ProcessExtendsVisitor = function() {\n    this._visitor = new Visitor(this);\n};\n\nProcessExtendsVisitor.prototype = {\n    run: function(root) {\n        var extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n        if (!extendFinder.foundExtends) { return root; }\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n        var newRoot = this._visitor.visit(root);\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n    },\n    checkExtendsForNonMatched: function(extendList) {\n        var indices = this.extendIndices;\n        extendList.filter(function(extend) {\n            return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function(extend) {\n            var selector = \"_unknown_\";\n            try {\n                selector = extend.selector.toCSS({});\n            }\n            catch (_) {}\n\n            if (!indices[extend.index + ' ' + selector]) {\n                indices[extend.index + ' ' + selector] = true;\n                logger.warn(\"extend '\" + selector + \"' has no matches\");\n            }\n        });\n    },\n    doExtendChaining: function (extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n\n        var extendIndex, targetExtendIndex, matches, extendsToAdd = [], newSelector, extendVisitor = this, selectorPath,\n            extend, targetExtend, newExtend;\n\n        iterationCount = iterationCount || 0;\n\n        // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n            for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n\n                extend = extendsList[extendIndex];\n                targetExtend = extendsListTarget[targetExtendIndex];\n\n                // look for circular references\n                if ( extend.parent_ids.indexOf( targetExtend.object_id ) >= 0 ) { continue; }\n\n                // find a match in the target extends self selector (the bit before :extend)\n                selectorPath = [targetExtend.selfSelectors[0]];\n                matches = extendVisitor.findMatch(extend, selectorPath);\n\n                if (matches.length) {\n                    extend.hasFoundMatches = true;\n\n                    // we found a match, so for each self selector..\n                    extend.selfSelectors.forEach(function(selfSelector) {\n                        var info = targetExtend.visibilityInfo();\n\n                        // process the extend as usual\n                        newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n\n                        // but now we create a new extend from it\n                        newExtend = new(tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                        newExtend.selfSelectors = newSelector;\n\n                        // add the extend onto the list of extends for that selector\n                        newSelector[newSelector.length - 1].extendList = [newExtend];\n\n                        // record that we need to add it.\n                        extendsToAdd.push(newExtend);\n                        newExtend.ruleset = targetExtend.ruleset;\n\n                        //remember its parents for circular references\n                        newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n\n                        // only process the selector once.. if we have :extend(.a,.b) then multiple\n                        // extends will look at the same selector path, so when extending\n                        // we know that any others will be duplicates in terms of what is added to the css\n                        if (targetExtend.firstExtendOnThisSelectorPath) {\n                            newExtend.firstExtendOnThisSelectorPath = true;\n                            targetExtend.ruleset.paths.push(newSelector);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (extendsToAdd.length) {\n            // try to detect circular references to stop a stack overflow.\n            // may no longer be needed.\n            this.extendChainCount++;\n            if (iterationCount > 100) {\n                var selectorOne = \"{unable to calculate}\";\n                var selectorTwo = \"{unable to calculate}\";\n                try {\n                    selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                    selectorTwo = extendsToAdd[0].selector.toCSS();\n                }\n                catch (e) {}\n                throw { message: \"extend circular reference detected. One of the circular extends is currently:\" +\n                    selectorOne + \":extend(\" + selectorTwo + \")\"};\n            }\n\n            // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n            // d extending e...\n            return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n            return extendsToAdd;\n        }\n    },\n    visitDeclaration: function (ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitSelector: function (selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n        var matches, pathIndex, extendIndex, allExtends = this.allExtendsStack[this.allExtendsStack.length - 1],\n            selectorsToAdd = [], extendVisitor = this, selectorPath;\n\n        // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n            for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                selectorPath = rulesetNode.paths[pathIndex];\n\n                // extending extends happens initially, before the main pass\n                if (rulesetNode.extendOnEveryPath) { continue; }\n                var extendList = selectorPath[selectorPath.length - 1].extendList;\n                if (extendList && extendList.length) { continue; }\n\n                matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n                if (matches.length) {\n                    allExtends[extendIndex].hasFoundMatches = true;\n\n                    allExtends[extendIndex].selfSelectors.forEach(function(selfSelector) {\n                        var extendedSelectors;\n                        extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                        selectorsToAdd.push(extendedSelectors);\n                    });\n                }\n            }\n        }\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    },\n    findMatch: function (extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        var haystackSelectorIndex, hackstackSelector, hackstackElementIndex, haystackElement,\n            targetCombinator, i,\n            extendVisitor = this,\n            needleElements = extend.selector.elements,\n            potentialMatches = [], potentialMatch, matches = [];\n\n        // loop through the haystack elements\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n            hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n            for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n\n                haystackElement = hackstackSelector.elements[hackstackElementIndex];\n\n                // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                    potentialMatches.push({pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                        initialCombinator: haystackElement.combinator});\n                }\n\n                for (i = 0; i < potentialMatches.length; i++) {\n                    potentialMatch = potentialMatches[i];\n\n                    // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                    // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                    // work out what the resulting combinator will be\n                    targetCombinator = haystackElement.combinator.value;\n                    if (targetCombinator === '' && hackstackElementIndex === 0) {\n                        targetCombinator = ' ';\n                    }\n\n                    // if we don't match, null our match to indicate failure\n                    if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                        (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                        potentialMatch = null;\n                    } else {\n                        potentialMatch.matched++;\n                    }\n\n                    // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                    if (potentialMatch) {\n                        potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                        if (potentialMatch.finished &&\n                            (!extend.allowAfter &&\n                                (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                            potentialMatch = null;\n                        }\n                    }\n                    // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                    if (potentialMatch) {\n                        if (potentialMatch.finished) {\n                            potentialMatch.length = needleElements.length;\n                            potentialMatch.endPathIndex = haystackSelectorIndex;\n                            potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                            potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                            matches.push(potentialMatch);\n                        }\n                    } else {\n                        potentialMatches.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return matches;\n    },\n    isElementValuesEqual: function(elementValue1, elementValue2) {\n        if (typeof elementValue1 === \"string\" || typeof elementValue2 === \"string\") {\n            return elementValue1 === elementValue2;\n        }\n        if (elementValue1 instanceof tree.Attribute) {\n            if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                return false;\n            }\n            if (!elementValue1.value || !elementValue2.value) {\n                if (elementValue1.value || elementValue2.value) {\n                    return false;\n                }\n                return true;\n            }\n            elementValue1 = elementValue1.value.value || elementValue1.value;\n            elementValue2 = elementValue2.value.value || elementValue2.value;\n            return elementValue1 === elementValue2;\n        }\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n        if (elementValue1 instanceof tree.Selector) {\n            if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                return false;\n            }\n            for (var i = 0; i  < elementValue1.elements.length; i++) {\n                if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                    if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                        return false;\n                    }\n                }\n                if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    },\n    extendSelector:function (matches, selectorPath, replacementSelector, isVisible) {\n\n        // for a set of matches, replace each match with the replacement selector\n\n        var currentSelectorPathIndex = 0,\n            currentSelectorPathElementIndex = 0,\n            path = [],\n            matchIndex,\n            selector,\n            firstElement,\n            match,\n            newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n            match = matches[matchIndex];\n            selector = selectorPath[match.pathIndex];\n            firstElement = new tree.Element(\n                match.initialCombinator,\n                replacementSelector.elements[0].value,\n                replacementSelector.elements[0].getIndex(),\n                replacementSelector.elements[0].fileInfo()\n            );\n\n            if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n\n            newElements = selector.elements\n                .slice(currentSelectorPathElementIndex, match.index)\n                .concat([firstElement])\n                .concat(replacementSelector.elements.slice(1));\n\n            if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                path[path.length - 1].elements =\n                    path[path.length - 1].elements.concat(newElements);\n            } else {\n                path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n\n                path.push(new tree.Selector(\n                    newElements\n                ));\n            }\n            currentSelectorPathIndex = match.endPathIndex;\n            currentSelectorPathElementIndex = match.endPathElementIndex;\n            if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1]\n                .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n            // we can re-use elements here, because the visibility property matters only for selectors\n            var derived = currentValue.createDerived(currentValue.elements);\n            if (isVisible) {\n                derived.ensureVisibility();\n            } else {\n                derived.ensureInvisibility();\n            }\n            return derived;\n        });\n        return path;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n};\n\nmodule.exports = ProcessExtendsVisitor;\n\n},{\"../logger\":37,\"../tree\":65,\"../utils\":86,\"./visitor\":94}],88:[function(require,module,exports){\nfunction ImportSequencer(onSequencerEmpty) {\n    this.imports = [];\n    this.variableImports = [];\n    this._onSequencerEmpty = onSequencerEmpty;\n    this._currentDepth = 0;\n}\n\nImportSequencer.prototype.addImport = function(callback) {\n    var importSequencer = this,\n        importItem = {\n            callback: callback,\n            args: null,\n            isReady: false\n        };\n    this.imports.push(importItem);\n    return function() {\n        importItem.args = Array.prototype.slice.call(arguments, 0);\n        importItem.isReady = true;\n        importSequencer.tryRun();\n    };\n};\n\nImportSequencer.prototype.addVariableImport = function(callback) {\n    this.variableImports.push(callback);\n};\n\nImportSequencer.prototype.tryRun = function() {\n    this._currentDepth++;\n    try {\n        while (true) {\n            while (this.imports.length > 0) {\n                var importItem = this.imports[0];\n                if (!importItem.isReady) {\n                    return;\n                }\n                this.imports = this.imports.slice(1);\n                importItem.callback.apply(null, importItem.args);\n            }\n            if (this.variableImports.length === 0) {\n                break;\n            }\n            var variableImport = this.variableImports[0];\n            this.variableImports = this.variableImports.slice(1);\n            variableImport();\n        }\n    } finally {\n        this._currentDepth--;\n    }\n    if (this._currentDepth === 0 && this._onSequencerEmpty) {\n        this._onSequencerEmpty();\n    }\n};\n\nmodule.exports = ImportSequencer;\n\n},{}],89:[function(require,module,exports){\nvar contexts = require(\"../contexts\"),\n    Visitor = require(\"./visitor\"),\n    ImportSequencer = require(\"./import-sequencer\"),\n    utils = require(\"../utils\");\n\nvar ImportVisitor = function(importer, finish) {\n\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\n\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            // process the contents\n            this._visitor.visit(root);\n        }\n        catch (e) {\n            this.error = e;\n        }\n\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function() {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        var inlineCSS = importNode.options.inline;\n\n        if (!importNode.css || inlineCSS) {\n\n            var context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n            var importParent = context.frames[0];\n\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function(importNode, context, importParent) {\n        var evaldImportNode,\n            inlineCSS = importNode.options.inline;\n\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch (e) {\n            if (!e.filename) { e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename; }\n            // attempt to eval properly and treat as css\n            importNode.css = true;\n            // if that fails, this error will be thrown\n            importNode.error = e;\n        }\n\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n\n            // try appending if we haven't determined if it is css or not\n            var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n            for (var i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n\n            var onImported = this.onImported.bind(this, evaldImportNode, context),\n                sequencedOnImported = this._sequencer.addImport(onImported);\n\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(),\n                evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename;\n            }\n            this.error = e;\n        }\n\n        var importVisitor = this,\n            inlineCSS = importNode.options.inline,\n            isPlugin = importNode.options.isPlugin,\n            isOptional = importNode.options.optional,\n            duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = function() {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n\n                var oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n\n        importVisitor.importCount--;\n\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.unshift(declNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitDeclarationOut: function(declNode) {\n        if (declNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.shift();\n        }\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nmodule.exports = ImportVisitor;\n\n},{\"../contexts\":12,\"../utils\":86,\"./import-sequencer\":88,\"./visitor\":94}],90:[function(require,module,exports){\nvar visitors = {\n    Visitor: require(\"./visitor\"),\n    ImportVisitor: require('./import-visitor'),\n    MarkVisibleSelectorsVisitor: require(\"./set-tree-visibility-visitor\"),\n    ExtendVisitor: require('./extend-visitor'),\n    JoinSelectorVisitor: require('./join-selector-visitor'),\n    ToCSSVisitor: require('./to-css-visitor')\n};\n\nmodule.exports = visitors;\n\n},{\"./extend-visitor\":87,\"./import-visitor\":89,\"./join-selector-visitor\":91,\"./set-tree-visibility-visitor\":92,\"./to-css-visitor\":93,\"./visitor\":94}],91:[function(require,module,exports){\nvar Visitor = require(\"./visitor\");\n\nvar JoinSelectorVisitor = function() {\n    this.contexts = [[]];\n    this._visitor = new Visitor(this);\n};\n\nJoinSelectorVisitor.prototype = {\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1],\n            paths = [], selectors;\n\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n            selectors = rulesetNode.selectors;\n            if (selectors) {\n                selectors = selectors.filter(function(selector) { return selector.getIsOutput(); });\n                rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                if (selectors) { rulesetNode.joinSelectors(paths, context, selectors); }\n            }\n            if (!selectors) { rulesetNode.rules = null; }\n            rulesetNode.paths = paths;\n        }\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n        }\n    }\n};\n\nmodule.exports = JoinSelectorVisitor;\n\n},{\"./visitor\":94}],92:[function(require,module,exports){\nvar SetTreeVisibilityVisitor = function(visible) {\n    this.visible = visible;\n};\nSetTreeVisibilityVisitor.prototype.run = function(root) {\n    this.visit(root);\n};\nSetTreeVisibilityVisitor.prototype.visitArray = function(nodes) {\n    if (!nodes) {\n        return nodes;\n    }\n\n    var cnt = nodes.length, i;\n    for (i = 0; i < cnt; i++) {\n        this.visit(nodes[i]);\n    }\n    return nodes;\n};\nSetTreeVisibilityVisitor.prototype.visit = function(node) {\n    if (!node) {\n        return node;\n    }\n    if (node.constructor === Array) {\n        return this.visitArray(node);\n    }\n\n    if (!node.blocksVisibility || node.blocksVisibility()) {\n        return node;\n    }\n    if (this.visible) {\n        node.ensureVisibility();\n    } else {\n        node.ensureInvisibility();\n    }\n\n    node.accept(this);\n    return node;\n};\nmodule.exports = SetTreeVisibilityVisitor;\n},{}],93:[function(require,module,exports){\nvar tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\");\n\nvar CSSVisitorUtils = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n};\n\nCSSVisitorUtils.prototype = {\n    containsSilentNonBlockedChild: function(bodyRules) {\n        var rule;\n        if (!bodyRules) {\n            return false;\n        }\n        for (var r = 0; r < bodyRules.length; r++) {\n            rule = bodyRules[r];\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                // the atrule contains something that was referenced (likely by extend)\n                // therefore it needs to be shown in output too\n                return true;\n            }\n        }\n        return false;\n    },\n\n    keepOnlyVisibleChilds: function(owner) {\n        if (owner && owner.rules) {\n            owner.rules = owner.rules.filter(function(thing) {\n                return thing.isVisible();\n            });\n        }\n    },\n\n    isEmpty: function(owner) {\n        return (owner && owner.rules) \n            ? (owner.rules.length === 0) : true;\n    },\n\n    hasVisibleSelector: function(rulesetNode) {\n        return (rulesetNode && rulesetNode.paths)\n            ? (rulesetNode.paths.length > 0) : false;\n    },\n\n    resolveVisibility: function (node, originalRules) {\n        if (!node.blocksVisibility()) {\n            if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                return ;\n            }\n\n            return node;\n        }\n\n        var compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n            return ;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n\n        return node;\n    },\n\n    isVisibleRuleset: function(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n            return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n            return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n            return false;\n        }\n\n        return true;\n    }\n\n};\n\nvar ToCSSVisitor = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n};\n\nToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.blocksVisibility() || declNode.variable) {\n            return;\n        }\n        return declNode;\n    },\n\n    visitMixinDefinition: function (mixinNode, visitArgs) {\n        // mixin definitions do not get eval'd - this means they keep state\n        // so we have to clear that state here so it isn't used if toCSS is called twice\n        mixinNode.frames = [];\n    },\n\n    visitExtend: function (extendNode, visitArgs) {\n    },\n\n    visitComment: function (commentNode, visitArgs) {\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n            return;\n        }\n        return commentNode;\n    },\n\n    visitMedia: function(mediaNode, visitArgs) {\n        var originalRules = mediaNode.rules[0].rules;\n        mediaNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n\n    visitImport: function (importNode, visitArgs) {\n        if (importNode.blocksVisibility()) {\n            return ;\n        }\n        return importNode;\n    },\n\n    visitAtRule: function(atRuleNode, visitArgs) {\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n        } else {\n            return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n        }\n    },\n\n    visitAnonymous: function(anonymousNode, visitArgs) {\n        if (!anonymousNode.blocksVisibility()) {\n            anonymousNode.accept(this._visitor);\n            return anonymousNode;\n        }\n    },\n\n    visitAtRuleWithBody: function(atRuleNode, visitArgs) {\n        // if there is only one nested ruleset and that one has no path, then it is\n        // just fake ruleset\n        function hasFakeRuleset(atRuleNode) {\n            var bodyRules = atRuleNode.rules;\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n        }\n        function getBodyRules(atRuleNode) {\n            var nodeRules = atRuleNode.rules;\n            if (hasFakeRuleset(atRuleNode)) {\n                return nodeRules[0].rules;\n            }\n\n            return nodeRules;\n        }\n        // it is still true that it is only one ruleset in array\n        // this is last such moment\n        // process childs\n        var originalRules = getBodyRules(atRuleNode);\n        atRuleNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        if (!this.utils.isEmpty(atRuleNode)) {\n            this._mergeRules(atRuleNode.rules[0].rules);\n        }\n\n        return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n\n    visitAtRuleWithoutBody: function(atRuleNode, visitArgs) {\n        if (atRuleNode.blocksVisibility()) {\n            return;\n        }\n\n        if (atRuleNode.name === \"@charset\") {\n            // Only output the debug info together with subsequent @charset definitions\n            // a comment (or @media statement) before the actual @charset atrule would\n            // be considered illegal css as it has to be on the first line\n            if (this.charset) {\n                if (atRuleNode.debugInfo) {\n                    var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, \"\") + \" */\\n\");\n                    comment.debugInfo = atRuleNode.debugInfo;\n                    return this._visitor.visit(comment);\n                }\n                return;\n            }\n            this.charset = true;\n        }\n\n        return atRuleNode;\n    },\n\n    checkValidNodes: function(rules, isRoot) {\n        if (!rules) {\n            return;\n        }\n\n        for (var i = 0; i < rules.length; i++) {\n            var ruleNode = rules[i];\n            if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                throw { message: \"Properties must be inside selector blocks. They cannot be in the root\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode instanceof tree.Call) {\n                throw { message: \"Function '\" + ruleNode.name + \"' is undefined\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode.type && !ruleNode.allowRoot) {\n                throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n        }\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        // at this point rulesets are nested into each other\n        var rule, rulesets = [];\n\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n        if (!rulesetNode.root) {\n            // remove invisible paths\n            this._compileRulesetPaths(rulesetNode);\n\n            // remove rulesets from this ruleset body and compile them separately\n            var nodeRules = rulesetNode.rules, nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n            for (var i = 0; i < nodeRuleCnt; ) {\n                rule = nodeRules[i];\n                if (rule && rule.rules) {\n                    // visit because we are moving them out from being a child\n                    rulesets.push(this._visitor.visit(rule));\n                    nodeRules.splice(i, 1);\n                    nodeRuleCnt--;\n                    continue;\n                }\n                i++;\n            }\n            // accept the visitor to remove rules and refactor itself\n            // then we can decide nogw whether we want it or not\n            // compile body\n            if (nodeRuleCnt > 0) {\n                rulesetNode.accept(this._visitor);\n            } else {\n                rulesetNode.rules = null;\n            }\n            visitArgs.visitDeeper = false;\n\n        } else { // if (! rulesetNode.root) {\n            rulesetNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n        }\n\n        if (rulesetNode.rules) {\n            this._mergeRules(rulesetNode.rules);\n            this._removeDuplicateRules(rulesetNode.rules);\n        }\n\n        // now decide whether we keep the ruleset\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\n            rulesetNode.ensureVisibility();\n            rulesets.splice(0, 0, rulesetNode);\n        }\n\n        if (rulesets.length === 1) {\n            return rulesets[0];\n        }\n        return rulesets;\n    },\n\n    _compileRulesetPaths: function(rulesetNode) {\n        if (rulesetNode.paths) {\n            rulesetNode.paths = rulesetNode.paths\n                .filter(function(p) {\n                    var i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new(tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n        }\n    },\n\n    _removeDuplicateRules: function(rules) {\n        if (!rules) { return; }\n\n        // remove duplicates\n        var ruleCache = {},\n            ruleList, rule, i;\n\n        for (i = rules.length - 1; i >= 0 ; i--) {\n            rule = rules[i];\n            if (rule instanceof tree.Declaration) {\n                if (!ruleCache[rule.name]) {\n                    ruleCache[rule.name] = rule;\n                } else {\n                    ruleList = ruleCache[rule.name];\n                    if (ruleList instanceof tree.Declaration) {\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                    }\n                    var ruleCSS = rule.toCSS(this._context);\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\n                        rules.splice(i, 1);\n                    } else {\n                        ruleList.push(ruleCSS);\n                    }\n                }\n            }\n        }\n    },\n\n    _mergeRules: function(rules) {\n        if (!rules) {\n            return; \n        }\n\n        var groups    = {},\n            groupsArr = [];\n        \n        for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i];\n            if (rule.merge) {\n                var key = rule.name;\n                groups[key] ? rules.splice(i--, 1) : \n                    groupsArr.push(groups[key] = []);\n                groups[key].push(rule);\n            }\n        }\n\n        groupsArr.forEach(function(group) {\n            if (group.length > 0) {\n                var result = group[0],\n                    space  = [],\n                    comma  = [new tree.Expression(space)];\n                group.forEach(function(rule) {\n                    if ((rule.merge === '+') && (space.length > 0)) {\n                        comma.push(new tree.Expression(space = []));\n                    }\n                    space.push(rule.value);\n                    result.important = result.important || rule.important;\n                });\n                result.value = new tree.Value(comma);\n            }\n        });\n    }\n};\n\nmodule.exports = ToCSSVisitor;\n\n},{\"../tree\":65,\"./visitor\":94}],94:[function(require,module,exports){\nvar tree = require(\"../tree\");\n\nvar _visitArgs = { visitDeeper: true },\n    _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key, child;\n    for (key in parent) { \n        /* eslint guard-for-in: 0 */\n        child = parent[key];\n        switch (typeof child) {\n            case \"function\":\n                // ignore bound functions directly on tree which do not have a prototype\n                // or aren't nodes\n                if (child.prototype && child.prototype.type) {\n                    child.prototype.typeIndex = ticker++;\n                }\n                break;\n            case \"object\":\n                ticker = indexNodeTypes(child, ticker);\n                break;\n        \n        }\n    }\n    return ticker;\n}\n\nvar Visitor = function(implementation) {\n    this._implementation = implementation;\n    this._visitFnCache = [];\n\n    if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n    }\n};\n\nVisitor.prototype = {\n    visit: function(node) {\n        if (!node) {\n            return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            return node;\n        }\n\n        var visitFnCache = this._visitFnCache,\n            impl = this._implementation,\n            aryIndx = nodeTypeIndex << 1,\n            outAryIndex = aryIndx | 1,\n            func = visitFnCache[aryIndx],\n            funcOut = visitFnCache[outAryIndex],\n            visitArgs = _visitArgs,\n            fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = \"visit\" + node.type;\n            func = impl[fnName] || _noop;\n            funcOut = impl[fnName + \"Out\"] || _noop;\n            visitFnCache[aryIndx] = func;\n            visitFnCache[outAryIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            var newNode = func.call(impl, node, visitArgs);\n            if (impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n            node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    },\n    visitArray: function(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        var cnt = nodes.length, i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        var out = [];\n        for (i = 0; i < cnt; i++) {\n            var evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    },\n    flatten: function(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        var cnt, i, item,\n            nestedCnt, j, nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n};\nmodule.exports = Visitor;\n\n},{\"../tree\":65}],95:[function(require,module,exports){\n\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n},{\"./raw\":96}],96:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],97:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":96}],98:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":97}],99:[function(require,module,exports){\n// should work in any browser without browserify\n\nif (typeof Promise.prototype.done !== 'function') {\n  Promise.prototype.done = function (onFulfilled, onRejected) {\n    var self = arguments.length ? this.then.apply(this, arguments) : this\n    self.then(null, function (err) {\n      setTimeout(function () {\n        throw err\n      }, 0)\n    })\n  }\n}\n},{}],100:[function(require,module,exports){\n// not \"use strict\" so we can declare global \"Promise\"\n\nvar asap = require('asap');\n\nif (typeof Promise === 'undefined') {\n  Promise = require('./lib/core.js')\n  require('./lib/es6-extensions.js')\n}\n\nrequire('./polyfill-done.js');\n\n},{\"./lib/core.js\":97,\"./lib/es6-extensions.js\":98,\"./polyfill-done.js\":99,\"asap\":95}]},{},[2])(2)\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex__ = __webpack_require__(4);\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */]);\n\nvar state = {\n    count: 10\n};\n\nvar getters = {\n    count: function count(state) {\n        return state.count;\n    },\n    oddCount: function oddCount(state) {\n        return state.count % 2 ? '不是偶数' : '是偶数';\n    }\n};\n\nvar mutations = {\n    increment: function increment(state) {\n        state.count++;\n    },\n    clickOdd: function clickOdd(state) {\n        state.count++;\n    },\n    clickAsync: function clickAsync(state) {\n        state.count++;\n    }\n};\nvar actions = {\n    increment: function increment(_ref) {\n        var commit = _ref.commit;\n\n        commit('increment');\n    },\n    clickOdd: function clickOdd(_ref2) {\n        var commit = _ref2.commit,\n            state = _ref2.state;\n        //state拿数据\n        if (state.count % 2 === 0) {\n            commit('clickOdd');\n        }\n    },\n    clickAsync: function clickAsync(_ref3) {\n        var commit = _ref3.commit;\n\n        new Promise(function (resolve) {\n            setTimeout(function () {\n                commit('clickAsync');\n            }, 1000);\n        });\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_1_vuex__[\"a\" /* default */].Store({\n    state: state,\n    mutations: mutations,\n    actions: actions,\n    getters: getters\n}));\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cfee3365f2ae0841496e","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue@2.5.16@vue/dist/vue.esm.js\n// module id = 1\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0","<template>\n  <div id=\"app\">\n    <p>{{count}}</p>\n    <p>{{oddCount}}</p>\n    <div class=\"main\">\n      <div class=\"inner\"></div>\n    </div>\n    <input type=\"button\" @click=\"increment\" value=\"增加\">\n    <input type=\"button\" @click=\"clickOdd\" value=\"偶数才能点击\">\n    <input type=\"button\" @click=\"clickAsync\" value=\"异步点击\">\n  </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\n\nimport Player from '../components/player.vue'\nexport default {\n  name: 'app',\n  computed:mapGetters(['count','oddCount']),\n  methods:mapActions(['increment','clickOdd','clickAsync'])\n}\n</script>\n\n<style lang=\"less\">\n@import url(./assets/css/main.less);\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vuex@3.0.1@vuex/dist/vuex.esm.js\n// module id = 4\n// module chunks = 0","<template>\r\n    <div>\r\n        我是子组件player{{parentMsg}}\r\n        <input type=\"button\" value=\"传值给父组件\" @click =\"sendToParent\">\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"player\",\r\n  props: [\"parentMsg\"],\r\n  data: function() {\r\n    return {\r\n      childMsg: \"我是子组件传上来的数据1\"\r\n    };\r\n  },\r\n  methods: {\r\n    sendToParent: function() {\r\n      Event.$emit(\"child-event\", this.childMsg);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// components/player.vue","import Vue from 'vue'\nimport App from './App.vue'\nimport vueRouter from 'vue-router'\n\nimport less from 'less'\n\nimport store from '../vuex/store'\n\n\nVue.use(vueRouter)\n\nwindow.Event = new Vue();\n\nnew Vue({\n\n  el: '#app',\n  store,\n  render: h => h(App)\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_timers-browserify@2.0.10@timers-browserify/main.js\n// module id = 7\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_setimmediate@1.0.5@setimmediate/setImmediate.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_process@0.11.10@process/browser.js\n// module id = 9\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4280e696\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4280e696\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 10\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/_css-loader@0.28.11@css-loader/index.js?minimize!../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4280e696\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\")(\"78083572\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader!./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4280e696\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 11\n// module chunks = 0","exports = module.exports = require(\"../node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media only screen and (min-width:960px){.main{width:100%;height:36px;background-color:red}.main .inner{width:50%;height:36px}}@media only screen and (min-width:641px) and (max-width:960px){.main{width:100%;height:36px;background-color:aqua}}@media only screen and (max-width:640px){.main{width:100%;height:36px;background-color:silver}}#app{font-family:Avenir,Helvetica,Arial,sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-align:center;color:#2c3e50;margin-top:60px}h1,h2{font-weight:400}ul{list-style-type:none;padding:0}li{display:inline-block;margin:0 10px}a{color:#42b983}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader?minimize!./node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4280e696\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 12\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_css-loader@0.28.11@css-loader/lib/css-base.js\n// module id = 13\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/addStylesClient.js\n// module id = 14\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-style-loader@3.1.2@vue-style-loader/lib/listToStyles.js\n// module id = 15\n// module chunks = 0","var normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./player.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./player.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5dd21e8a\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./player.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/player.vue\n// module id = 16\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    我是子组件player\"+_vm._s(_vm.parentMsg)+\"\\n    \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"传值给父组件\"},on:{\"click\":_vm.sendToParent}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-5dd21e8a\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./components/player.vue\n// module id = 17\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('p',[_vm._v(_vm._s(_vm.count))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.oddCount))]),_vm._v(\" \"),_vm._m(0),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"增加\"},on:{\"click\":_vm.increment}}),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"偶数才能点击\"},on:{\"click\":_vm.clickOdd}}),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"button\",\"value\":\"异步点击\"},on:{\"click\":_vm.clickAsync}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"inner\"})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-4280e696\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 18\n// module chunks = 0","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-router@3.0.1@vue-router/dist/vue-router.esm.js\n// module id = 19\n// module chunks = 0","/*!\n * Less - Leaner CSS v3.0.4\n * http://lesscss.org\n *\n * Copyright (c) 2009-2018, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n */\n\n /** * @license Apache-2.0\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.less = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nvar addDataAttr = require(\"./utils\").addDataAttr,\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, options) {\n\n    // use options from the current script tag data attribues\n    addDataAttr(options, browser.currentScript(window));\n\n    if (options.isFileProtocol === undefined) {\n        options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\n    }\n\n    // Load styles asynchronously (default: false)\n    //\n    // This is set to `false` by default, so that the body\n    // doesn't start loading before the stylesheets are parsed.\n    // Setting this to `true` can result in flickering.\n    //\n    options.async = options.async || false;\n    options.fileAsync = options.fileAsync || false;\n\n    // Interval between watch polls\n    options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\n\n    options.env = options.env || (window.location.hostname == '127.0.0.1' ||\n        window.location.hostname == '0.0.0.0'   ||\n        window.location.hostname == 'localhost' ||\n        (window.location.port &&\n            window.location.port.length > 0)      ||\n        options.isFileProtocol                   ? 'development'\n        : 'production');\n\n    var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\n    if (dumpLineNumbers) {\n        options.dumpLineNumbers = dumpLineNumbers[1];\n    }\n\n    if (options.useFileCache === undefined) {\n        options.useFileCache = true;\n    }\n\n    if (options.onReady === undefined) {\n        options.onReady = true;\n    }\n\n    options.javascriptEnabled = (options.javascriptEnabled || options.inlineJavaScript) ? true : false;\n\n};\n\n},{\"./browser\":3,\"./utils\":11}],2:[function(require,module,exports){\n/**\n * Kicks off less and compiles any stylesheets\n * used in the browser distributed version of less\n * to kick-start less using the browser api\n */\n/* global window, document */\n\n// TODO - consider switching this out for a recommendation for this polyfill?\n// <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js\"></script>\n// Browsers have good Promise support\nrequire(\"promise/polyfill\");\n\nvar options = require('../less/default-options')();\n\nif (window.less) {\n    for (key in window.less) {\n        if (window.less.hasOwnProperty(key)) {\n            options[key] = window.less[key];\n        }\n    }\n}\nrequire(\"./add-default-options\")(window, options);\n\noptions.plugins = options.plugins || [];\n\nif (window.LESS_PLUGINS) {\n    options.plugins = options.plugins.concat(window.LESS_PLUGINS);\n}\n\nvar less = module.exports = require(\"./index\")(window, options);\n\nwindow.less = less;\n\nvar css, head, style;\n\n// Always restore page visibility\nfunction resolveOrReject(data) {\n    if (data.filename) {\n        console.warn(data);\n    }\n    if (!options.async) {\n        head.removeChild(style);\n    }\n}\n\nif (options.onReady) {\n    if (/!watch/.test(window.location.hash)) {\n        less.watch();\n    }\n    // Simulate synchronous stylesheet loading by hiding page rendering\n    if (!options.async) {\n        css = 'body { display: none !important }';\n        head = document.head || document.getElementsByTagName('head')[0];\n        style = document.createElement('style');\n\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        head.appendChild(style);\n    }\n    less.registerStylesheetsImmediately();\n    less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\n}\n\n},{\"../less/default-options\":16,\"./add-default-options\":1,\"./index\":8,\"promise/polyfill\":100}],3:[function(require,module,exports){\nvar utils = require(\"./utils\");\nmodule.exports = {\n    createCSS: function (document, styles, sheet) {\n        // Strip the query-string\n        var href = sheet.href || '';\n\n        // If there is no title set, use the filename, minus the extension\n        var id = 'less:' + (sheet.title || utils.extractId(href));\n\n        // If this has already been inserted into the DOM, we may need to replace it\n        var oldStyleNode = document.getElementById(id);\n        var keepOldStyleNode = false;\n\n        // Create a new stylesheet node for insertion or (if necessary) replacement\n        var styleNode = document.createElement('style');\n        styleNode.setAttribute('type', 'text/css');\n        if (sheet.media) {\n            styleNode.setAttribute('media', sheet.media);\n        }\n        styleNode.id = id;\n\n        if (!styleNode.styleSheet) {\n            styleNode.appendChild(document.createTextNode(styles));\n\n            // If new contents match contents of oldStyleNode, don't replace oldStyleNode\n            keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\n                oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\n        }\n\n        var head = document.getElementsByTagName('head')[0];\n\n        // If there is no oldStyleNode, just append; otherwise, only append if we need\n        // to replace oldStyleNode with an updated stylesheet\n        if (oldStyleNode === null || keepOldStyleNode === false) {\n            var nextEl = sheet && sheet.nextSibling || null;\n            if (nextEl) {\n                nextEl.parentNode.insertBefore(styleNode, nextEl);\n            } else {\n                head.appendChild(styleNode);\n            }\n        }\n        if (oldStyleNode && keepOldStyleNode === false) {\n            oldStyleNode.parentNode.removeChild(oldStyleNode);\n        }\n\n        // For IE.\n        // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\n        // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\n        if (styleNode.styleSheet) {\n            try {\n                styleNode.styleSheet.cssText = styles;\n            } catch (e) {\n                throw new Error(\"Couldn't reassign styleSheet.cssText.\");\n            }\n        }\n    },\n    currentScript: function(window) {\n        var document = window.document;\n        return document.currentScript || (function() {\n            var scripts = document.getElementsByTagName(\"script\");\n            return scripts[scripts.length - 1];\n        })();\n    }\n};\n\n},{\"./utils\":11}],4:[function(require,module,exports){\n// Cache system is a bit outdated and could do with work\n\nmodule.exports = function(window, options, logger) {\n    var cache = null;\n    if (options.env !== 'development') {\n        try {\n            cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\n        } catch (_) {}\n    }\n    return {\n        setCSS: function(path, lastModified, modifyVars, styles) {\n            if (cache) {\n                logger.info('saving ' + path + ' to cache.');\n                try {\n                    cache.setItem(path, styles);\n                    cache.setItem(path + ':timestamp', lastModified);\n                    if (modifyVars) {\n                        cache.setItem(path + ':vars', JSON.stringify(modifyVars));\n                    }\n                } catch (e) {\n                    // TODO - could do with adding more robust error handling\n                    logger.error('failed to save \"' + path + '\" to local storage for caching.');\n                }\n            }\n        },\n        getCSS: function(path, webInfo, modifyVars) {\n            var css       = cache && cache.getItem(path),\n                timestamp = cache && cache.getItem(path + ':timestamp'),\n                vars      = cache && cache.getItem(path + ':vars');\n\n            modifyVars = modifyVars || {};\n\n            if (timestamp && webInfo.lastModified &&\n                (new Date(webInfo.lastModified).valueOf() ===\n                    new Date(timestamp).valueOf()) &&\n                (!modifyVars && !vars || JSON.stringify(modifyVars) === vars)) {\n                // Use local copy\n                return css;\n            }\n        }\n    };\n};\n\n},{}],5:[function(require,module,exports){\nvar utils = require(\"./utils\"),\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, less, options) {\n\n    function errorHTML(e, rootHref) {\n        var id = 'less-error-message:' + utils.extractId(rootHref || \"\");\n        var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n        var elem = window.document.createElement('div'), timer, content, errors = [];\n        var filename = e.filename || rootHref;\n        var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n\n        elem.id        = id;\n        elem.className = \"less-error-message\";\n\n        content = '<h3>'  + (e.type || \"Syntax\") + \"Error: \" + (e.message || 'There is an error in your .less file') +\n            '</h3>' + '<p>in <a href=\"' + filename   + '\">' + filenameNoPath + \"</a> \";\n\n        var errorline = function (e, i, classname) {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += 'on line ' + e.line + ', column ' + (e.column + 1) + ':</p>' +\n                '<ul>' + errors.join('') + '</ul>';\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += '<br/>Stack Trace</br />' + e.stack.split('\\n').slice(1).join('<br/>');\n        }\n        elem.innerHTML = content;\n\n        // CSS for error messages\n        browser.createCSS(window.document, [\n            '.less-error-message ul, .less-error-message li {',\n            'list-style-type: none;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message label {',\n            'font-size: 12px;',\n            'margin-right: 15px;',\n            'padding: 4px 0;',\n            'color: #cc7777;',\n            '}',\n            '.less-error-message pre {',\n            'color: #dd6666;',\n            'padding: 4px 0;',\n            'margin: 0;',\n            'display: inline-block;',\n            '}',\n            '.less-error-message pre.line {',\n            'color: #ff0000;',\n            '}',\n            '.less-error-message h3 {',\n            'font-size: 20px;',\n            'font-weight: bold;',\n            'padding: 15px 0 5px 0;',\n            'margin: 0;',\n            '}',\n            '.less-error-message a {',\n            'color: #10a',\n            '}',\n            '.less-error-message .error {',\n            'color: red;',\n            'font-weight: bold;',\n            'padding-bottom: 2px;',\n            'border-bottom: 1px dashed red;',\n            '}'\n        ].join('\\n'), { title: 'error-message' });\n\n        elem.style.cssText = [\n            \"font-family: Arial, sans-serif\",\n            \"border: 1px solid #e00\",\n            \"background-color: #eee\",\n            \"border-radius: 5px\",\n            \"-webkit-border-radius: 5px\",\n            \"-moz-border-radius: 5px\",\n            \"color: #e00\",\n            \"padding: 15px\",\n            \"margin-bottom: 15px\"\n        ].join(';');\n\n        if (options.env === 'development') {\n            timer = setInterval(function () {\n                var document = window.document,\n                    body = document.body;\n                if (body) {\n                    if (document.getElementById(id)) {\n                        body.replaceChild(elem, document.getElementById(id));\n                    } else {\n                        body.insertBefore(elem, body.firstChild);\n                    }\n                    clearInterval(timer);\n                }\n            }, 10);\n        }\n    }\n\n    function removeErrorHTML(path) {\n        var node = window.document.getElementById('less-error-message:' + utils.extractId(path));\n        if (node) {\n            node.parentNode.removeChild(node);\n        }\n    }\n\n    function removeErrorConsole(path) {\n        // no action\n    }\n\n    function removeError(path) {\n        if (!options.errorReporting || options.errorReporting === \"html\") {\n            removeErrorHTML(path);\n        } else if (options.errorReporting === \"console\") {\n            removeErrorConsole(path);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting(\"remove\", path);\n        }\n    }\n\n    function errorConsole(e, rootHref) {\n        var template = '{line} {content}';\n        var filename = e.filename || rootHref;\n        var errors = [];\n        var content = (e.type || \"Syntax\") + \"Error: \" + (e.message || 'There is an error in your .less file') +\n            \" in \" + filename;\n\n        var errorline = function (e, i, classname) {\n            if (e.extract[i] !== undefined) {\n                errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\n                    .replace(/\\{class\\}/, classname)\n                    .replace(/\\{content\\}/, e.extract[i]));\n            }\n        };\n\n        if (e.line) {\n            errorline(e, 0, '');\n            errorline(e, 1, 'line');\n            errorline(e, 2, '');\n            content += ' on line ' + e.line + ', column ' + (e.column + 1) + ':\\n' +\n                errors.join('\\n');\n        }\n        if (e.stack && (e.extract || options.logLevel >= 4)) {\n            content += '\\nStack Trace\\n' + e.stack;\n        }\n        less.logger.error(content);\n    }\n\n    function error(e, rootHref) {\n        if (!options.errorReporting || options.errorReporting === \"html\") {\n            errorHTML(e, rootHref);\n        } else if (options.errorReporting === \"console\") {\n            errorConsole(e, rootHref);\n        } else if (typeof options.errorReporting === 'function') {\n            options.errorReporting(\"add\", e, rootHref);\n        }\n    }\n\n    return {\n        add: error,\n        remove: removeError\n    };\n};\n\n},{\"./browser\":3,\"./utils\":11}],6:[function(require,module,exports){\n/* global window, XMLHttpRequest */\n\nmodule.exports = function(options, logger) {\n\n    var AbstractFileManager = require(\"../less/environment/abstract-file-manager.js\");\n\n    var fileCache = {};\n\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\n    var FileManager = function() {\n    };\n\n    FileManager.prototype = new AbstractFileManager();\n\n    FileManager.prototype.alwaysMakePathsAbsolute = function alwaysMakePathsAbsolute() {\n        return true;\n    };\n    FileManager.prototype.join = function join(basePath, laterPath) {\n        if (!basePath) {\n            return laterPath;\n        }\n        return this.extractUrlParts(laterPath, basePath).path;\n    };\n    FileManager.prototype.doXHR = function doXHR(url, type, callback, errback) {\n\n        var xhr = new XMLHttpRequest();\n        var async = options.isFileProtocol ? options.fileAsync : true;\n\n        if (typeof xhr.overrideMimeType === 'function') {\n            xhr.overrideMimeType('text/css');\n        }\n        logger.debug(\"XHR: Getting '\" + url + \"'\");\n        xhr.open('GET', url, async);\n        xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\n        xhr.send(null);\n\n        function handleResponse(xhr, callback, errback) {\n            if (xhr.status >= 200 && xhr.status < 300) {\n                callback(xhr.responseText,\n                    xhr.getResponseHeader(\"Last-Modified\"));\n            } else if (typeof errback === 'function') {\n                errback(xhr.status, url);\n            }\n        }\n\n        if (options.isFileProtocol && !options.fileAsync) {\n            if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\n                callback(xhr.responseText);\n            } else {\n                errback(xhr.status, url);\n            }\n        } else if (async) {\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState == 4) {\n                    handleResponse(xhr, callback, errback);\n                }\n            };\n        } else {\n            handleResponse(xhr, callback, errback);\n        }\n    };\n    FileManager.prototype.supports = function(filename, currentDirectory, options, environment) {\n        return true;\n    };\n\n    FileManager.prototype.clearFileCache = function() {\n        fileCache = {};\n    };\n\n    FileManager.prototype.loadFile = function loadFile(filename, currentDirectory, options, environment) {\n        // TODO: Add prefix support like less-node?\n        // What about multiple paths?\n\n        if (currentDirectory && !this.isPathAbsolute(filename)) {\n            filename = currentDirectory + filename;\n        }\n\n        filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\n\n        options = options || {};\n\n        // sheet may be set to the stylesheet for the initial load or a collection of properties including\n        // some context variables for imports\n        var hrefParts = this.extractUrlParts(filename, window.location.href);\n        var href      = hrefParts.url;\n        var self      = this;\n        \n        return new Promise(function(resolve, reject) {\n            if (options.useFileCache && fileCache[href]) {\n                try {\n                    var lessText = fileCache[href];\n                    return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() }});\n                } catch (e) {\n                    return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\n                }\n            }\n\n            self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\n                // per file cache\n                fileCache[href] = data;\n\n                // Use remote copy (re-parse)\n                resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified }});\n            }, function doXHRError(status, url) {\n                reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\n            });\n        });\n    };\n\n    return FileManager;\n};\n\n},{\"../less/environment/abstract-file-manager.js\":17}],7:[function(require,module,exports){\nmodule.exports = function() {\n\n    var functionRegistry = require(\"./../less/functions/function-registry\");\n\n    function imageSize() {\n        throw {\n            type: \"Runtime\",\n            message: \"Image size functions are not supported in browser version of less\"\n        };\n    }\n\n    var imageFunctions = {\n        \"image-size\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        \"image-width\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        },\n        \"image-height\": function(filePathNode) {\n            imageSize(this, filePathNode);\n            return -1;\n        }\n    };\n\n    functionRegistry.addMultiple(imageFunctions);\n};\n\n},{\"./../less/functions/function-registry\":26}],8:[function(require,module,exports){\n//\n// index.js\n// Should expose the additional browser functions on to the less object\n//\nvar addDataAttr = require(\"./utils\").addDataAttr,\n    browser = require(\"./browser\");\n\nmodule.exports = function(window, options) {\n    var document = window.document;\n    var less = require('../less')();\n    \n    less.options = options;\n    var environment = less.environment,\n        FileManager = require(\"./file-manager\")(options, less.logger),\n        fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = require(\"./plugin-loader\");\n\n    require(\"./log-listener\")(less, options);\n    var errors = require(\"./error-reporting\")(window, less, options);\n    var cache = less.cache = options.cache || require(\"./cache\")(window, options, less.logger);\n    require('./image-size')(less.environment);\n\n    // Setup user functions - Deprecate?\n    if (options.functions) {\n        less.functions.functionRegistry.addMultiple(options.functions);\n    }\n\n    var typePattern = /^text\\/(x-)?less$/;\n\n    function clone(obj) {\n        return JSON.parse(JSON.stringify(obj || {}));\n    }\n\n    // only really needed for phantom\n    function bind(func, thisArg) {\n        var curryArgs = Array.prototype.slice.call(arguments, 2);\n        return function() {\n            var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n            return func.apply(thisArg, args);\n        };\n    }\n\n    function loadStyles(modifyVars) {\n        var styles = document.getElementsByTagName('style'),\n            style;\n\n        for (var i = 0; i < styles.length; i++) {\n            style = styles[i];\n            if (style.type.match(typePattern)) {\n                var instanceOptions = clone(options);\n                instanceOptions.modifyVars = modifyVars;\n                var lessText = style.innerHTML || '';\n                instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n\n                /* jshint loopfunc:true */\n                // use closure to store current style\n                less.render(lessText, instanceOptions,\n                        bind(function(style, e, result) {\n                            if (e) {\n                                errors.add(e, \"inline\");\n                            } else {\n                                style.type = 'text/css';\n                                if (style.styleSheet) {\n                                    style.styleSheet.cssText = result.css;\n                                } else {\n                                    style.innerHTML = result.css;\n                                }\n                            }\n                        }, null, style));\n            }\n        }\n    }\n\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n\n        var instanceOptions = clone(options);\n        addDataAttr(instanceOptions, sheet);\n        instanceOptions.mime = sheet.type;\n\n        if (modifyVars) {\n            instanceOptions.modifyVars = modifyVars;\n        }\n\n        function loadInitialFileCallback(loadedFile) {\n\n            var data = loadedFile.contents,\n                path = loadedFile.filename,\n                webInfo = loadedFile.webInfo;\n\n            var newFileInfo = {\n                currentDirectory: fileManager.getPath(path),\n                filename: path,\n                rootFilename: path,\n                relativeUrls: instanceOptions.relativeUrls};\n\n            newFileInfo.entryPath = newFileInfo.currentDirectory;\n            newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n\n            if (webInfo) {\n                webInfo.remaining = remaining;\n\n                var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                if (!reload && css) {\n                    webInfo.local = true;\n                    callback(null, css, data, sheet, webInfo, path);\n                    return;\n                }\n\n            }\n\n            // TODO add tests around how this behaves when reloading\n            errors.remove(path);\n\n            instanceOptions.rootFileInfo = newFileInfo;\n            less.render(data, instanceOptions, function(e, result) {\n                if (e) {\n                    e.href = path;\n                    callback(e);\n                } else {\n                    cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                    callback(null, result.css, data, sheet, webInfo, path);\n                }\n            });\n        }\n\n        fileManager.loadFile(sheet.href, null, instanceOptions, environment)\n            .then(function(loadedFile) {\n                loadInitialFileCallback(loadedFile);\n            }).catch(function(err) {\n                console.log(err);\n                callback(err);\n            });\n\n    }\n\n    function loadStyleSheets(callback, reload, modifyVars) {\n        for (var i = 0; i < less.sheets.length; i++) {\n            loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n        }\n    }\n\n    function initRunningMode() {\n        if (less.env === 'development') {\n            less.watchTimer = setInterval(function () {\n                if (less.watchMode) {\n                    fileManager.clearFileCache();\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                        } else if (css) {\n                            browser.createCSS(window.document, css, sheet);\n                        }\n                    });\n                }\n            }, options.poll);\n        }\n    }\n\n    //\n    // Watch mode\n    //\n    less.watch   = function () {\n        if (!less.watchMode ) {\n            less.env = 'development';\n            initRunningMode();\n        }\n        this.watchMode = true;\n        return true;\n    };\n\n    less.unwatch = function () {clearInterval(less.watchTimer); this.watchMode = false; return false; };\n\n    //\n    // Synchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\".\n    //\n    less.registerStylesheetsImmediately = function() {\n        var links = document.getElementsByTagName('link');\n        less.sheets = [];\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\n                (links[i].type.match(typePattern)))) {\n                less.sheets.push(links[i]);\n            }\n        }\n    };\n\n    //\n    // Asynchronously get all <link> tags with the 'rel' attribute set to\n    // \"stylesheet/less\", returning a Promise.\n    //\n    less.registerStylesheets = function() {\n        return new Promise(function(resolve, reject) {\n            less.registerStylesheetsImmediately();\n            resolve();\n        });\n    };\n\n    //\n    // With this function, it's possible to alter variables and re-render\n    // CSS without reloading less-files\n    //\n    less.modifyVars = function(record) {\n        return less.refresh(true, record, false);\n    };\n\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n        if ((reload || clearFileCache) && clearFileCache !== false) {\n            fileManager.clearFileCache();\n        }\n        return new Promise(function (resolve, reject) {\n            var startTime, endTime, totalMilliseconds, remainingSheets;\n            startTime = endTime = new Date();\n\n            // Set counter for remaining unprocessed sheets\n            remainingSheets = less.sheets.length;\n\n            if (remainingSheets === 0) {\n\n                endTime = new Date();\n                totalMilliseconds = endTime - startTime;\n                less.logger.info(\"Less has finished and no sheets were loaded.\");\n                resolve({\n                    startTime: startTime,\n                    endTime: endTime,\n                    totalMilliseconds: totalMilliseconds,\n                    sheets: less.sheets.length\n                });\n\n            } else {\n                // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\n                loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                    if (e) {\n                        errors.add(e, e.href || sheet.href);\n                        reject(e);\n                        return;\n                    }\n                    if (webInfo.local) {\n                        less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\n                    } else {\n                        less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\n                    }\n                    browser.createCSS(window.document, css, sheet);\n                    less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + 'ms');\n\n                    // Count completed sheet\n                    remainingSheets--;\n\n                    // Check if the last remaining sheet was processed and then call the promise\n                    if (remainingSheets === 0) {\n                        totalMilliseconds = new Date() - startTime;\n                        less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + 'ms');\n                        resolve({\n                            startTime: startTime,\n                            endTime: endTime,\n                            totalMilliseconds: totalMilliseconds,\n                            sheets: less.sheets.length\n                        });\n                    }\n                    endTime = new Date();\n                }, reload, modifyVars);\n            }\n\n            loadStyles(modifyVars);\n        });\n    };\n\n    less.refreshStyles = loadStyles;\n    return less;\n};\n\n},{\"../less\":35,\"./browser\":3,\"./cache\":4,\"./error-reporting\":5,\"./file-manager\":6,\"./image-size\":7,\"./log-listener\":9,\"./plugin-loader\":10,\"./utils\":11}],9:[function(require,module,exports){\nmodule.exports = function(less, options) {\n\n    var logLevel_debug = 4,\n        logLevel_info = 3,\n        logLevel_warn = 2,\n        logLevel_error = 1;\n\n    // The amount of logging in the javascript console.\n    // 3 - Debug, information and errors\n    // 2 - Information and errors\n    // 1 - Errors\n    // 0 - None\n    // Defaults to 2\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ?  logLevel_info : logLevel_error);\n\n    if (!options.loggers) {\n        options.loggers = [{\n            debug: function(msg) {\n                if (options.logLevel >= logLevel_debug) {\n                    console.log(msg);\n                }\n            },\n            info: function(msg) {\n                if (options.logLevel >= logLevel_info) {\n                    console.log(msg);\n                }\n            },\n            warn: function(msg) {\n                if (options.logLevel >= logLevel_warn) {\n                    console.warn(msg);\n                }\n            },\n            error: function(msg) {\n                if (options.logLevel >= logLevel_error) {\n                    console.error(msg);\n                }\n            }\n        }];\n    }\n    for (var i = 0; i < options.loggers.length; i++) {\n        less.logger.addListener(options.loggers[i]);\n    }\n};\n\n},{}],10:[function(require,module,exports){\n// TODO: Add tests for browser @plugin\n/*global window */\n\nvar AbstractPluginLoader = require(\"../less/environment/abstract-plugin-loader.js\");\n\n/**\n * Browser Plugin Loader\n */\nvar PluginLoader = function(less) {\n    this.less = less;\n    // shim for browser require?\n    this.require = require;\n};\n\nPluginLoader.prototype = new AbstractPluginLoader();\n\nPluginLoader.prototype.loadPlugin = function(filename, basePath, context, environment, fileManager) {\n    return new Promise(function(fulfill, reject) {\n        fileManager.loadFile(filename, basePath, context, environment)\n            .then(fulfill).catch(reject);\n    });\n};\n\nmodule.exports = PluginLoader;\n\n\n},{\"../less/environment/abstract-plugin-loader.js\":18}],11:[function(require,module,exports){\nmodule.exports = {\n    extractId: function(href) {\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '')  // Remove protocol & domain\n            .replace(/[\\?\\&]livereload=\\w+/, '')        // Remove LiveReload cachebuster\n            .replace(/^\\//, '')                         // Remove root /\n            .replace(/\\.[a-zA-Z]+$/, '')                // Remove simple extension\n            .replace(/[^\\.\\w-]+/g, '-')                 // Replace illegal characters\n            .replace(/\\./g, ':');                       // Replace dots with colons(for valid id)\n    },\n    addDataAttr: function(options, tag) {\n        for (var opt in tag.dataset) {\n            if (tag.dataset.hasOwnProperty(opt)) {\n                if (opt === \"env\" || opt === \"dumpLineNumbers\" || opt === \"rootpath\" || opt === \"errorReporting\") {\n                    options[opt] = tag.dataset[opt];\n                } else {\n                    try {\n                        options[opt] = JSON.parse(tag.dataset[opt]);\n                    }\n                    catch (_) {}\n                }\n            }\n        }\n    }\n};\n\n},{}],12:[function(require,module,exports){\nvar contexts = {};\nmodule.exports = contexts;\n\nvar copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n    if (!original) { return; }\n\n    for (var i = 0; i < propertiesToCopy.length; i++) {\n        if (original.hasOwnProperty(propertiesToCopy[i])) {\n            destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n        }\n    }\n};\n\n/*\n parse is used whilst parsing\n */\nvar parseCopyProperties = [\n    // options\n    'paths',            // option - unmodified - paths to search for imports on\n    'relativeUrls',     // option - whether to adjust URL's to be relative\n    'rootpath',         // option - rootpath to append to URL's\n    'strictImports',    // option -\n    'insecure',         // option - whether to allow imports from insecure ssl hosts\n    'dumpLineNumbers',  // option - whether to dump line numbers\n    'compress',         // option - whether to compress\n    'syncImport',       // option - whether to import synchronously\n    'chunkInput',       // option - whether to chunk input. more performant but causes parse issues.\n    'mime',             // browser only - mime type for sheet import\n    'useFileCache',     // browser only - whether to use the per file session cache\n    // context\n    'processImports',   // option & context - whether to process imports. if false then imports will not be imported.\n                        // Used by the import manager to stop multiple import visitors being created.\n    'pluginManager'     // Used as the plugin manager for the session\n];\n\ncontexts.Parse = function(options) {\n    copyFromOriginal(options, this, parseCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n};\n\nvar evalCopyProperties = [\n    'paths',             // additional include paths\n    'compress',          // whether to compress\n    'ieCompat',          // whether to enforce IE compatibility (IE8 data-uri)\n    'strictMath',        // whether math has to be within parenthesis\n    'strictUnits',       // whether units need to evaluate correctly\n    'sourceMap',         // whether to output a source map\n    'importMultiple',    // whether we are currently importing multiple copies\n    'urlArgs',           // whether to add args into url tokens\n    'javascriptEnabled', // option - whether Inline JavaScript is enabled. if undefined, defaults to false\n    'pluginManager',     // Used as the plugin manager for the session\n    'importantScope'     // used to bubble up !important statements\n];\n\ncontexts.Eval = function(options, frames) {\n    copyFromOriginal(options, this, evalCopyProperties);\n\n    if (typeof this.paths === \"string\") { this.paths = [this.paths]; }\n\n    this.frames = frames || [];\n    this.importantScope = this.importantScope || [];\n};\n\ncontexts.Eval.prototype.inParenthesis = function () {\n    if (!this.parensStack) {\n        this.parensStack = [];\n    }\n    this.parensStack.push(true);\n};\n\ncontexts.Eval.prototype.outOfParenthesis = function () {\n    this.parensStack.pop();\n};\n\ncontexts.Eval.prototype.mathOn = true;\ncontexts.Eval.prototype.isMathOn = function () {\n    if (!this.mathOn) {\n        return false;\n    }\n    return this.strictMath ? (this.parensStack && this.parensStack.length) : true;\n};\n\ncontexts.Eval.prototype.isPathRelative = function (path) {\n    return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n};\n\ncontexts.Eval.prototype.normalizePath = function( path ) {\n    var\n        segments = path.split(\"/\").reverse(),\n        segment;\n\n    path = [];\n    while (segments.length !== 0 ) {\n        segment = segments.pop();\n        switch ( segment ) {\n            case \".\":\n                break;\n            case \"..\":\n                if ((path.length === 0) || (path[path.length - 1] === \"..\")) {\n                    path.push( segment );\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push( segment );\n                break;\n        }\n    }\n\n    return path.join(\"/\");\n};\n\n// todo - do the same for the toCSS ?\n\n},{}],13:[function(require,module,exports){\nmodule.exports = {\n    'aliceblue':'#f0f8ff',\n    'antiquewhite':'#faebd7',\n    'aqua':'#00ffff',\n    'aquamarine':'#7fffd4',\n    'azure':'#f0ffff',\n    'beige':'#f5f5dc',\n    'bisque':'#ffe4c4',\n    'black':'#000000',\n    'blanchedalmond':'#ffebcd',\n    'blue':'#0000ff',\n    'blueviolet':'#8a2be2',\n    'brown':'#a52a2a',\n    'burlywood':'#deb887',\n    'cadetblue':'#5f9ea0',\n    'chartreuse':'#7fff00',\n    'chocolate':'#d2691e',\n    'coral':'#ff7f50',\n    'cornflowerblue':'#6495ed',\n    'cornsilk':'#fff8dc',\n    'crimson':'#dc143c',\n    'cyan':'#00ffff',\n    'darkblue':'#00008b',\n    'darkcyan':'#008b8b',\n    'darkgoldenrod':'#b8860b',\n    'darkgray':'#a9a9a9',\n    'darkgrey':'#a9a9a9',\n    'darkgreen':'#006400',\n    'darkkhaki':'#bdb76b',\n    'darkmagenta':'#8b008b',\n    'darkolivegreen':'#556b2f',\n    'darkorange':'#ff8c00',\n    'darkorchid':'#9932cc',\n    'darkred':'#8b0000',\n    'darksalmon':'#e9967a',\n    'darkseagreen':'#8fbc8f',\n    'darkslateblue':'#483d8b',\n    'darkslategray':'#2f4f4f',\n    'darkslategrey':'#2f4f4f',\n    'darkturquoise':'#00ced1',\n    'darkviolet':'#9400d3',\n    'deeppink':'#ff1493',\n    'deepskyblue':'#00bfff',\n    'dimgray':'#696969',\n    'dimgrey':'#696969',\n    'dodgerblue':'#1e90ff',\n    'firebrick':'#b22222',\n    'floralwhite':'#fffaf0',\n    'forestgreen':'#228b22',\n    'fuchsia':'#ff00ff',\n    'gainsboro':'#dcdcdc',\n    'ghostwhite':'#f8f8ff',\n    'gold':'#ffd700',\n    'goldenrod':'#daa520',\n    'gray':'#808080',\n    'grey':'#808080',\n    'green':'#008000',\n    'greenyellow':'#adff2f',\n    'honeydew':'#f0fff0',\n    'hotpink':'#ff69b4',\n    'indianred':'#cd5c5c',\n    'indigo':'#4b0082',\n    'ivory':'#fffff0',\n    'khaki':'#f0e68c',\n    'lavender':'#e6e6fa',\n    'lavenderblush':'#fff0f5',\n    'lawngreen':'#7cfc00',\n    'lemonchiffon':'#fffacd',\n    'lightblue':'#add8e6',\n    'lightcoral':'#f08080',\n    'lightcyan':'#e0ffff',\n    'lightgoldenrodyellow':'#fafad2',\n    'lightgray':'#d3d3d3',\n    'lightgrey':'#d3d3d3',\n    'lightgreen':'#90ee90',\n    'lightpink':'#ffb6c1',\n    'lightsalmon':'#ffa07a',\n    'lightseagreen':'#20b2aa',\n    'lightskyblue':'#87cefa',\n    'lightslategray':'#778899',\n    'lightslategrey':'#778899',\n    'lightsteelblue':'#b0c4de',\n    'lightyellow':'#ffffe0',\n    'lime':'#00ff00',\n    'limegreen':'#32cd32',\n    'linen':'#faf0e6',\n    'magenta':'#ff00ff',\n    'maroon':'#800000',\n    'mediumaquamarine':'#66cdaa',\n    'mediumblue':'#0000cd',\n    'mediumorchid':'#ba55d3',\n    'mediumpurple':'#9370d8',\n    'mediumseagreen':'#3cb371',\n    'mediumslateblue':'#7b68ee',\n    'mediumspringgreen':'#00fa9a',\n    'mediumturquoise':'#48d1cc',\n    'mediumvioletred':'#c71585',\n    'midnightblue':'#191970',\n    'mintcream':'#f5fffa',\n    'mistyrose':'#ffe4e1',\n    'moccasin':'#ffe4b5',\n    'navajowhite':'#ffdead',\n    'navy':'#000080',\n    'oldlace':'#fdf5e6',\n    'olive':'#808000',\n    'olivedrab':'#6b8e23',\n    'orange':'#ffa500',\n    'orangered':'#ff4500',\n    'orchid':'#da70d6',\n    'palegoldenrod':'#eee8aa',\n    'palegreen':'#98fb98',\n    'paleturquoise':'#afeeee',\n    'palevioletred':'#d87093',\n    'papayawhip':'#ffefd5',\n    'peachpuff':'#ffdab9',\n    'peru':'#cd853f',\n    'pink':'#ffc0cb',\n    'plum':'#dda0dd',\n    'powderblue':'#b0e0e6',\n    'purple':'#800080',\n    'rebeccapurple':'#663399',\n    'red':'#ff0000',\n    'rosybrown':'#bc8f8f',\n    'royalblue':'#4169e1',\n    'saddlebrown':'#8b4513',\n    'salmon':'#fa8072',\n    'sandybrown':'#f4a460',\n    'seagreen':'#2e8b57',\n    'seashell':'#fff5ee',\n    'sienna':'#a0522d',\n    'silver':'#c0c0c0',\n    'skyblue':'#87ceeb',\n    'slateblue':'#6a5acd',\n    'slategray':'#708090',\n    'slategrey':'#708090',\n    'snow':'#fffafa',\n    'springgreen':'#00ff7f',\n    'steelblue':'#4682b4',\n    'tan':'#d2b48c',\n    'teal':'#008080',\n    'thistle':'#d8bfd8',\n    'tomato':'#ff6347',\n    'turquoise':'#40e0d0',\n    'violet':'#ee82ee',\n    'wheat':'#f5deb3',\n    'white':'#ffffff',\n    'whitesmoke':'#f5f5f5',\n    'yellow':'#ffff00',\n    'yellowgreen':'#9acd32'\n};\n},{}],14:[function(require,module,exports){\nmodule.exports = {\n    colors: require(\"./colors\"),\n    unitConversions: require(\"./unit-conversions\")\n};\n\n},{\"./colors\":13,\"./unit-conversions\":15}],15:[function(require,module,exports){\nmodule.exports = {\n    length: {\n        'm': 1,\n        'cm': 0.01,\n        'mm': 0.001,\n        'in': 0.0254,\n        'px': 0.0254 / 96,\n        'pt': 0.0254 / 72,\n        'pc': 0.0254 / 72 * 12\n    },\n    duration: {\n        's': 1,\n        'ms': 0.001\n    },\n    angle: {\n        'rad': 1 / (2 * Math.PI),\n        'deg': 1 / 360,\n        'grad': 1 / 400,\n        'turn': 1\n    }\n};\n},{}],16:[function(require,module,exports){\n// Export a new default each time\nmodule.exports = function() {\n    return {\n        /* Outputs a makefile import dependency list to stdout. */\n        depends: false,\n\n        /* Compress using less built-in compression. \n         * This does an okay job but does not utilise all the tricks of \n         * dedicated css compression. */\n        compress: false,\n\n        /* Runs the less parser and just reports errors without any output. */\n        lint: false,\n\n        /* Sets available include paths.\n         * If the file in an @import rule does not exist at that exact location, \n         * less will look for it at the location(s) passed to this option. \n         * You might use this for instance to specify a path to a library which \n         * you want to be referenced simply and relatively in the less files. */\n        paths: [],\n\n        /* color output in the terminal */\n        color: true,\n\n        /* The strictImports controls whether the compiler will allow an @import inside of either \n         * @media blocks or (a later addition) other selector blocks.\n         * See: https://github.com/less/less.js/issues/656 */\n        strictImports: false,\n\n        /* Allow Imports from Insecure HTTPS Hosts */\n        insecure: false,\n\n        /* Allows you to add a path to every generated import and url in your css. \n         * This does not affect less import statements that are processed, just ones \n         * that are left in the output css. */\n        rootpath: '',\n\n        /* By default URLs are kept as-is, so if you import a file in a sub-directory \n         * that references an image, exactly the same URL will be output in the css. \n         * This option allows you to re-write URL's in imported files so that the \n         * URL is always relative to the base imported file */\n        relativeUrls: false,\n\n        /* Compatibility with IE8. Used for limiting data-uri length */\n        ieCompat: false,  // true until 3.0\n\n        /* Without this option on, Less will try and process all math in your css */\n        strictMath: false,\n\n        /* Without this option, less attempts to guess at the output unit when it does maths. */\n        strictUnits: false,\n\n        /* Effectively the declaration is put at the top of your base Less file, \n         * meaning it can be used but it also can be overridden if this variable \n         * is defined in the file. */\n        globalVars: null,\n\n        /* As opposed to the global variable option, this puts the declaration at the\n         * end of your base file, meaning it will override anything defined in your Less file. */\n        modifyVars: null,\n\n        /* This option allows you to specify a argument to go on to every URL.  */\n        urlArgs: ''\n    }\n}\n},{}],17:[function(require,module,exports){\nvar abstractFileManager = function() {\n};\n\nabstractFileManager.prototype.getPath = function (filename) {\n    var j = filename.lastIndexOf('?');\n    if (j > 0) {\n        filename = filename.slice(0, j);\n    }\n    j = filename.lastIndexOf('/');\n    if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n    }\n    if (j < 0) {\n        return \"\";\n    }\n    return filename.slice(0, j + 1);\n};\n\nabstractFileManager.prototype.tryAppendExtension = function(path, ext) {\n    return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n};\n\nabstractFileManager.prototype.tryAppendLessExtension = function(path) {\n    return this.tryAppendExtension(path, '.less');\n};\n\nabstractFileManager.prototype.supportsSync = function() {\n    return false;\n};\n\nabstractFileManager.prototype.alwaysMakePathsAbsolute = function() {\n    return false;\n};\n\nabstractFileManager.prototype.isPathAbsolute = function(filename) {\n    return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\n};\n// TODO: pull out / replace?\nabstractFileManager.prototype.join = function(basePath, laterPath) {\n    if (!basePath) {\n        return laterPath;\n    }\n    return basePath + laterPath;\n};\n\nabstractFileManager.prototype.pathDiff = function pathDiff(url, baseUrl) {\n    // diff between two paths to create a relative path\n\n    var urlParts = this.extractUrlParts(url),\n        baseUrlParts = this.extractUrlParts(baseUrl),\n        i, max, urlDirectories, baseUrlDirectories, diff = \"\";\n    if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return \"\";\n    }\n    max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n    for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) { break; }\n    }\n    baseUrlDirectories = baseUrlParts.directories.slice(i);\n    urlDirectories = urlParts.directories.slice(i);\n    for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += \"../\";\n    }\n    for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += urlDirectories[i] + \"/\";\n    }\n    return diff;\n};\n// helper function, not part of API\nabstractFileManager.prototype.extractUrlParts = function extractUrlParts(url, baseUrl) {\n    // urlParts[1] = protocol://hostname/ OR /\n    // urlParts[2] = / if path relative to host base\n    // urlParts[3] = directories\n    // urlParts[4] = filename\n    // urlParts[5] = parameters\n\n    var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i,\n        urlParts = url.match(urlPartsRegex),\n        returner = {}, rawDirectories = [], directories = [], i, baseUrlParts;\n\n    if (!urlParts) {\n        throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n    }\n\n    // Stylesheets in IE don't always return the full path\n    if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n        if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n        }\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || \"\";\n        if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n    }\n\n    if (urlParts[3]) {\n        rawDirectories = urlParts[3].replace(/\\\\/g, \"/\").split(\"/\");\n\n        // collapse '..' and skip '.'\n        for (i = 0; i < rawDirectories.length; i++) {\n\n            if (rawDirectories[i] === \"..\") {\n                directories.pop();\n            }\n            else if (rawDirectories[i] !== \".\") {\n                directories.push(rawDirectories[i]);\n            }\n        \n        }\n    }\n\n    returner.hostPart = urlParts[1];\n    returner.directories = directories;\n    returner.rawPath = (urlParts[1] || \"\") + rawDirectories.join(\"/\");\n    returner.path = (urlParts[1] || \"\") + directories.join(\"/\");\n    returner.filename = urlParts[4];\n    returner.fileUrl = returner.path + (urlParts[4] || \"\");\n    returner.url = returner.fileUrl + (urlParts[5] || \"\");\n    return returner;\n};\n\nmodule.exports = abstractFileManager;\n\n},{}],18:[function(require,module,exports){\nvar functionRegistry = require(\"../functions/function-registry\"),\n    LessError = require('../less-error');\n\nvar AbstractPluginLoader = function() {\n};\n\nfunction error(msg, type) {\n    throw new LessError(\n        {\n            type: type || 'Syntax',\n            message: msg\n        }\n    );\n}\nAbstractPluginLoader.prototype.evalPlugin = function(contents, context, imports, pluginOptions, fileInfo) {\n\n    var loader,\n        registry,\n        pluginObj,\n        localModule,\n        pluginManager,\n        filename;\n\n    pluginManager = context.pluginManager;\n\n    if (fileInfo) {\n        if (typeof fileInfo === \"string\") {\n            filename = fileInfo;\n        }\n        else {\n            filename = fileInfo.filename;\n        }\n    }\n    var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\n\n    if (filename) {\n        pluginObj = pluginManager.get(filename);\n\n        if (pluginObj) {\n            this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            try {\n                if (pluginObj.use) {\n                    pluginObj.use.call(this.context, pluginObj);\n                }\n            }\n            catch (e) {\n                e.message = 'Error during @plugin call';\n                return new this.less.LessError(e, imports, filename);\n            }\n            return pluginObj;\n        }\n    }\n    localModule = {\n        exports: {},\n        pluginManager: pluginManager,\n        fileInfo: fileInfo\n    };\n    registry = functionRegistry.create();\n\n    var registerPlugin = function(obj) {\n        pluginObj = obj;\n    };\n\n    try {\n        loader = new Function(\"module\", \"require\", \"registerPlugin\", \"functions\", \"tree\", \"less\", \"fileInfo\", contents);\n        loader(localModule, this.require, registerPlugin, registry, this.less.tree, this.less, fileInfo);\n    } catch (e) {\n        return new this.less.LessError(e, imports, filename);\n    }\n\n    if (!pluginObj) {\n        pluginObj = localModule.exports;\n    }\n    pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n\n    if (pluginObj) {\n        // Run on first load\n        pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n        pluginObj.functions = registry.getLocalFunctions();\n        pluginObj.imports = imports;\n        pluginObj.filename = filename;\n\n        this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n\n        // Run every @plugin call\n        try {\n            if (pluginObj.use) {\n                pluginObj.use.call(this.context, pluginObj);\n            }\n        }\n        catch (e) {\n            e.message = 'Error during @plugin call';\n            return new this.less.LessError(e, imports, filename);\n        }\n\n    }\n    else {\n        return new this.less.LessError({ message: \"Not a valid plugin\" });\n    }\n\n    return pluginObj;\n\n};\n\nAbstractPluginLoader.prototype.trySetOptions = function(plugin, filename, name, options) {\n    if (options) {\n        if (!plugin.setOptions) {\n            error(\"Options have been provided but the plugin \" + name + \" does not support any options.\");\n            return null;\n        }\n        try {\n            plugin.setOptions(options);\n        }\n        catch (e) {\n            error(\"Error setting options on plugin \" + name + '\\n' + e.message);\n            return null;\n        }\n    }\n};\n\nAbstractPluginLoader.prototype.validatePlugin = function(plugin, filename, name) {\n    if (plugin) {\n        // support plugins being a function\n        // so that the plugin can be more usable programmatically\n        if (typeof plugin === \"function\") {\n            plugin = new plugin();\n        }\n\n        if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                error(\"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion));\n                return null;\n            }\n        }\n        return plugin;\n    }\n    return null;\n};\n\nAbstractPluginLoader.prototype.compareVersion = function(aVersion, bVersion) {\n    if (typeof aVersion === \"string\") {\n        aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n        aVersion.shift();\n    }\n    for (var i = 0; i < aVersion.length; i++) {\n        if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n        }\n    }\n    return 0;\n};\nAbstractPluginLoader.prototype.versionToString = function(version) {\n    var versionString = \"\";\n    for (var i = 0; i < version.length; i++) {\n        versionString += (versionString ? \".\" : \"\") + version[i];\n    }\n    return versionString;\n};\nAbstractPluginLoader.prototype.printUsage = function(plugins) {\n    for (var i = 0; i < plugins.length; i++) {\n        var plugin = plugins[i];\n        if (plugin.printUsage) {\n            plugin.printUsage();\n        }\n    }\n};\n\nmodule.exports = AbstractPluginLoader;\n\n\n},{\"../functions/function-registry\":26,\"../less-error\":36}],19:[function(require,module,exports){\n/**\n * @todo Document why this abstraction exists, and the relationship between\n *       environment, file managers, and plugin manager\n */\n\nvar logger = require(\"../logger\");\nvar environment = function(externalEnvironment, fileManagers) {\n    this.fileManagers = fileManagers || [];\n    externalEnvironment = externalEnvironment || {};\n\n    var optionalFunctions = [\"encodeBase64\", \"mimeLookup\", \"charsetLookup\", \"getSourceMapGenerator\"],\n        requiredFunctions = [],\n        functions = requiredFunctions.concat(optionalFunctions);\n\n    for (var i = 0; i < functions.length; i++) {\n        var propName = functions[i],\n            environmentFunc = externalEnvironment[propName];\n        if (environmentFunc) {\n            this[propName] = environmentFunc.bind(externalEnvironment);\n        } else if (i < requiredFunctions.length) {\n            this.warn(\"missing required function in environment - \" + propName);\n        }\n    }\n};\n\nenvironment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n\n    if (!filename) {\n        logger.warn(\"getFileManager called with no filename.. Please report this issue. continuing.\");\n    }\n    if (currentDirectory == null) {\n        logger.warn(\"getFileManager called with null directory.. Please report this issue. continuing.\");\n    }\n\n    var fileManagers = this.fileManagers;\n    if (options.pluginManager) {\n        fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n    }\n    for (var i = fileManagers.length - 1; i >= 0 ; i--) {\n        var fileManager = fileManagers[i];\n        if (fileManager[isSync ? \"supportsSync\" : \"supports\"](filename, currentDirectory, options, environment)) {\n            return fileManager;\n        }\n    }\n    return null;\n};\n\nenvironment.prototype.addFileManager = function (fileManager) {\n    this.fileManagers.push(fileManager);\n};\n\nenvironment.prototype.clearFileManagers = function () {\n    this.fileManagers = [];\n};\n\nmodule.exports = environment;\n\n},{\"../logger\":37}],20:[function(require,module,exports){\n\nvar functionRegistry = require(\"./function-registry\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    Keyword = require(\"../tree/keyword\");\n\nfunctionRegistry.addMultiple({\n    boolean: function(condition) {\n        return condition ? Keyword.True : Keyword.False;\n    },\n\n    'if': function(condition, trueValue, falseValue) {\n        return condition ? trueValue\n            : (falseValue || new Anonymous);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/keyword\":68,\"./function-registry\":26}],21:[function(require,module,exports){\nvar Color = require(\"../tree/color\"),\n    functionRegistry = require(\"./function-registry\");\n\n// Color Blending\n// ref: http://www.w3.org/TR/compositing-1\n\nfunction colorBlend(mode, color1, color2) {\n    var ab = color1.alpha, cb, // backdrop\n        as = color2.alpha, cs, // source\n        ar, cr, r = [];        // result\n\n    ar = as + ab * (1 - as);\n    for (var i = 0; i < 3; i++) {\n        cb = color1.rgb[i] / 255;\n        cs = color2.rgb[i] / 255;\n        cr = mode(cb, cs);\n        if (ar) {\n            cr = (as * cs + ab * (cb -\n                  as * (cb + cs - cr))) / ar;\n        }\n        r[i] = cr * 255;\n    }\n\n    return new Color(r, ar);\n}\n\nvar colorBlendModeFunctions = {\n    multiply: function(cb, cs) {\n        return cb * cs;\n    },\n    screen: function(cb, cs) {\n        return cb + cs - cb * cs;\n    },\n    overlay: function(cb, cs) {\n        cb *= 2;\n        return (cb <= 1) ?\n            colorBlendModeFunctions.multiply(cb, cs) :\n            colorBlendModeFunctions.screen(cb - 1, cs);\n    },\n    softlight: function(cb, cs) {\n        var d = 1, e = cb;\n        if (cs > 0.5) {\n            e = 1;\n            d = (cb > 0.25) ? Math.sqrt(cb)\n                : ((16 * cb - 12) * cb + 4) * cb;\n        }\n        return cb - (1 - 2 * cs) * e * (d - cb);\n    },\n    hardlight: function(cb, cs) {\n        return colorBlendModeFunctions.overlay(cs, cb);\n    },\n    difference: function(cb, cs) {\n        return Math.abs(cb - cs);\n    },\n    exclusion: function(cb, cs) {\n        return cb + cs - 2 * cb * cs;\n    },\n\n    // non-w3c functions:\n    average: function(cb, cs) {\n        return (cb + cs) / 2;\n    },\n    negation: function(cb, cs) {\n        return 1 - Math.abs(cb + cs - 1);\n    }\n};\n\nfor (var f in colorBlendModeFunctions) {\n    if (colorBlendModeFunctions.hasOwnProperty(f)) {\n        colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\n    }\n}\n\nfunctionRegistry.addMultiple(colorBlend);\n\n},{\"../tree/color\":53,\"./function-registry\":26}],22:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\"),\n    Color = require(\"../tree/color\"),\n    Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    functionRegistry = require(\"./function-registry\"),\n    colorFunctions;\n\nfunction clamp(val) {\n    return Math.min(1, Math.max(0, val));\n}\nfunction hsla(color) {\n    return colorFunctions.hsla(color.h, color.s, color.l, color.a);\n}\nfunction number(n) {\n    if (n instanceof Dimension) {\n        return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n    } else if (typeof n === 'number') {\n        return n;\n    } else {\n        throw {\n            type: \"Argument\",\n            message: \"color functions take numbers as parameters\"\n        };\n    }\n}\nfunction scaled(n, size) {\n    if (n instanceof Dimension && n.unit.is('%')) {\n        return parseFloat(n.value * size / 100);\n    } else {\n        return number(n);\n    }\n}\ncolorFunctions = {\n    rgb: function (r, g, b) {\n        return colorFunctions.rgba(r, g, b, 1.0);\n    },\n    rgba: function (r, g, b, a) {\n        var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\n        a = number(a);\n        return new Color(rgb, a);\n    },\n    hsl: function (h, s, l) {\n        return colorFunctions.hsla(h, s, l, 1.0);\n    },\n    hsla: function (h, s, l, a) {\n\n        var m1, m2;\n\n        function hue(h) {\n            h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\n            if (h * 6 < 1) {\n                return m1 + (m2 - m1) * h * 6;\n            }\n            else if (h * 2 < 1) {\n                return m2;\n            }\n            else if (h * 3 < 2) {\n                return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n            }\n            else {\n                return m1;\n            }\n        }\n\n        h = (number(h) % 360) / 360;\n        s = clamp(number(s)); l = clamp(number(l)); a = clamp(number(a));\n\n        m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        m1 = l * 2 - m2;\n\n        return colorFunctions.rgba(hue(h + 1 / 3) * 255,\n            hue(h)       * 255,\n            hue(h - 1 / 3) * 255,\n            a);\n    },\n\n    hsv: function(h, s, v) {\n        return colorFunctions.hsva(h, s, v, 1.0);\n    },\n\n    hsva: function(h, s, v, a) {\n        h = ((number(h) % 360) / 360) * 360;\n        s = number(s); v = number(v); a = number(a);\n\n        var i, f;\n        i = Math.floor((h / 60) % 6);\n        f = (h / 60) - i;\n\n        var vs = [v,\n            v * (1 - s),\n            v * (1 - f * s),\n            v * (1 - (1 - f) * s)];\n        var perm = [[0, 3, 1],\n            [2, 0, 1],\n            [1, 0, 3],\n            [1, 2, 0],\n            [3, 1, 0],\n            [0, 1, 2]];\n\n        return colorFunctions.rgba(vs[perm[i][0]] * 255,\n            vs[perm[i][1]] * 255,\n            vs[perm[i][2]] * 255,\n            a);\n    },\n\n    hue: function (color) {\n        return new Dimension(color.toHSL().h);\n    },\n    saturation: function (color) {\n        return new Dimension(color.toHSL().s * 100, '%');\n    },\n    lightness: function (color) {\n        return new Dimension(color.toHSL().l * 100, '%');\n    },\n    hsvhue: function(color) {\n        return new Dimension(color.toHSV().h);\n    },\n    hsvsaturation: function (color) {\n        return new Dimension(color.toHSV().s * 100, '%');\n    },\n    hsvvalue: function (color) {\n        return new Dimension(color.toHSV().v * 100, '%');\n    },\n    red: function (color) {\n        return new Dimension(color.rgb[0]);\n    },\n    green: function (color) {\n        return new Dimension(color.rgb[1]);\n    },\n    blue: function (color) {\n        return new Dimension(color.rgb[2]);\n    },\n    alpha: function (color) {\n        return new Dimension(color.toHSL().a);\n    },\n    luma: function (color) {\n        return new Dimension(color.luma() * color.alpha * 100, '%');\n    },\n    luminance: function (color) {\n        var luminance =\n            (0.2126 * color.rgb[0] / 255) +\n                (0.7152 * color.rgb[1] / 255) +\n                (0.0722 * color.rgb[2] / 255);\n\n        return new Dimension(luminance * color.alpha * 100, '%');\n    },\n    saturate: function (color, amount, method) {\n        // filter: saturate(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.s +=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s += amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(hsl);\n    },\n    desaturate: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.s -=  hsl.s * amount.value / 100;\n        }\n        else {\n            hsl.s -= amount.value / 100;\n        }\n        hsl.s = clamp(hsl.s);\n        return hsla(hsl);\n    },\n    lighten: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.l +=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l += amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(hsl);\n    },\n    darken: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.l -=  hsl.l * amount.value / 100;\n        }\n        else {\n            hsl.l -= amount.value / 100;\n        }\n        hsl.l = clamp(hsl.l);\n        return hsla(hsl);\n    },\n    fadein: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.a +=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a += amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    fadeout: function (color, amount, method) {\n        var hsl = color.toHSL();\n\n        if (typeof method !== \"undefined\" && method.value === \"relative\") {\n            hsl.a -=  hsl.a * amount.value / 100;\n        }\n        else {\n            hsl.a -= amount.value / 100;\n        }\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    fade: function (color, amount) {\n        var hsl = color.toHSL();\n\n        hsl.a = amount.value / 100;\n        hsl.a = clamp(hsl.a);\n        return hsla(hsl);\n    },\n    spin: function (color, amount) {\n        var hsl = color.toHSL();\n        var hue = (hsl.h + amount.value) % 360;\n\n        hsl.h = hue < 0 ? 360 + hue : hue;\n\n        return hsla(hsl);\n    },\n    //\n    // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\n    // http://sass-lang.com\n    //\n    mix: function (color1, color2, weight) {\n        if (!color1.toHSL || !color2.toHSL) {\n            console.log(color2.type);\n            console.dir(color2);\n        }\n        if (!weight) {\n            weight = new Dimension(50);\n        }\n        var p = weight.value / 100.0;\n        var w = p * 2 - 1;\n        var a = color1.toHSL().a - color2.toHSL().a;\n\n        var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        var w2 = 1 - w1;\n\n        var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\n            color1.rgb[1] * w1 + color2.rgb[1] * w2,\n            color1.rgb[2] * w1 + color2.rgb[2] * w2];\n\n        var alpha = color1.alpha * p + color2.alpha * (1 - p);\n\n        return new Color(rgb, alpha);\n    },\n    greyscale: function (color) {\n        return colorFunctions.desaturate(color, new Dimension(100));\n    },\n    contrast: function (color, dark, light, threshold) {\n        // filter: contrast(3.2);\n        // should be kept as is, so check for color\n        if (!color.rgb) {\n            return null;\n        }\n        if (typeof light === 'undefined') {\n            light = colorFunctions.rgba(255, 255, 255, 1.0);\n        }\n        if (typeof dark === 'undefined') {\n            dark = colorFunctions.rgba(0, 0, 0, 1.0);\n        }\n        // Figure out which is actually light and dark:\n        if (dark.luma() > light.luma()) {\n            var t = light;\n            light = dark;\n            dark = t;\n        }\n        if (typeof threshold === 'undefined') {\n            threshold = 0.43;\n        } else {\n            threshold = number(threshold);\n        }\n        if (color.luma() < threshold) {\n            return light;\n        } else {\n            return dark;\n        }\n    },\n    // Changes made in 2.7.0 - Reverted in 3.0.0\n    // contrast: function (color, color1, color2, threshold) {\n    //     // Return which of `color1` and `color2` has the greatest contrast with `color`\n    //     // according to the standard WCAG contrast ratio calculation.\n    //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    //     // The threshold param is no longer used, in line with SASS.\n    //     // filter: contrast(3.2);\n    //     // should be kept as is, so check for color\n    //     if (!color.rgb) {\n    //         return null;\n    //     }\n    //     if (typeof color1 === 'undefined') {\n    //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\n    //     }\n    //     if (typeof color2 === 'undefined') {\n    //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\n    //     }\n    //     var contrast1, contrast2;\n    //     var luma = color.luma();\n    //     var luma1 = color1.luma();\n    //     var luma2 = color2.luma();\n    //     // Calculate contrast ratios for each color\n    //     if (luma > luma1) {\n    //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\n    //     } else {\n    //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (luma > luma2) {\n    //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\n    //     } else {\n    //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\n    //     }\n    //     if (contrast1 > contrast2) {\n    //         return color1;\n    //     } else {\n    //         return color2;\n    //     }\n    // },\n    argb: function (color) {\n        return new Anonymous(color.toARGB());\n    },\n    color: function(c) {\n        if ((c instanceof Quoted) &&\n            (/^#([a-f0-9]{6}|[a-f0-9]{3})$/i.test(c.value))) {\n            return new Color(c.value.slice(1));\n        }\n        if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\n            c.value = undefined;\n            return c;\n        }\n        throw {\n            type:    \"Argument\",\n            message: \"argument must be a color keyword or 3/6 digit hex e.g. #FFF\"\n        };\n    },\n    tint: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n    },\n    shade: function(color, amount) {\n        return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n    }\n};\nfunctionRegistry.addMultiple(colorFunctions);\n\n},{\"../tree/anonymous\":48,\"../tree/color\":53,\"../tree/dimension\":60,\"../tree/quoted\":77,\"./function-registry\":26}],23:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        utils = require('../utils'),\n        functionRegistry = require(\"./function-registry\"),\n        fallback = function(functionThis, node) {\n            return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n        },\n        logger = require('../logger');\n\n    functionRegistry.add(\"data-uri\", function(mimetypeNode, filePathNode) {\n\n        if (!filePathNode) {\n            filePathNode = mimetypeNode;\n            mimetypeNode = null;\n        }\n\n        var mimetype = mimetypeNode && mimetypeNode.value;\n        var filePath = filePathNode.value;\n        var currentFileInfo = this.currentFileInfo;\n        var currentDirectory = currentFileInfo.relativeUrls ?\n            currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n\n        var fragmentStart = filePath.indexOf('#');\n        var fragment = '';\n        if (fragmentStart !== -1) {\n            fragment = filePath.slice(fragmentStart);\n            filePath = filePath.slice(0, fragmentStart);\n        }\n        var context = utils.clone(this.context);\n        context.rawBuffer = true;\n\n        var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n\n        if (!fileManager) {\n            return fallback(this, filePathNode);\n        }\n\n        var useBase64 = false;\n\n        // detect the mimetype if not given\n        if (!mimetypeNode) {\n\n            mimetype = environment.mimeLookup(filePath);\n\n            if (mimetype === \"image/svg+xml\") {\n                useBase64 = false;\n            } else {\n                // use base 64 unless it's an ASCII or UTF-8 format\n                var charset = environment.charsetLookup(mimetype);\n                useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\n            }\n            if (useBase64) { mimetype += ';base64'; }\n        }\n        else {\n            useBase64 = /;base64$/.test(mimetype);\n        }\n\n        var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n        if (!fileSync.contents) {\n            logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\n            return fallback(this, filePathNode || mimetypeNode);\n        }\n        var buf = fileSync.contents;\n        if (useBase64 && !environment.encodeBase64) {\n            return fallback(this, filePathNode);\n        }\n\n        buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n\n        var uri = \"data:\" + mimetype + ',' + buf + fragment;\n\n        // IE8 cannot handle a data-uri larger than 32,768 characters. If this is exceeded\n        // and the --ieCompat flag is enabled, return a normal url() instead.\n        var DATA_URI_MAX = 32768;\n        if (uri.length >= DATA_URI_MAX) {\n\n            if (this.context.ieCompat !== false) {\n                logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because its size (\" + uri.length +\n                    \" characters) exceeds IE8-safe \" + DATA_URI_MAX + \" characters!\");\n\n                return fallback(this, filePathNode || mimetypeNode);\n            }\n        }\n\n        return new URL(new Quoted('\"' + uri + '\"', uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n\n},{\"../logger\":37,\"../tree/quoted\":77,\"../tree/url\":82,\"../utils\":86,\"./function-registry\":26}],24:[function(require,module,exports){\nvar Keyword = require(\"../tree/keyword\"),\n    functionRegistry = require(\"./function-registry\");\n\nvar defaultFunc = {\n    eval: function () {\n        var v = this.value_, e = this.error_;\n        if (e) {\n            throw e;\n        }\n        if (v != null) {\n            return v ? Keyword.True : Keyword.False;\n        }\n    },\n    value: function (v) {\n        this.value_ = v;\n    },\n    error: function (e) {\n        this.error_ = e;\n    },\n    reset: function () {\n        this.value_ = this.error_ = null;\n    }\n};\n\nfunctionRegistry.add(\"default\", defaultFunc.eval.bind(defaultFunc));\n\nmodule.exports = defaultFunc;\n\n},{\"../tree/keyword\":68,\"./function-registry\":26}],25:[function(require,module,exports){\nvar Expression = require(\"../tree/expression\");\n\nvar functionCaller = function(name, context, index, currentFileInfo) {\n    this.name = name.toLowerCase();\n    this.index = index;\n    this.context = context;\n    this.currentFileInfo = currentFileInfo;\n\n    this.func = context.frames[0].functionRegistry.get(this.name);\n};\nfunctionCaller.prototype.isValid = function() {\n    return Boolean(this.func);\n};\n\nfunctionCaller.prototype.call = function(args) {\n    // This code is terrible and should be replaced as per this issue...\n    // https://github.com/less/less.js/issues/2477\n    if (Array.isArray(args)) {\n        args = args.filter(function (item) {\n            if (item.type === \"Comment\") {\n                return false;\n            }\n            return true;\n        })\n        .map(function(item) {\n            if (item.type === \"Expression\") {\n                var subNodes = item.value.filter(function (item) {\n                    if (item.type === \"Comment\") {\n                        return false;\n                    }\n                    return true;\n                });\n                if (subNodes.length === 1) {\n                    return subNodes[0];\n                } else {\n                    return new Expression(subNodes);\n                }\n            }\n            return item;\n        });\n    }\n\n    return this.func.apply(this, args);\n};\n\nmodule.exports = functionCaller;\n\n},{\"../tree/expression\":62}],26:[function(require,module,exports){\nfunction makeRegistry( base ) {\n    return {\n        _data: {},\n        add: function(name, func) {\n            // precautionary case conversion, as later querying of\n            // the registry by function-caller uses lower case as well.\n            name = name.toLowerCase();\n\n            if (this._data.hasOwnProperty(name)) {\n                // TODO warn\n            }\n            this._data[name] = func;\n        },\n        addMultiple: function(functions) {\n            Object.keys(functions).forEach(\n                function(name) {\n                    this.add(name, functions[name]);\n                }.bind(this));\n        },\n        get: function(name) {\n            return this._data[name] || ( base && base.get( name ));\n        },\n        getLocalFunctions: function() {\n            return this._data;\n        },\n        inherit: function() {\n            return makeRegistry( this );\n        },\n        create: function(base) {\n            return makeRegistry(base);\n        }\n    };\n}\n\nmodule.exports = makeRegistry( null );\n},{}],27:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var functions = {\n        functionRegistry: require(\"./function-registry\"),\n        functionCaller: require(\"./function-caller\")\n    };\n\n    // register functions\n    require(\"./boolean\");\n    require(\"./default\");\n    require(\"./color\");\n    require(\"./color-blending\");\n    require(\"./data-uri\")(environment);\n    require(\"./math\");\n    require(\"./number\");\n    require(\"./string\");\n    require(\"./svg\")(environment);\n    require(\"./types\");\n\n    return functions;\n};\n\n},{\"./boolean\":20,\"./color\":22,\"./color-blending\":21,\"./data-uri\":23,\"./default\":24,\"./function-caller\":25,\"./function-registry\":26,\"./math\":29,\"./number\":30,\"./string\":31,\"./svg\":32,\"./types\":33}],28:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\");\n\nvar MathHelper = function() {\n};\nMathHelper._math = function (fn, unit, n) {\n    if (!(n instanceof Dimension)) {\n        throw { type: \"Argument\", message: \"argument must be a number\" };\n    }\n    if (unit == null) {\n        unit = n.unit;\n    } else {\n        n = n.unify();\n    }\n    return new Dimension(fn(parseFloat(n.value)), unit);\n};\nmodule.exports = MathHelper;\n},{\"../tree/dimension\":60}],29:[function(require,module,exports){\nvar functionRegistry = require(\"./function-registry\"),\n    mathHelper = require(\"./math-helper.js\");\n\nvar mathFunctions = {\n    // name,  unit\n    ceil:  null,\n    floor: null,\n    sqrt:  null,\n    abs:   null,\n    tan:   \"\",\n    sin:   \"\",\n    cos:   \"\",\n    atan:  \"rad\",\n    asin:  \"rad\",\n    acos:  \"rad\"\n};\n\nfor (var f in mathFunctions) {\n    if (mathFunctions.hasOwnProperty(f)) {\n        mathFunctions[f] = mathHelper._math.bind(null, Math[f], mathFunctions[f]);\n    }\n}\n\nmathFunctions.round = function (n, f) {\n    var fraction = typeof f === \"undefined\" ? 0 : f.value;\n    return mathHelper._math(function(num) { return num.toFixed(fraction); }, null, n);\n};\n\nfunctionRegistry.addMultiple(mathFunctions);\n\n},{\"./function-registry\":26,\"./math-helper.js\":28}],30:[function(require,module,exports){\nvar Dimension = require(\"../tree/dimension\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    functionRegistry = require(\"./function-registry\"),\n    mathHelper = require(\"./math-helper.js\");\n\nvar minMax = function (isMin, args) {\n    args = Array.prototype.slice.call(args);\n    switch (args.length) {\n        case 0: throw { type: \"Argument\", message: \"one or more arguments required\" };\n    }\n    var i, j, current, currentUnified, referenceUnified, unit, unitStatic, unitClone,\n        order  = [], // elems only contains original argument values.\n        values = {}; // key is the unit.toString() for unified Dimension values,\n    // value is the index into the order array.\n    for (i = 0; i < args.length; i++) {\n        current = args[i];\n        if (!(current instanceof Dimension)) {\n            if (Array.isArray(args[i].value)) {\n                Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\n            }\n            continue;\n        }\n        currentUnified = current.unit.toString() === \"\" && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\n        unit = currentUnified.unit.toString() === \"\" && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\n        unitStatic = unit !== \"\" && unitStatic === undefined || unit !== \"\" && order[0].unify().unit.toString() === \"\" ? unit : unitStatic;\n        unitClone = unit !== \"\" && unitClone === undefined ? current.unit.toString() : unitClone;\n        j = values[\"\"] !== undefined && unit !== \"\" && unit === unitStatic ? values[\"\"] : values[unit];\n        if (j === undefined) {\n            if (unitStatic !== undefined && unit !== unitStatic) {\n                throw { type: \"Argument\", message: \"incompatible types\" };\n            }\n            values[unit] = order.length;\n            order.push(current);\n            continue;\n        }\n        referenceUnified = order[j].unit.toString() === \"\" && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\n        if ( isMin && currentUnified.value < referenceUnified.value ||\n            !isMin && currentUnified.value > referenceUnified.value) {\n            order[j] = current;\n        }\n    }\n    if (order.length == 1) {\n        return order[0];\n    }\n    args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? \",\" : \", \");\n    return new Anonymous((isMin ? \"min\" : \"max\") + \"(\" + args + \")\");\n};\nfunctionRegistry.addMultiple({\n    min: function () {\n        return minMax(true, arguments);\n    },\n    max: function () {\n        return minMax(false, arguments);\n    },\n    convert: function (val, unit) {\n        return val.convertTo(unit.value);\n    },\n    pi: function () {\n        return new Dimension(Math.PI);\n    },\n    mod: function(a, b) {\n        return new Dimension(a.value % b.value, a.unit);\n    },\n    pow: function(x, y) {\n        if (typeof x === \"number\" && typeof y === \"number\") {\n            x = new Dimension(x);\n            y = new Dimension(y);\n        } else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\n            throw { type: \"Argument\", message: \"arguments must be numbers\" };\n        }\n\n        return new Dimension(Math.pow(x.value, y.value), x.unit);\n    },\n    percentage: function (n) {\n        var result = mathHelper._math(function(num) {\n            return num * 100;\n        }, '%', n);\n\n        return result;\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/dimension\":60,\"./function-registry\":26,\"./math-helper.js\":28}],31:[function(require,module,exports){\nvar Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    JavaScript = require(\"../tree/javascript\"),\n    functionRegistry = require(\"./function-registry\");\n\nfunctionRegistry.addMultiple({\n    e: function (str) {\n        return new Anonymous(str instanceof JavaScript ? str.evaluated : str.value);\n    },\n    escape: function (str) {\n        return new Anonymous(\n            encodeURI(str.value).replace(/=/g, \"%3D\").replace(/:/g, \"%3A\").replace(/#/g, \"%23\").replace(/;/g, \"%3B\")\n                .replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\"));\n    },\n    replace: function (string, pattern, replacement, flags) {\n        var result = string.value;\n        replacement = (replacement.type === \"Quoted\") ?\n            replacement.value : replacement.toCSS();\n        result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\n        return new Quoted(string.quote || '', result, string.escaped);\n    },\n    '%': function (string /* arg, arg, ... */) {\n        var args = Array.prototype.slice.call(arguments, 1),\n            result = string.value;\n\n        for (var i = 0; i < args.length; i++) {\n            /* jshint loopfunc:true */\n            result = result.replace(/%[sda]/i, function(token) {\n                var value = ((args[i].type === \"Quoted\") &&\n                    token.match(/s/i)) ? args[i].value : args[i].toCSS();\n                return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\n            });\n        }\n        result = result.replace(/%%/g, '%');\n        return new Quoted(string.quote || '', result, string.escaped);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/javascript\":66,\"../tree/quoted\":77,\"./function-registry\":26}],32:[function(require,module,exports){\nmodule.exports = function(environment) {\n    var Dimension = require(\"../tree/dimension\"),\n        Color = require(\"../tree/color\"),\n        Expression = require(\"../tree/expression\"),\n        Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        functionRegistry = require(\"./function-registry\");\n\n    functionRegistry.add(\"svg-gradient\", function(direction) {\n\n        var stops,\n            gradientDirectionSvg,\n            gradientType = \"linear\",\n            rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"',\n            renderEnv = {compress: false},\n            returner,\n            directionValue = direction.toCSS(renderEnv),\n            i, color, position, positionValue, alpha;\n\n        function throwArgumentDescriptor() {\n            throw { type: \"Argument\",\n                message: \"svg-gradient expects direction, start_color [start_position], [color position,]...,\" +\n                            \" end_color [end_position] or direction, color list\" };\n        }\n\n        if (arguments.length == 2) {\n            if (arguments[1].value.length < 2) {\n                throwArgumentDescriptor();\n            }\n            stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n            throwArgumentDescriptor();\n        } else {\n            stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n            case \"to bottom\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case \"to right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"to bottom right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case \"to top right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"ellipse\":\n            case \"ellipse at center\":\n                gradientType = \"radial\";\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw { type: \"Argument\", message: \"svg-gradient direction must be 'to bottom', 'to right',\" +\n                    \" 'to bottom right', 'to top right' or 'ellipse at center'\" };\n        }\n        returner = '<?xml version=\"1.0\" ?>' +\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">' +\n            '<' + gradientType + 'Gradient id=\"gradient\" gradientUnits=\"userSpaceOnUse\" ' + gradientDirectionSvg + '>';\n\n        for (i = 0; i < stops.length; i += 1) {\n            if (stops[i] instanceof Expression) {\n                color = stops[i].value[0];\n                position = stops[i].value[1];\n            } else {\n                color = stops[i];\n                position = undefined;\n            }\n\n            if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                throwArgumentDescriptor();\n            }\n            positionValue = position ? position.toCSS(renderEnv) : i === 0 ? \"0%\" : \"100%\";\n            alpha = color.alpha;\n            returner += '<stop offset=\"' + positionValue + '\" stop-color=\"' + color.toRGB() + '\"' + (alpha < 1 ? ' stop-opacity=\"' + alpha + '\"' : '') + '/>';\n        }\n        returner += '</' + gradientType + 'Gradient>' +\n            '<rect ' + rectangleDimension + ' fill=\"url(#gradient)\" /></svg>';\n\n        returner = encodeURIComponent(returner);\n\n        returner = \"data:image/svg+xml,\" + returner;\n        return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n\n},{\"../tree/color\":53,\"../tree/dimension\":60,\"../tree/expression\":62,\"../tree/quoted\":77,\"../tree/url\":82,\"./function-registry\":26}],33:[function(require,module,exports){\nvar Keyword = require(\"../tree/keyword\"),\n    DetachedRuleset = require(\"../tree/detached-ruleset\"),\n    Dimension = require(\"../tree/dimension\"),\n    Color = require(\"../tree/color\"),\n    Quoted = require(\"../tree/quoted\"),\n    Anonymous = require(\"../tree/anonymous\"),\n    URL = require(\"../tree/url\"),\n    Operation = require(\"../tree/operation\"),\n    functionRegistry = require(\"./function-registry\");\n\nvar isa = function (n, Type) {\n        return (n instanceof Type) ? Keyword.True : Keyword.False;\n    },\n    isunit = function (n, unit) {\n        if (unit === undefined) {\n            throw { type: \"Argument\", message: \"missing the required second argument to isunit.\" };\n        }\n        unit = typeof unit.value === \"string\" ? unit.value : unit;\n        if (typeof unit !== \"string\") {\n            throw { type: \"Argument\", message: \"Second argument to isunit should be a unit or a string.\" };\n        }\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\n    },\n    getItemsFromNode = function(node) {\n        // handle non-array values as an array of length 1\n        // return 'undefined' if index is invalid\n        var items = Array.isArray(node.value) ?\n            node.value : Array(node);\n\n        return items;\n    };\nfunctionRegistry.addMultiple({\n    isruleset: function (n) {\n        return isa(n, DetachedRuleset);\n    },\n    iscolor: function (n) {\n        return isa(n, Color);\n    },\n    isnumber: function (n) {\n        return isa(n, Dimension);\n    },\n    isstring: function (n) {\n        return isa(n, Quoted);\n    },\n    iskeyword: function (n) {\n        return isa(n, Keyword);\n    },\n    isurl: function (n) {\n        return isa(n, URL);\n    },\n    ispixel: function (n) {\n        return isunit(n, 'px');\n    },\n    ispercentage: function (n) {\n        return isunit(n, '%');\n    },\n    isem: function (n) {\n        return isunit(n, 'em');\n    },\n    isunit: isunit,\n    unit: function (val, unit) {\n        if (!(val instanceof Dimension)) {\n            throw { type: \"Argument\",\n                message: \"the first argument to unit must be a number\" +\n                    (val instanceof Operation ? \". Have you forgotten parenthesis?\" : \"\") };\n        }\n        if (unit) {\n            if (unit instanceof Keyword) {\n                unit = unit.value;\n            } else {\n                unit = unit.toCSS();\n            }\n        } else {\n            unit = \"\";\n        }\n        return new Dimension(val.value, unit);\n    },\n    \"get-unit\": function (n) {\n        return new Anonymous(n.unit);\n    },\n    extract: function(values, index) {\n        index = index.value - 1; // (1-based index)\n\n        return getItemsFromNode(values)[index];\n    },\n    length: function(values) {\n        return new Dimension(getItemsFromNode(values).length);\n    }\n});\n\n},{\"../tree/anonymous\":48,\"../tree/color\":53,\"../tree/detached-ruleset\":59,\"../tree/dimension\":60,\"../tree/keyword\":68,\"../tree/operation\":74,\"../tree/quoted\":77,\"../tree/url\":82,\"./function-registry\":26}],34:[function(require,module,exports){\nvar contexts = require(\"./contexts\"),\n    Parser = require('./parser/parser'),\n    LessError = require('./less-error'),\n    utils = require('./utils'),\n    PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n\nmodule.exports = function(environment) {\n\n    // FileInfo = {\n    //  'relativeUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n\n    var ImportManager = function(less, context, rootFileInfo) {\n        this.less = less;\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || [];  // Search paths, when importing\n        this.contents = {};             // map - filename to contents of all the files\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context;\n        // Deprecated? Unused outside of here, could be useful.\n        this.queue = [];        // Files which haven't been imported yet\n        this.files = {};        // Holds the imported parse trees.\n    };\n    \n    /**\n     * Add an import to be imported\n     * @param path - the raw path\n     * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\n     * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n     * @param importOptions - import options\n     * @param callback - callback for when it is imported\n     */\n    ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\n        var importManager = this,\n            pluginLoader = this.context.pluginManager.Loader;\n\n        this.queue.push(path);\n\n        var fileParsedFunc = function (e, root, fullPath) {\n            importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n            var importedEqualsRoot = fullPath === importManager.rootFilename;\n            if (importOptions.optional && e) {\n                callback(null, {rules:[]}, false, null);\n            }\n            else {\n                // Inline imports aren't cached here.\n                // If we start to cache them, please make sure they won't conflict with non-inline imports of the\n                // same name as they used to do before this comment and the condition below have been added.\n                if (!importManager.files[fullPath] && !importOptions.inline) {\n                    importManager.files[fullPath] = { root: root, options: importOptions };\n                } \n                if (e && !importManager.error) { importManager.error = e; }\n                callback(e, root, importedEqualsRoot, fullPath);\n            }\n        };\n\n        var newFileInfo = {\n            relativeUrls: this.context.relativeUrls,\n            entryPath: currentFileInfo.entryPath,\n            rootpath: currentFileInfo.rootpath,\n            rootFilename: currentFileInfo.rootFilename\n        };\n\n        var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n        if (!fileManager) {\n            fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n            return;\n        }\n\n        var loadFileCallback = function(loadedFile) {\n            var plugin,\n                resolvedFilename = loadedFile.filename,\n                contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n\n            // Pass on an updated rootpath if path of imported file is relative and file\n            // is in a (sub|sup) directory\n            //\n            // Examples:\n            // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/module/nav/'\n            // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/../'\n            newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n            if (newFileInfo.relativeUrls) {\n                newFileInfo.rootpath = fileManager.join(\n                    (importManager.context.rootpath || \"\"),\n                    fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n                if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                    newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                }\n            }\n            newFileInfo.filename = resolvedFilename;\n\n            var newEnv = new contexts.Parse(importManager.context);\n\n            newEnv.processImports = false;\n            importManager.contents[resolvedFilename] = contents;\n\n            if (currentFileInfo.reference || importOptions.reference) {\n                newFileInfo.reference = true;\n            }\n\n            if (importOptions.isPlugin) {\n                plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\n                if (plugin instanceof LessError) {\n                    fileParsedFunc(plugin, null, resolvedFilename);\n                }\n                else {\n                    fileParsedFunc(null, plugin, resolvedFilename);\n                }\n            } else if (importOptions.inline) {\n                fileParsedFunc(null, contents, resolvedFilename);\n            } else {\n                \n                // import (multiple) parse trees apparently get altered and can't be cached.\n                // TODO: investigate why this is\n                if (importManager.files[resolvedFilename] \n                    && !importManager.files[resolvedFilename].options.multiple\n                    && !importOptions.multiple) {\n\n                    fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\n                }\n                else {\n                    new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                        fileParsedFunc(e, root, resolvedFilename);\n                    });\n                }\n            }\n        };\n        var promise, context = utils.clone(this.context);\n\n        if (tryAppendExtension) {\n            context.ext = importOptions.isPlugin ? \".js\" : \".less\";\n        }\n\n        if (importOptions.isPlugin) {\n            promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\n        }\n        else {\n            promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, \n                function(err, loadedFile) {\n                    if (err) {\n                        fileParsedFunc(err);\n                    } else {\n                        loadFileCallback(loadedFile);\n                    }\n                });\n        }\n        if (promise) {\n            promise.then(loadFileCallback, fileParsedFunc);\n        }\n\n    };\n    return ImportManager;\n};\n\n},{\"./contexts\":12,\"./less-error\":36,\"./parser/parser\":42,\"./utils\":86,\"promise\":undefined}],35:[function(require,module,exports){\nmodule.exports = function(environment, fileManagers) {\n    var SourceMapOutput, SourceMapBuilder, ParseTree, ImportManager, Environment;\n\n    var initial = {\n        version: [3, 0, 4],\n        data: require('./data'),\n        tree: require('./tree'),\n        Environment: (Environment = require(\"./environment/environment\")),\n        AbstractFileManager: require(\"./environment/abstract-file-manager\"),\n        AbstractPluginLoader: require(\"./environment/abstract-plugin-loader\"),\n        environment: (environment = new Environment(environment, fileManagers)),\n        visitors: require('./visitors'),\n        Parser: require('./parser/parser'),\n        functions: require('./functions')(environment),\n        contexts: require(\"./contexts\"),\n        SourceMapOutput: (SourceMapOutput = require('./source-map-output')(environment)),\n        SourceMapBuilder: (SourceMapBuilder = require('./source-map-builder')(SourceMapOutput, environment)),\n        ParseTree: (ParseTree = require('./parse-tree')(SourceMapBuilder)),\n        ImportManager: (ImportManager = require('./import-manager')(environment)),\n        render: require(\"./render\")(environment, ParseTree, ImportManager),\n        parse: require(\"./parse\")(environment, ParseTree, ImportManager),\n        LessError: require('./less-error'),\n        transformTree: require('./transform-tree'),\n        utils: require('./utils'),\n        PluginManager: require('./plugin-manager'),\n        logger: require('./logger')\n    };\n\n    // Create a public API\n\n    var ctor = function(t) {\n        return function() {\n            var obj = Object.create(t.prototype);\n            t.apply(obj, Array.prototype.slice.call(arguments, 0));\n            return obj;\n        };\n    };\n    var t, api = Object.create(initial);\n    for (var n in initial.tree) {\n        /* eslint guard-for-in: 0 */\n        t = initial.tree[n];\n        if (typeof t === \"function\") {\n            api[n.toLowerCase()] = ctor(t);\n        }\n        else {\n            api[n] = Object.create(null);\n            for (var o in t) {\n                /* eslint guard-for-in: 0 */\n                api[n][o.toLowerCase()] = ctor(t[o]);\n            }\n        }\n    }\n\n    return api;\n};\n\n},{\"./contexts\":12,\"./data\":14,\"./environment/abstract-file-manager\":17,\"./environment/abstract-plugin-loader\":18,\"./environment/environment\":19,\"./functions\":27,\"./import-manager\":34,\"./less-error\":36,\"./logger\":37,\"./parse\":39,\"./parse-tree\":38,\"./parser/parser\":42,\"./plugin-manager\":43,\"./render\":44,\"./source-map-builder\":45,\"./source-map-output\":46,\"./transform-tree\":47,\"./tree\":65,\"./utils\":86,\"./visitors\":90}],36:[function(require,module,exports){\nvar utils = require('./utils');\n/**\n * This is a centralized class of any error that could be thrown internally (mostly by the parser).\n * Besides standard .message it keeps some additional data like a path to the file where the error\n * occurred along with line and column numbers.\n *\n * @class\n * @extends Error\n * @type {module.LessError}\n *\n * @prop {string} type\n * @prop {string} filename\n * @prop {number} index\n * @prop {number} line\n * @prop {number} column\n * @prop {number} callLine\n * @prop {number} callExtract\n * @prop {string[]} extract\n *\n * @param {Object} e              - An error object to wrap around or just a descriptive object\n * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\n * @param {string} [currentFilename]\n */\nvar LessError = module.exports = function LessError(e, fileContentMap, currentFilename) {\n    Error.call(this);\n\n    var filename = e.filename || currentFilename;\n\n    this.message = e.message;\n    this.stack = e.stack;\n\n    if (fileContentMap && filename) {\n        var input = fileContentMap.contents[filename],\n            loc = utils.getLocation(e.index, input),\n            line = loc.line,\n            col  = loc.column,\n            callLine = e.call && utils.getLocation(e.call, input).line,\n            lines = input ? input.split('\\n') : '';\n\n        this.type = e.type || 'Syntax';\n        this.filename = filename;\n        this.index = e.index;\n        this.line = typeof line === 'number' ? line + 1 : null;\n        this.column = col;\n\n        if (!this.line && this.stack) {\n            var found = this.stack.match(/(<anonymous>|Function):(\\d+):(\\d+)/);\n\n            if (found) {\n                if (found[2]) {\n                    this.line = parseInt(found[2]) - 2;\n                }\n                if (found[3]) {\n                    this.column = parseInt(found[3]);\n                }\n            }\n        }\n\n        this.callLine = callLine + 1;\n        this.callExtract = lines[callLine];\n\n        this.extract = [\n            lines[this.line - 2],\n            lines[this.line - 1],\n            lines[this.line]\n        ];\n\n    }\n\n};\n\nif (typeof Object.create === 'undefined') {\n    var F = function () {};\n    F.prototype = Error.prototype;\n    LessError.prototype = new F();\n} else {\n    LessError.prototype = Object.create(Error.prototype);\n}\n\nLessError.prototype.constructor = LessError;\n\n/**\n * An overridden version of the default Object.prototype.toString\n * which uses additional information to create a helpful message.\n *\n * @param {Object} options\n * @returns {string}\n */\nLessError.prototype.toString = function(options) {\n    options = options || {};\n\n    var message = '';\n    var extract = this.extract || [];\n    var error = [];\n    var stylize = function (str) { return str; };\n    if (options.stylize) {\n        var type = typeof options.stylize;\n        if (type !== 'function') {\n            throw Error('options.stylize should be a function, got a ' + type + '!');\n        }\n        stylize = options.stylize;\n    }\n\n    if (this.line !== null) {\n        if (typeof extract[0] === 'string') {\n            error.push(stylize((this.line - 1) + ' ' + extract[0], 'grey'));\n        }\n\n        if (typeof extract[1] === 'string') {\n            var errorTxt = this.line + ' ';\n            if (extract[1]) {\n                errorTxt += extract[1].slice(0, this.column) +\n                    stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\n                        extract[1].slice(this.column + 1), 'red'), 'inverse');\n            }\n            error.push(errorTxt);\n        }\n\n        if (typeof extract[2] === 'string') {\n            error.push(stylize((this.line + 1) + ' ' + extract[2], 'grey'));\n        }\n        error = error.join('\\n') + stylize('', 'reset') + '\\n';\n    }\n\n    message += stylize(this.type + 'Error: ' + this.message, 'red');\n    if (this.filename) {\n        message += stylize(' in ', 'red') + this.filename;\n    }\n    if (this.line) {\n        message += stylize(' on line ' + this.line + ', column ' + (this.column + 1) + ':', 'grey');\n    }\n\n    message += '\\n' + error;\n\n    if (this.callLine) {\n        message += stylize('from ', 'red') + (this.filename || '') + '/n';\n        message += stylize(this.callLine, 'grey') + ' ' + this.callExtract + '/n';\n    }\n\n    return message;\n};\n\n},{\"./utils\":86}],37:[function(require,module,exports){\nmodule.exports = {\n    error: function(msg) {\n        this._fireEvent(\"error\", msg);\n    },\n    warn: function(msg) {\n        this._fireEvent(\"warn\", msg);\n    },\n    info: function(msg) {\n        this._fireEvent(\"info\", msg);\n    },\n    debug: function(msg) {\n        this._fireEvent(\"debug\", msg);\n    },\n    addListener: function(listener) {\n        this._listeners.push(listener);\n    },\n    removeListener: function(listener) {\n        for (var i = 0; i < this._listeners.length; i++) {\n            if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n            }\n        }\n    },\n    _fireEvent: function(type, msg) {\n        for (var i = 0; i < this._listeners.length; i++) {\n            var logFunction = this._listeners[i][type];\n            if (logFunction) {\n                logFunction(msg);\n            }\n        }\n    },\n    _listeners: []\n};\n\n},{}],38:[function(require,module,exports){\nvar LessError = require('./less-error'),\n    transformTree = require(\"./transform-tree\"),\n    logger = require(\"./logger\");\n\nmodule.exports = function(SourceMapBuilder) {\n    var ParseTree = function(root, imports) {\n        this.root = root;\n        this.imports = imports;\n    };\n\n    ParseTree.prototype.toCSS = function(options) {\n        var evaldRoot, result = {}, sourceMapBuilder;\n        try {\n            evaldRoot = transformTree(this.root, options);\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        try {\n            var compress = Boolean(options.compress);\n            if (compress) {\n                logger.warn(\"The compress option has been deprecated. We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.\");\n            }\n\n            var toCSSOptions = {\n                compress: compress,\n                dumpLineNumbers: options.dumpLineNumbers,\n                strictUnits: Boolean(options.strictUnits),\n                numPrecision: 8};\n\n            if (options.sourceMap) {\n                sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n            } else {\n                result.css = evaldRoot.toCSS(toCSSOptions);\n            }\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        if (options.pluginManager) {\n            var postProcessors = options.pluginManager.getPostProcessors();\n            for (var i = 0; i < postProcessors.length; i++) {\n                result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n            }\n        }\n        if (options.sourceMap) {\n            result.map = sourceMapBuilder.getExternalSourceMap();\n        }\n\n        result.imports = [];\n        for (var file in this.imports.files) {\n            if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                result.imports.push(file);\n            }\n        }\n        return result;\n    };\n    return ParseTree;\n};\n\n},{\"./less-error\":36,\"./logger\":37,\"./transform-tree\":47}],39:[function(require,module,exports){\nvar PromiseConstructor,\n    contexts = require(\"./contexts\"),\n    Parser = require('./parser/parser'),\n    PluginManager = require('./plugin-manager'),\n    LessError = require('./less-error'),\n    utils = require('./utils');\n\nmodule.exports = function(environment, ParseTree, ImportManager) {\n    var parse = function (input, options, callback) {\n\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.defaults(this.options, {});\n        }\n        else {\n            options = utils.defaults(this.options, options || {});\n        }\n\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                parse.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            var context,\n                rootFileInfo,\n                pluginManager = new PluginManager(this, !options.reUsePluginManager);\n\n            options.pluginManager = pluginManager;\n\n            context = new contexts.Parse(options);\n\n            if (options.rootFileInfo) {\n                rootFileInfo = options.rootFileInfo;\n            } else {\n                var filename = options.filename || \"input\";\n                var entryPath = filename.replace(/[^\\/\\\\]*$/, \"\");\n                rootFileInfo = {\n                    filename: filename,\n                    relativeUrls: context.relativeUrls,\n                    rootpath: context.rootpath || \"\",\n                    currentDirectory: entryPath,\n                    entryPath: entryPath,\n                    rootFilename: filename\n                };\n                // add in a missing trailing slash\n                if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== \"/\") {\n                    rootFileInfo.rootpath += \"/\";\n                }\n            }\n\n            var imports = new ImportManager(this, context, rootFileInfo);\n            this.importManager = imports;\n\n            // TODO: allow the plugins to be just a list of paths or names\n            // Do an async plugin queue like lessc\n\n            if (options.plugins) {\n                options.plugins.forEach(function(plugin) {\n                    var evalResult, contents;\n                    if (plugin.fileContent) {\n                        contents = plugin.fileContent.replace(/^\\uFEFF/, '');\n                        evalResult = pluginManager.Loader.evalPlugin(contents, context, imports, plugin.options, plugin.filename);\n                        if (evalResult instanceof LessError) {\n                            return callback(evalResult);\n                        }\n                    }\n                    else {\n                        pluginManager.addPlugin(plugin);\n                    }\n                });\n            }\n\n            new Parser(context, imports, rootFileInfo)\n                .parse(input, function (e, root) {\n                    if (e) { return callback(e); }\n                    callback(null, root, imports, options);\n                }, options);\n        }\n    };\n    return parse;\n};\n\n},{\"./contexts\":12,\"./less-error\":36,\"./parser/parser\":42,\"./plugin-manager\":43,\"./utils\":86,\"promise\":undefined}],40:[function(require,module,exports){\n// Split the input into chunks.\nmodule.exports = function (input, fail) {\n    var len = input.length, level = 0, parenLevel = 0,\n        lastOpening, lastOpeningParen, lastMultiComment, lastMultiCommentEndBrace,\n        chunks = [], emitFrom = 0,\n        chunkerCurrentIndex, currentChunkStartIndex, cc, cc2, matched;\n\n    function emitChunk(force) {\n        var len = chunkerCurrentIndex - emitFrom;\n        if (((len < 512) && !force) || !len) {\n            return;\n        }\n        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n        emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n        cc = input.charCodeAt(chunkerCurrentIndex);\n        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n            // a-z or whitespace\n            continue;\n        }\n\n        switch (cc) {\n            case 40:                        // (\n                parenLevel++;\n                lastOpeningParen = chunkerCurrentIndex;\n                continue;\n            case 41:                        // )\n                if (--parenLevel < 0) {\n                    return fail(\"missing opening `(`\", chunkerCurrentIndex);\n                }\n                continue;\n            case 59:                        // ;\n                if (!parenLevel) { emitChunk(); }\n                continue;\n            case 123:                       // {\n                level++;\n                lastOpening = chunkerCurrentIndex;\n                continue;\n            case 125:                       // }\n                if (--level < 0) {\n                    return fail(\"missing opening `{`\", chunkerCurrentIndex);\n                }\n                if (!level && !parenLevel) { emitChunk(); }\n                continue;\n            case 92:                        // \\\n                if (chunkerCurrentIndex < len - 1) { chunkerCurrentIndex++; continue; }\n                return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n            case 34:\n            case 39:\n            case 96:                        // \", ' and `\n                matched = 0;\n                currentChunkStartIndex = chunkerCurrentIndex;\n                for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                    cc2 = input.charCodeAt(chunkerCurrentIndex);\n                    if (cc2 > 96) { continue; }\n                    if (cc2 == cc) { matched = 1; break; }\n                    if (cc2 == 92) {        // \\\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                }\n                if (matched) { continue; }\n                return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n            case 47:                        // /, check for comment\n                if (parenLevel || (chunkerCurrentIndex == len - 1)) { continue; }\n                cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                if (cc2 == 47) {\n                    // //, find lnfeed\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) { break; }\n                    }\n                } else if (cc2 == 42) {\n                    // /*, find */\n                    lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 == 125) { lastMultiCommentEndBrace = chunkerCurrentIndex; }\n                        if (cc2 != 42) { continue; }\n                        if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) { break; }\n                    }\n                    if (chunkerCurrentIndex == len - 1) {\n                        return fail(\"missing closing `*/`\", currentChunkStartIndex);\n                    }\n                    chunkerCurrentIndex++;\n                }\n                continue;\n            case 42:                       // *, check for unmatched */\n                if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                    return fail(\"unmatched `/*`\", chunkerCurrentIndex);\n                }\n                continue;\n        }\n    }\n\n    if (level !== 0) {\n        if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n            return fail(\"missing closing `}` or `*/`\", lastOpening);\n        } else {\n            return fail(\"missing closing `}`\", lastOpening);\n        }\n    } else if (parenLevel !== 0) {\n        return fail(\"missing closing `)`\", lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n};\n\n},{}],41:[function(require,module,exports){\nvar chunker = require('./chunker');\n\nmodule.exports = function() {\n    var input,       // Less input string\n        j,           // current chunk\n        saveStack = [],   // holds state for backtracking\n        furthest,    // furthest index the parser has gone to\n        furthestPossibleErrorMessage, // if this is furthest we got to, this is the probably cause\n        chunks,      // chunkified input\n        current,     // current chunk\n        currentPos,  // index of current chunk, in `input`\n        parserInput = {};\n\n    var CHARCODE_SPACE = 32,\n        CHARCODE_TAB = 9,\n        CHARCODE_LF = 10,\n        CHARCODE_CR = 13,\n        CHARCODE_PLUS = 43,\n        CHARCODE_COMMA = 44,\n        CHARCODE_FORWARD_SLASH = 47,\n        CHARCODE_9 = 57;\n\n    function skipWhitespace(length) {\n        var oldi = parserInput.i, oldj = j,\n            curr = parserInput.i - currentPos,\n            endIndex = parserInput.i + current.length - curr,\n            mem = (parserInput.i += length),\n            inp = input,\n            c, nextChar, comment;\n\n        for (; parserInput.i < endIndex; parserInput.i++) {\n            c = inp.charCodeAt(parserInput.i);\n\n            if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\n                nextChar = inp.charAt(parserInput.i + 1);\n                if (nextChar === '/') {\n                    comment = {index: parserInput.i, isLineComment: true};\n                    var nextNewLine = inp.indexOf(\"\\n\", parserInput.i + 2);\n                    if (nextNewLine < 0) {\n                        nextNewLine = endIndex;\n                    }\n                    parserInput.i = nextNewLine;\n                    comment.text = inp.substr(comment.index, parserInput.i - comment.index);\n                    parserInput.commentStore.push(comment);\n                    continue;\n                } else if (nextChar === '*') {\n                    var nextStarSlash = inp.indexOf(\"*/\", parserInput.i + 2);\n                    if (nextStarSlash >= 0) {\n                        comment = {\n                            index: parserInput.i,\n                            text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\n                            isLineComment: false\n                        };\n                        parserInput.i += comment.text.length - 1;\n                        parserInput.commentStore.push(comment);\n                        continue;\n                    }\n                }\n                break;\n            }\n\n            if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\n                break;\n            }\n        }\n\n        current = current.slice(length + parserInput.i - mem + curr);\n        currentPos = parserInput.i;\n\n        if (!current.length) {\n            if (j < chunks.length - 1) {\n                current = chunks[++j];\n                skipWhitespace(0); // skip space at the beginning of a chunk\n                return true; // things changed\n            }\n            parserInput.finished = true;\n        }\n\n        return oldi !== parserInput.i || oldj !== j;\n    }\n\n    parserInput.save = function() {\n        currentPos = parserInput.i;\n        saveStack.push( { current: current, i: parserInput.i, j: j });\n    };\n    parserInput.restore = function(possibleErrorMessage) {\n\n        if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\n            furthest = parserInput.i;\n            furthestPossibleErrorMessage = possibleErrorMessage;\n        }\n        var state = saveStack.pop();\n        current = state.current;\n        currentPos = parserInput.i = state.i;\n        j = state.j;\n    };\n    parserInput.forget = function() {\n        saveStack.pop();\n    };\n    parserInput.isWhitespace = function (offset) {\n        var pos = parserInput.i + (offset || 0),\n            code = input.charCodeAt(pos);\n        return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\n    };\n\n    // Specialization of $(tok)\n    parserInput.$re = function(tok) {\n        if (parserInput.i > currentPos) {\n            current = current.slice(parserInput.i - currentPos);\n            currentPos = parserInput.i;\n        }\n\n        var m = tok.exec(current);\n        if (!m) {\n            return null;\n        }\n\n        skipWhitespace(m[0].length);\n        if (typeof m === \"string\") {\n            return m;\n        }\n\n        return m.length === 1 ? m[0] : m;\n    };\n\n    parserInput.$char = function(tok) {\n        if (input.charAt(parserInput.i) !== tok) {\n            return null;\n        }\n        skipWhitespace(1);\n        return tok;\n    };\n\n    parserInput.$str = function(tok) {\n        var tokLength = tok.length;\n\n        // https://jsperf.com/string-startswith/21\n        for (var i = 0; i < tokLength; i++) {\n            if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                return null;\n            }\n        }\n\n        skipWhitespace(tokLength);\n        return tok;\n    };\n\n    parserInput.$quoted = function() {\n\n        var startChar = input.charAt(parserInput.i);\n        if (startChar !== \"'\" && startChar !== '\"') {\n            return;\n        }\n        var length = input.length,\n            currentPosition = parserInput.i;\n\n        for (var i = 1; i + currentPosition < length; i++) {\n            var nextChar = input.charAt(i + currentPosition);\n            switch (nextChar) {\n                case \"\\\\\":\n                    i++;\n                    continue;\n                case \"\\r\":\n                case \"\\n\":\n                    break;\n                case startChar:\n                    var str = input.substr(currentPosition, i + 1);\n                    skipWhitespace(i + 1);\n                    return str;\n                default:\n            }\n        }\n        return null;\n    };\n\n    parserInput.autoCommentAbsorb = true;\n    parserInput.commentStore = [];\n    parserInput.finished = false;\n\n    // Same as $(), but don't change the state of the parser,\n    // just return the match.\n    parserInput.peek = function(tok) {\n        if (typeof tok === 'string') {\n            // https://jsperf.com/string-startswith/21\n            for (var i = 0; i < tok.length; i++) {\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return tok.test(current);\n        }\n    };\n\n    // Specialization of peek()\n    // TODO remove or change some currentChar calls to peekChar\n    parserInput.peekChar = function(tok) {\n        return input.charAt(parserInput.i) === tok;\n    };\n\n    parserInput.currentChar = function() {\n        return input.charAt(parserInput.i);\n    };\n\n    parserInput.getInput = function() {\n        return input;\n    };\n\n    parserInput.peekNotNumeric = function() {\n        var c = input.charCodeAt(parserInput.i);\n        // Is the first char of the dimension 0-9, '.', '+' or '-'\n        return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\n    };\n\n    parserInput.start = function(str, chunkInput, failFunction) {\n        input = str;\n        parserInput.i = j = currentPos = furthest = 0;\n\n        // chunking apparently makes things quicker (but my tests indicate\n        // it might actually make things slower in node at least)\n        // and it is a non-perfect parse - it can't recognise\n        // unquoted urls, meaning it can't distinguish comments\n        // meaning comments with quotes or {}() in them get 'counted'\n        // and then lead to parse errors.\n        // In addition if the chunking chunks in the wrong place we might\n        // not be able to parse a parser statement in one go\n        // this is officially deprecated but can be switched on via an option\n        // in the case it causes too much performance issues.\n        if (chunkInput) {\n            chunks = chunker(str, failFunction);\n        } else {\n            chunks = [str];\n        }\n\n        current = chunks[0];\n\n        skipWhitespace(0);\n    };\n\n    parserInput.end = function() {\n        var message,\n            isFinished = parserInput.i >= input.length;\n\n        if (parserInput.i < furthest) {\n            message = furthestPossibleErrorMessage;\n            parserInput.i = furthest;\n        }\n        return {\n            isFinished: isFinished,\n            furthest: parserInput.i,\n            furthestPossibleErrorMessage: message,\n            furthestReachedEnd: parserInput.i >= input.length - 1,\n            furthestChar: input[parserInput.i]\n        };\n    };\n\n    return parserInput;\n};\n\n},{\"./chunker\":40}],42:[function(require,module,exports){\nvar LessError = require('../less-error'),\n    tree = require(\"../tree\"),\n    visitors = require(\"../visitors\"),\n    getParserInput = require(\"./parser-input\"),\n    utils = require(\"../utils\"),\n    functionRegistry = require('../functions/function-registry');\n\n//\n// less.js - parser\n//\n//    A relatively straight-forward predictive parser.\n//    There is no tokenization/lexing stage, the input is parsed\n//    in one sweep.\n//\n//    To make the parser fast enough to run in the browser, several\n//    optimization had to be made:\n//\n//    - Matching and slicing on a huge input is often cause of slowdowns.\n//      The solution is to chunkify the input into smaller strings.\n//      The chunks are stored in the `chunks` var,\n//      `j` holds the current chunk index, and `currentPos` holds\n//      the index of the current chunk in relation to `input`.\n//      This gives us an almost 4x speed-up.\n//\n//    - In many cases, we don't need to match individual tokens;\n//      for example, if a value doesn't hold any variables, operations\n//      or dynamic references, the parser can effectively 'skip' it,\n//      treating it as a literal.\n//      An example would be '1px solid #000' - which evaluates to itself,\n//      we don't need to know what the individual components are.\n//      The drawback, of course is that you don't get the benefits of\n//      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\n//      and a smaller speed-up in the code-gen.\n//\n//\n//    Token matching is done with the `$` function, which either takes\n//    a terminal string or regexp, or a non-terminal function to call.\n//    It also takes care of moving all the indices forwards.\n//\n\nvar Parser = function Parser(context, imports, fileInfo) {\n    var parsers,\n        parserInput = getParserInput();\n\n    function error(msg, type) {\n        throw new LessError(\n            {\n                index: parserInput.i,\n                filename: fileInfo.filename,\n                type: type || 'Syntax',\n                message: msg\n            },\n            imports\n        );\n    }\n\n    function expect(arg, msg, index) {\n        // some older browsers return typeof 'function' for RegExp\n        var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\n        if (result) {\n            return result;\n        }\n        error(msg || (typeof arg === 'string' ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\n                                               : \"unexpected token\"));\n    }\n\n    // Specialization of expect()\n    function expectChar(arg, msg) {\n        if (parserInput.$char(arg)) {\n            return arg;\n        }\n        error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\n    }\n\n    function getDebugInfo(index) {\n        var filename = fileInfo.filename;\n\n        return {\n            lineNumber: utils.getLocation(index, parserInput.getInput()).line + 1,\n            fileName: filename\n        };\n    }\n\n    /**\n     *  Used after initial parsing to create nodes on the fly\n     * \n     *  @param {String} str          - string to parse \n     *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\n     *  @param {Number} currentIndex - start number to begin indexing\n     *  @param {Object} fileInfo     - fileInfo to attach to created nodes\n     */\n    function parseNode(str, parseList, currentIndex, fileInfo, callback) {\n        var result, returnNodes = [];\n        var parser = parserInput;\n\n        try {\n            parser.start(str, false, function fail(msg, index) {\n                callback({\n                    message: msg,\n                    index: index + currentIndex\n                });\n            });\n            for (var x = 0, p, i; (p = parseList[x]); x++) {\n                i = parser.i;\n                result = parsers[p]();\n                if (result) {\n                    result._index = i + currentIndex;\n                    result._fileInfo = fileInfo;\n                    returnNodes.push(result);\n                }\n                else {\n                    returnNodes.push(null);\n                }\n            }\n\n            var endInfo = parser.end();\n            if (endInfo.isFinished) {\n                callback(null, returnNodes);\n            }\n            else {\n                callback(true, null);\n            }\n        } catch (e) {\n            throw new LessError({\n                index: e.index + currentIndex,\n                message: e.message\n            }, imports, fileInfo.filename);\n        }\n    }\n    \n    //\n    // The Parser\n    //\n    return {\n        parserInput: parserInput,\n        imports: imports,\n        fileInfo: fileInfo,\n        parseNode: parseNode,\n        //\n        // Parse an input string into an abstract syntax tree,\n        // @param str A string containing 'less' markup\n        // @param callback call `callback` when done.\n        // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\n        //\n        parse: function (str, callback, additionalData) {\n            var root, error = null, globalVars, modifyVars, ignored, preText = \"\";\n\n            globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + '\\n' : '';\n            modifyVars = (additionalData && additionalData.modifyVars) ? '\\n' + Parser.serializeVars(additionalData.modifyVars) : '';\n\n            if (context.pluginManager) {\n                var preProcessors = context.pluginManager.getPreProcessors();\n                for (var i = 0; i < preProcessors.length; i++) {\n                    str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\n                }\n            }\n\n            if (globalVars || (additionalData && additionalData.banner)) {\n                preText = ((additionalData && additionalData.banner) ? additionalData.banner : \"\") + globalVars;\n                ignored = imports.contentsIgnoredChars;\n                ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\n                ignored[fileInfo.filename] += preText.length;\n            }\n\n            str = str.replace(/\\r\\n?/g, '\\n');\n            // Remove potential UTF Byte Order Mark\n            str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\n            imports.contents[fileInfo.filename] = str;\n\n            // Start with the primary rule.\n            // The whole syntax tree is held under a Ruleset node,\n            // with the `root` property set to true, so no `{}` are\n            // output. The callback is called when the input is parsed.\n            try {\n                parserInput.start(str, context.chunkInput, function fail(msg, index) {\n                    throw new LessError({\n                        index: index,\n                        type: 'Parse',\n                        message: msg,\n                        filename: fileInfo.filename\n                    }, imports);\n                });\n\n                tree.Node.prototype.parse = this;\n                root = new tree.Ruleset(null, this.parsers.primary());\n                tree.Node.prototype.rootNode = root;\n                root.root = true;\n                root.firstRoot = true;\n                root.functionRegistry = functionRegistry.inherit();\n                \n            } catch (e) {\n                return callback(new LessError(e, imports, fileInfo.filename));\n            }\n\n            // If `i` is smaller than the `input.length - 1`,\n            // it means the parser wasn't able to parse the whole\n            // string, so we've got a parsing error.\n            //\n            // We try to extract a \\n delimited string,\n            // showing the line where the parse error occurred.\n            // We split it up into two parts (the part which parsed,\n            // and the part which didn't), so we can color them differently.\n            var endInfo = parserInput.end();\n            if (!endInfo.isFinished) {\n\n                var message = endInfo.furthestPossibleErrorMessage;\n\n                if (!message) {\n                    message = \"Unrecognised input\";\n                    if (endInfo.furthestChar === '}') {\n                        message += \". Possibly missing opening '{'\";\n                    } else if (endInfo.furthestChar === ')') {\n                        message += \". Possibly missing opening '('\";\n                    } else if (endInfo.furthestReachedEnd) {\n                        message += \". Possibly missing something\";\n                    }\n                }\n\n                error = new LessError({\n                    type: \"Parse\",\n                    message: message,\n                    index: endInfo.furthest,\n                    filename: fileInfo.filename\n                }, imports);\n            }\n\n            var finish = function (e) {\n                e = error || e || imports.error;\n\n                if (e) {\n                    if (!(e instanceof LessError)) {\n                        e = new LessError(e, imports, fileInfo.filename);\n                    }\n\n                    return callback(e);\n                }\n                else {\n                    return callback(null, root);\n                }\n            };\n\n            if (context.processImports !== false) {\n                new visitors.ImportVisitor(imports, finish)\n                    .run(root);\n            } else {\n                return finish();\n            }\n        },\n\n        //\n        // Here in, the parsing rules/functions\n        //\n        // The basic structure of the syntax tree generated is as follows:\n        //\n        //   Ruleset ->  Declaration -> Value -> Expression -> Entity\n        //\n        // Here's some Less code:\n        //\n        //    .class {\n        //      color: #fff;\n        //      border: 1px solid #000;\n        //      width: @w + 4px;\n        //      > .child {...}\n        //    }\n        //\n        // And here's what the parse tree might look like:\n        //\n        //     Ruleset (Selector '.class', [\n        //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\n        //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\n        //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\n        //         Ruleset (Selector [Element '>', '.child'], [...])\n        //     ])\n        //\n        //  In general, most rules will try to parse a token with the `$re()` function, and if the return\n        //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\n        //  first, before parsing, that's when we use `peek()`.\n        //\n        parsers: parsers = {\n            //\n            // The `primary` rule is the *entry* and *exit* point of the parser.\n            // The rules here can appear at any level of the parse tree.\n            //\n            // The recursive nature of the grammar is an interplay between the `block`\n            // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\n            // as represented by this simplified grammar:\n            //\n            //     primary  →  (ruleset | declaration)+\n            //     ruleset  →  selector+ block\n            //     block    →  '{' primary '}'\n            //\n            // Only at one point is the primary rule not called from the\n            // block rule: at the root level.\n            //\n            primary: function () {\n                var mixin = this.mixin, root = [], node;\n\n                while (true) {\n                    while (true) {\n                        node = this.comment();\n                        if (!node) { break; }\n                        root.push(node);\n                    }\n                    // always process comments before deciding if finished\n                    if (parserInput.finished) {\n                        break;\n                    }\n                    if (parserInput.peek('}')) {\n                        break;\n                    }\n\n                    node = this.extendRule();\n                    if (node) {\n                        root = root.concat(node);\n                        continue;\n                    }\n\n                    node = mixin.definition() || this.declaration() || this.ruleset() ||\n                        mixin.call() || this.variableCall() || this.entities.call() || this.atrule();\n                    if (node) {\n                        root.push(node);\n                    } else {\n                        var foundSemiColon = false;\n                        while (parserInput.$char(\";\")) {\n                            foundSemiColon = true;\n                        }\n                        if (!foundSemiColon) {\n                            break;\n                        }\n                    }\n                }\n\n                return root;\n            },\n\n            // comments are collected by the main parsing mechanism and then assigned to nodes\n            // where the current structure allows it\n            comment: function () {\n                if (parserInput.commentStore.length) {\n                    var comment = parserInput.commentStore.shift();\n                    return new(tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\n                }\n            },\n\n            //\n            // Entities are tokens which can be found inside an Expression\n            //\n            entities: {\n                //\n                // A string, which supports escaping \" and '\n                //\n                //     \"milky way\" 'he\\'s the one!'\n                //\n                quoted: function () {\n                    var str, index = parserInput.i, isEscaped = false;\n\n                    parserInput.save();\n                    if (parserInput.$char(\"~\")) {\n                        isEscaped = true;\n                    }\n                    str = parserInput.$quoted();\n                    if (!str) {\n                        parserInput.restore();\n                        return;\n                    }\n                    parserInput.forget();\n\n                    return new(tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\n                },\n\n                //\n                // A catch-all word, such as:\n                //\n                //     black border-collapse\n                //\n                keyword: function () {\n                    var k = parserInput.$char(\"%\") || parserInput.$re(/^\\[?[_A-Za-z-][_A-Za-z0-9-]*\\]?/);\n                    if (k) {\n                        return tree.Color.fromKeyword(k) || new(tree.Keyword)(k);\n                    }\n                },\n\n                //\n                // A function call\n                //\n                //     rgb(255, 0, 255)\n                //\n                // The arguments are parsed with the `entities.arguments` parser.\n                //\n                call: function () {\n                    var name, args, func, index = parserInput.i;\n\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                    if (parserInput.peek(/^url\\(/i)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    name = parserInput.$re(/^([\\w-]+|%|progid:[\\w\\.]+)\\(/);\n                    if (!name) {\n                        parserInput.forget(); \n                        return;\n                    }\n\n                    name = name[1];\n                    func = this.customFuncCall(name);\n                    if (func) {\n                        args = func.parse();\n                        if (args && func.stop) {\n                            parserInput.forget();\n                            return args;\n                        }\n                    }\n\n                    args = this.arguments(args);\n\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore(\"Could not parse call arguments or missing ')'\");\n                        return;\n                    }\n\n                    parserInput.forget();\n                    \n                    return new(tree.Call)(name, args, index, fileInfo);\n                },\n                \n                //\n                // Parsing rules for functions with non-standard args, e.g.:\n                //\n                //     boolean(not(2 > 1))\n                //\n                //     This is a quick prototype, to be modified/improved when\n                //     more custom-parsed funcs come (e.g. `selector(...)`)\n                //\n\n                customFuncCall: function (name) {\n                    /* Ideally the table is to be moved out of here for faster perf.,\n                       but it's quite tricky since it relies on all these `parsers`\n                       and `expect` available only here */\n                    return {\n                        alpha:   f(parsers.ieAlpha, true),\n                        boolean: f(condition),\n                        'if':    f(condition)\n                    }[name.toLowerCase()];\n\n                    function f(parse, stop) {\n                        return {\n                            parse: parse, // parsing function\n                            stop:  stop   // when true - stop after parse() and return its result, \n                                          // otherwise continue for plain args\n                        };\n                    }\n                \n                    function condition() {\n                        return [expect(parsers.condition, 'expected condition')];\n                    }\n                },\n\n                arguments: function (prevArgs) {\n                    var argsComma = prevArgs || [],\n                        argsSemiColon = [],\n                        isSemiColonSeparated, value;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (prevArgs) {\n                            prevArgs = false;\n                        } else {\n                            value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\n                            if (!value) {\n                                break;\n                            }\n\n                            if (value.value && value.value.length == 1) {\n                                value = value.value[0];\n                            }\n\n                            argsComma.push(value);\n                        }\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n                            isSemiColonSeparated = true;\n                            value = (argsComma.length < 1) ? argsComma[0]\n                                : new tree.Value(argsComma);\n                            argsSemiColon.push(value);\n                            argsComma = [];\n                        }\n                    }\n\n                    parserInput.forget();\n                    return isSemiColonSeparated ? argsSemiColon : argsComma;\n                },\n                literal: function () {\n                    return this.dimension() ||\n                           this.color() ||\n                           this.quoted() ||\n                           this.unicodeDescriptor();\n                },\n\n                // Assignments are argument entities for calls.\n                // They are present in ie filter properties as shown below.\n                //\n                //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\n                //\n\n                assignment: function () {\n                    var key, value;\n                    parserInput.save();\n                    key = parserInput.$re(/^\\w+(?=\\s?=)/i);\n                    if (!key) {\n                        parserInput.restore();\n                        return;\n                    }\n                    if (!parserInput.$char('=')) {\n                        parserInput.restore();\n                        return;\n                    }\n                    value = parsers.entity();\n                    if (value) {\n                        parserInput.forget();\n                        return new(tree.Assignment)(key, value);\n                    } else {\n                        parserInput.restore();\n                    }\n                },\n\n                //\n                // Parse url() tokens\n                //\n                // We use a specific rule for urls, because they don't really behave like\n                // standard function calls. The difference is that the argument doesn't have\n                // to be enclosed within a string, so it can't be parsed as an Expression.\n                //\n                url: function () {\n                    var value, index = parserInput.i;\n\n                    parserInput.autoCommentAbsorb = false;\n\n                    if (!parserInput.$str(\"url(\")) {\n                        parserInput.autoCommentAbsorb = true;\n                        return;\n                    }\n\n                    value = this.quoted() || this.variable() || this.property() ||\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || \"\";\n\n                    parserInput.autoCommentAbsorb = true;\n\n                    expectChar(')');\n\n                    return new(tree.URL)((value.value != null || \n                        value instanceof tree.Variable || \n                        value instanceof tree.Property) ?\n                        value : new(tree.Anonymous)(value, index), index, fileInfo);\n                },\n\n                //\n                // A Variable entity, such as `@fink`, in\n                //\n                //     width: @fink + 2px\n                //\n                // We use a different parser for variable definitions,\n                // see `parsers.variable`.\n                //\n                variable: function () {\n                    var name, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\n                        return new(tree.Variable)(name, index, fileInfo);\n                    }\n                },\n\n                // A variable entity using the protective {} e.g. @{var}\n                variableCurly: function () {\n                    var curly, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\n                        return new(tree.Variable)(\"@\" + curly[1], index, fileInfo);\n                    }\n                },\n                //\n                // A Property accessor, such as `$color`, in\n                //\n                //     background-color: $color\n                //\n                property: function () {\n                    var name, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\n                        return new(tree.Property)(name, index, fileInfo);\n                    }\n                },\n\n                // A property entity useing the protective {} e.g. ${prop}\n                propertyCurly: function () {\n                    var curly, index = parserInput.i;\n\n                    if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\n                        return new(tree.Property)(\"$\" + curly[1], index, fileInfo);\n                    }\n                },\n                //\n                // A Hexadecimal color\n                //\n                //     #4F3C2F\n                //\n                // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\n                //\n                color: function () {\n                    var rgb;\n\n                    if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/))) {\n                        // strip colons, brackets, whitespaces and other characters that should not\n                        // definitely be part of color string\n                        var colorCandidateString = rgb.input.match(/^#([\\w]+).*/);\n                        colorCandidateString = colorCandidateString[1];\n                        if (!colorCandidateString.match(/^[A-Fa-f0-9]+$/)) { // verify if candidate consists only of allowed HEX characters\n                            error(\"Invalid HEX color code\");\n                        }\n                        return new(tree.Color)(rgb[1], undefined, '#' + colorCandidateString);\n                    }\n                },\n\n                colorKeyword: function () {\n                    parserInput.save();\n                    var autoCommentAbsorb = parserInput.autoCommentAbsorb;\n                    parserInput.autoCommentAbsorb = false;\n                    var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\n                    parserInput.autoCommentAbsorb = autoCommentAbsorb;\n                    if (!k) {\n                        parserInput.forget();\n                        return;\n                    }\n                    parserInput.restore();\n                    var color = tree.Color.fromKeyword(k);\n                    if (color) {\n                        parserInput.$str(k);\n                        return color;\n                    }\n                },\n\n                //\n                // A Dimension, that is, a number and a unit\n                //\n                //     0.5em 95%\n                //\n                dimension: function () {\n                    if (parserInput.peekNotNumeric()) {\n                        return;\n                    }\n\n                    var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\n                    if (value) {\n                        return new(tree.Dimension)(value[1], value[2]);\n                    }\n                },\n\n                //\n                // A unicode descriptor, as is used in unicode-range\n                //\n                // U+0??  or U+00A1-00A9\n                //\n                unicodeDescriptor: function () {\n                    var ud;\n\n                    ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\n                    if (ud) {\n                        return new(tree.UnicodeDescriptor)(ud[0]);\n                    }\n                },\n\n                //\n                // JavaScript code to be evaluated\n                //\n                //     `window.location.href`\n                //\n                javascript: function () {\n                    var js, index = parserInput.i;\n\n                    parserInput.save();\n\n                    var escape = parserInput.$char(\"~\");\n                    var jsQuote = parserInput.$char(\"`\");\n\n                    if (!jsQuote) {\n                        parserInput.restore();\n                        return;\n                    }\n\n                    js = parserInput.$re(/^[^`]*`/);\n                    if (js) {\n                        parserInput.forget();\n                        return new(tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\n                    }\n                    parserInput.restore(\"invalid javascript definition\");\n                }\n            },\n\n            //\n            // The variable part of a variable definition. Used in the `rule` parser\n            //\n            //     @fink:\n            //\n            variable: function () {\n                var name;\n\n                if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) { return name[1]; }\n            },\n\n            //\n            // Call a variable value\n            //\n            //     @fink()\n            //\n            variableCall: function () {\n                var name;\n\n                if (parserInput.currentChar() === '@'\n                    && (name = parserInput.$re(/^(@[\\w-]+)\\(\\s*\\)/))\n                    && parsers.end()) {\n                    return new tree.VariableCall(name[1]);\n                }\n            },\n\n            //\n            // extend syntax - used to extend selectors\n            //\n            extend: function(isRule) {\n                var elements, e, index = parserInput.i, option, extendList, extend;\n\n                if (!parserInput.$str(isRule ? \"&:extend(\" : \":extend(\")) {\n                    return;\n                }\n\n                do {\n                    option = null;\n                    elements = null;\n                    while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\n                        e = this.element();\n                        if (!e) {\n                            break;\n                        }\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                    }\n\n                    option = option && option[1];\n                    if (!elements) {\n                        error(\"Missing target selector for :extend().\");\n                    }\n                    extend = new(tree.Extend)(new(tree.Selector)(elements), option, index, fileInfo);\n                    if (extendList) {\n                        extendList.push(extend);\n                    } else {\n                        extendList = [ extend ];\n                    }\n                } while (parserInput.$char(\",\"));\n\n                expect(/^\\)/);\n\n                if (isRule) {\n                    expect(/^;/);\n                }\n\n                return extendList;\n            },\n\n            //\n            // extendRule - used in a rule to extend all the parent selectors\n            //\n            extendRule: function() {\n                return this.extend(true);\n            },\n\n            //\n            // Mixins\n            //\n            mixin: {\n                //\n                // A Mixin call, with an optional argument list\n                //\n                //     #mixins > .square(#fff);\n                //     .rounded(4px, black);\n                //     .button;\n                //\n                // The `while` loop is there because mixins can be\n                // namespaced, but we only support the child and descendant\n                // selector for now.\n                //\n                call: function () {\n                    var s = parserInput.currentChar(), important = false, index = parserInput.i, elemIndex,\n                        elements, elem, e, c, args;\n\n                    if (s !== '.' && s !== '#') { return; }\n\n                    parserInput.save(); // stop us absorbing part of an invalid selector\n\n                    while (true) {\n                        elemIndex = parserInput.i;\n                        e = parserInput.$re(/^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/);\n                        if (!e) {\n                            break;\n                        }\n                        elem = new(tree.Element)(c, e, elemIndex, fileInfo);\n                        if (elements) {\n                            elements.push(elem);\n                        } else {\n                            elements = [ elem ];\n                        }\n                        c = parserInput.$char('>');\n                    }\n\n                    if (elements) {\n                        if (parserInput.$char('(')) {\n                            args = this.args(true).args;\n                            expectChar(')');\n                        }\n\n                        if (parsers.important()) {\n                            important = true;\n                        }\n\n                        if (parsers.end()) {\n                            parserInput.forget();\n                            return new(tree.mixin.Call)(elements, args, index, fileInfo, important);\n                        }\n                    }\n\n                    parserInput.restore();\n                },\n                args: function (isCall) {\n                    var entities = parsers.entities,\n                        returner = { args:null, variadic: false },\n                        expressions = [], argsSemiColon = [], argsComma = [],\n                        isSemiColonSeparated, expressionContainsNamed, name, nameLoop,\n                        value, arg, expand;\n\n                    parserInput.save();\n\n                    while (true) {\n                        if (isCall) {\n                            arg = parsers.detachedRuleset() || parsers.expression();\n                        } else {\n                            parserInput.commentStore.length = 0;\n                            if (parserInput.$str(\"...\")) {\n                                returner.variadic = true;\n                                if (parserInput.$char(\";\") && !isSemiColonSeparated) {\n                                    isSemiColonSeparated = true;\n                                }\n                                (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                    .push({ variadic: true });\n                                break;\n                            }\n                            arg = entities.variable() || entities.property() || entities.literal() || entities.keyword();\n                        }\n\n                        if (!arg) {\n                            break;\n                        }\n\n                        nameLoop = null;\n                        if (arg.throwAwayComments) {\n                            arg.throwAwayComments();\n                        }\n                        value = arg;\n                        var val = null;\n\n                        if (isCall) {\n                            // Variable\n                            if (arg.value && arg.value.length == 1) {\n                                val = arg.value[0];\n                            }\n                        } else {\n                            val = arg;\n                        }\n\n                        if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\n                            if (parserInput.$char(':')) {\n                                if (expressions.length > 0) {\n                                    if (isSemiColonSeparated) {\n                                        error(\"Cannot mix ; and , as delimiter types\");\n                                    }\n                                    expressionContainsNamed = true;\n                                }\n\n                                value = parsers.detachedRuleset() || parsers.expression();\n\n                                if (!value) {\n                                    if (isCall) {\n                                        error(\"could not understand value for named argument\");\n                                    } else {\n                                        parserInput.restore();\n                                        returner.args = [];\n                                        return returner;\n                                    }\n                                }\n                                nameLoop = (name = val.name);\n                            } else if (parserInput.$str(\"...\")) {\n                                if (!isCall) {\n                                    returner.variadic = true;\n                                    if (parserInput.$char(\";\") && !isSemiColonSeparated) {\n                                        isSemiColonSeparated = true;\n                                    }\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\n                                        .push({ name: arg.name, variadic: true });\n                                    break;\n                                } else {\n                                    expand = true;\n                                }\n                            } else if (!isCall) {\n                                name = nameLoop = val.name;\n                                value = null;\n                            }\n                        }\n\n                        if (value) {\n                            expressions.push(value);\n                        }\n\n                        argsComma.push({ name:nameLoop, value:value, expand:expand });\n\n                        if (parserInput.$char(',')) {\n                            continue;\n                        }\n\n                        if (parserInput.$char(';') || isSemiColonSeparated) {\n\n                            if (expressionContainsNamed) {\n                                error(\"Cannot mix ; and , as delimiter types\");\n                            }\n\n                            isSemiColonSeparated = true;\n\n                            if (expressions.length > 1) {\n                                value = new(tree.Value)(expressions);\n                            }\n                            argsSemiColon.push({ name:name, value:value, expand:expand });\n\n                            name = null;\n                            expressions = [];\n                            expressionContainsNamed = false;\n                        }\n                    }\n\n                    parserInput.forget();\n                    returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\n                    return returner;\n                },\n                //\n                // A Mixin definition, with a list of parameters\n                //\n                //     .rounded (@radius: 2px, @color) {\n                //        ...\n                //     }\n                //\n                // Until we have a finer grained state-machine, we have to\n                // do a look-ahead, to make sure we don't have a mixin call.\n                // See the `rule` function for more information.\n                //\n                // We start by matching `.rounded (`, and then proceed on to\n                // the argument list, which has optional default values.\n                // We store the parameters in `params`, with a `value` key,\n                // if there is a value, such as in the case of `@radius`.\n                //\n                // Once we've got our params list, and a closing `)`, we parse\n                // the `{...}` block.\n                //\n                definition: function () {\n                    var name, params = [], match, ruleset, cond, variadic = false;\n                    if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\n                        parserInput.peek(/^[^{]*\\}/)) {\n                        return;\n                    }\n\n                    parserInput.save();\n\n                    match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\n                    if (match) {\n                        name = match[1];\n\n                        var argInfo = this.args(false);\n                        params = argInfo.args;\n                        variadic = argInfo.variadic;\n\n                        // .mixincall(\"@{a}\");\n                        // looks a bit like a mixin definition..\n                        // also\n                        // .mixincall(@a: {rule: set;});\n                        // so we have to be nice and restore\n                        if (!parserInput.$char(')')) {\n                            parserInput.restore(\"Missing closing ')'\");\n                            return;\n                        }\n\n                        parserInput.commentStore.length = 0;\n\n                        if (parserInput.$str(\"when\")) { // Guard\n                            cond = expect(parsers.conditions, 'expected condition');\n                        }\n\n                        ruleset = parsers.block();\n\n                        if (ruleset) {\n                            parserInput.forget();\n                            return new(tree.mixin.Definition)(name, params, ruleset, cond, variadic);\n                        } else {\n                            parserInput.restore();\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n            },\n\n            //\n            // Entities are the smallest recognized token,\n            // and can be found inside a rule's value.\n            //\n            entity: function () {\n                var entities = this.entities;\n\n                return this.comment() || entities.literal() || entities.variable() || entities.url() ||\n                       entities.property() || entities.call() || entities.keyword()  || entities.javascript();\n            },\n\n            //\n            // A Declaration terminator. Note that we use `peek()` to check for '}',\n            // because the `block` rule will be expecting it, but we still need to make sure\n            // it's there, if ';' was omitted.\n            //\n            end: function () {\n                return parserInput.$char(';') || parserInput.peek('}');\n            },\n\n            //\n            // IE's alpha function\n            //\n            //     alpha(opacity=88)\n            //\n            ieAlpha: function () {\n                var value;\n\n                // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\n                if (!parserInput.$re(/^opacity=/i)) { return; }\n                value = parserInput.$re(/^\\d+/);\n                if (!value) {\n                    value = expect(parsers.entities.variable, \"Could not parse alpha\");\n                    value = '@{' + value.name.slice(1) + '}';\n                }\n                expectChar(')');\n                return new tree.Quoted('', 'alpha(opacity=' + value + ')');\n            },\n\n            //\n            // A Selector Element\n            //\n            //     div\n            //     + h1\n            //     #socks\n            //     input[type=\"text\"]\n            //\n            // Elements are the building blocks for Selectors,\n            // they are made out of a `Combinator` (see combinator rule),\n            // and an element name, such as a tag a class, or `*`.\n            //\n            element: function () {\n                var e, c, v, index = parserInput.i;\n\n                c = this.combinator();\n\n                e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\n                    parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\n                    parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\n                    parserInput.$re(/^\\([^&()@]+\\)/) ||  parserInput.$re(/^[\\.#:](?=@)/) ||\n                    this.entities.variableCurly();\n\n                if (!e) {\n                    parserInput.save();\n                    if (parserInput.$char('(')) {\n                        if ((v = this.selector(false)) && parserInput.$char(')')) {\n                            e = new(tree.Paren)(v);\n                            parserInput.forget();\n                        } else {\n                            parserInput.restore(\"Missing closing ')'\");\n                        }\n                    } else {\n                        parserInput.forget();\n                    }\n                }\n\n                if (e) { return new(tree.Element)(c, e, index, fileInfo); }\n            },\n\n            //\n            // Combinators combine elements together, in a Selector.\n            //\n            // Because our parser isn't white-space sensitive, special care\n            // has to be taken, when parsing the descendant combinator, ` `,\n            // as it's an empty space. We have to check the previous character\n            // in the input, to see if it's a ` ` character. More info on how\n            // we deal with this in *combinator.js*.\n            //\n            combinator: function () {\n                var c = parserInput.currentChar();\n\n                if (c === '/') {\n                    parserInput.save();\n                    var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\n                    if (slashedCombinator) {\n                        parserInput.forget();\n                        return new(tree.Combinator)(slashedCombinator);\n                    }\n                    parserInput.restore();\n                }\n\n                if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\n                    parserInput.i++;\n                    if (c === '^' && parserInput.currentChar() === '^') {\n                        c = '^^';\n                        parserInput.i++;\n                    }\n                    while (parserInput.isWhitespace()) { parserInput.i++; }\n                    return new(tree.Combinator)(c);\n                } else if (parserInput.isWhitespace(-1)) {\n                    return new(tree.Combinator)(\" \");\n                } else {\n                    return new(tree.Combinator)(null);\n                }\n            },\n            //\n            // A CSS Selector\n            // with less extensions e.g. the ability to extend and guard\n            //\n            //     .class > div + h1\n            //     li a:hover\n            //\n            // Selectors are made out of one or more Elements, see above.\n            //\n            selector: function (isLess) {\n                var index = parserInput.i, elements, extendList, c, e, allExtends, when, condition;\n                isLess = isLess !== false;\n                while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str(\"when\"))) || (e = this.element())) {\n                    if (when) {\n                        condition = expect(this.conditions, 'expected condition');\n                    } else if (condition) {\n                        error(\"CSS guard can only be used at the end of selector\");\n                    } else if (extendList) {\n                        if (allExtends) {\n                            allExtends = allExtends.concat(extendList);\n                        } else {\n                            allExtends = extendList;\n                        }\n                    } else {\n                        if (allExtends) { error(\"Extend can only be used at the end of selector\"); }\n                        c = parserInput.currentChar();\n                        if (elements) {\n                            elements.push(e);\n                        } else {\n                            elements = [ e ];\n                        }\n                        e = null;\n                    }\n                    if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\n                        break;\n                    }\n                }\n\n                if (elements) { return new(tree.Selector)(elements, allExtends, condition, index, fileInfo); }\n                if (allExtends) { error(\"Extend must be used to extend a selector, it cannot be used on its own\"); }\n            },\n            attribute: function () {\n                if (!parserInput.$char('[')) { return; }\n\n                var entities = this.entities,\n                    key, val, op;\n\n                if (!(key = entities.variableCurly())) {\n                    key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\n                }\n\n                op = parserInput.$re(/^[|~*$^]?=/);\n                if (op) {\n                    val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\n                }\n\n                expectChar(']');\n\n                return new(tree.Attribute)(key, op, val);\n            },\n\n            //\n            // The `block` rule is used by `ruleset` and `mixin.definition`.\n            // It's a wrapper around the `primary` rule, with added `{}`.\n            //\n            block: function () {\n                var content;\n                if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\n                    return content;\n                }\n            },\n\n            blockRuleset: function() {\n                var block = this.block();\n\n                if (block) {\n                    block = new tree.Ruleset(null, block);\n                }\n                return block;\n            },\n\n            detachedRuleset: function() {\n                var blockRuleset = this.blockRuleset();\n                if (blockRuleset) {\n                    return new tree.DetachedRuleset(blockRuleset);\n                }\n            },\n\n            //\n            // div, .class, body > p {...}\n            //\n            ruleset: function () {\n                var selectors, s, rules, debugInfo;\n\n                parserInput.save();\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(parserInput.i);\n                }\n\n                while (true) {\n                    s = this.selector();\n                    if (!s) {\n                        break;\n                    }\n                    if (selectors) {\n                        selectors.push(s);\n                    } else {\n                        selectors = [ s ];\n                    }\n                    parserInput.commentStore.length = 0;\n                    if (s.condition && selectors.length > 1) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    if (!parserInput.$char(',')) { break; }\n                    if (s.condition) {\n                        error(\"Guards are only currently allowed on a single selector.\");\n                    }\n                    parserInput.commentStore.length = 0;\n                }\n\n                if (selectors && (rules = this.block())) {\n                    parserInput.forget();\n                    var ruleset = new(tree.Ruleset)(selectors, rules, context.strictImports);\n                    if (context.dumpLineNumbers) {\n                        ruleset.debugInfo = debugInfo;\n                    }\n                    return ruleset;\n                } else {\n                    parserInput.restore();\n                }\n            },\n            declaration: function () {\n                var name, value, startOfRule = parserInput.i, c = parserInput.currentChar(), important, merge, isVariable;\n\n                if (c === '.' || c === '#' || c === '&' || c === ':') { return; }\n\n                parserInput.save();\n\n                name = this.variable() || this.ruleProperty();\n                if (name) {\n                    isVariable = typeof name === \"string\";\n\n                    if (isVariable) {\n                        value = this.detachedRuleset();\n                    }\n\n                    parserInput.commentStore.length = 0;\n                    if (!value) {\n                        // a name returned by this.ruleProperty() is always an array of the form:\n                        // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\n                        // where each item is a tree.Keyword or tree.Variable\n                        merge = !isVariable && name.length > 1 && name.pop().value;\n\n                        // Try to store values as anonymous\n                        // If we need the value later we'll re-parse it in ruleset.parseValue\n                        value = this.anonymousValue();\n                        if (value) {\n                            parserInput.forget();\n                            // anonymous values absorb the end ';' which is required for them to work\n                            return new (tree.Declaration)(name, value, false, merge, startOfRule, fileInfo);\n                        }\n\n                        if (!value) {\n                            value = this.value();\n                        }\n\n                        important = this.important();\n                    }\n\n                    if (value && this.end()) {\n                        parserInput.forget();\n                        return new (tree.Declaration)(name, value, important, merge, startOfRule, fileInfo);\n                    }\n                    else {\n                        parserInput.restore();\n                    }\n                } else {\n                    parserInput.restore();\n                }\n            },\n            anonymousValue: function () {\n                var index = parserInput.i;\n                var match = parserInput.$re(/^([^@\\$+\\/'\"*`(;{}-]*);/);\n                if (match) {\n                    return new(tree.Anonymous)(match[1], index);\n                }\n            },\n\n            //\n            // An @import atrule\n            //\n            //     @import \"lib\";\n            //\n            // Depending on our environment, importing is done differently:\n            // In the browser, it's an XHR request, in Node, it would be a\n            // file-system operation. The function used for importing is\n            // stored in `import`, which we pass to the Import constructor.\n            //\n            \"import\": function () {\n                var path, features, index = parserInput.i;\n\n                var dir = parserInput.$re(/^@import?\\s+/);\n\n                if (dir) {\n                    var options = (dir ? this.importOptions() : null) || {};\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n                        features = this.mediaFeatures();\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error(\"missing semi-colon or unrecognised media features on import\");\n                        }\n                        features = features && new(tree.Value)(features);\n                        return new(tree.Import)(path, features, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error(\"malformed import statement\");\n                    }\n                }\n            },\n\n            importOptions: function() {\n                var o, options = {}, optionName, value;\n\n                // list of options, surrounded by parens\n                if (!parserInput.$char('(')) { return null; }\n                do {\n                    o = this.importOption();\n                    if (o) {\n                        optionName = o;\n                        value = true;\n                        switch (optionName) {\n                            case \"css\":\n                                optionName = \"less\";\n                                value = false;\n                                break;\n                            case \"once\":\n                                optionName = \"multiple\";\n                                value = false;\n                                break;\n                        }\n                        options[optionName] = value;\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (o);\n                expectChar(')');\n                return options;\n            },\n\n            importOption: function() {\n                var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\n                if (opt) {\n                    return opt[1];\n                }\n            },\n\n            mediaFeature: function () {\n                var entities = this.entities, nodes = [], e, p;\n                parserInput.save();\n                do {\n                    e = entities.keyword() || entities.variable();\n                    if (e) {\n                        nodes.push(e);\n                    } else if (parserInput.$char('(')) {\n                        p = this.property();\n                        e = this.value();\n                        if (parserInput.$char(')')) {\n                            if (p && e) {\n                                nodes.push(new(tree.Paren)(new(tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\n                            } else if (e) {\n                                nodes.push(new(tree.Paren)(e));\n                            } else {\n                                error(\"badly formed media feature definition\");\n                            }\n                        } else {\n                            error(\"Missing closing ')'\", \"Parse\");\n                        }\n                    }\n                } while (e);\n\n                parserInput.forget();\n                if (nodes.length > 0) {\n                    return new(tree.Expression)(nodes);\n                }\n            },\n\n            mediaFeatures: function () {\n                var entities = this.entities, features = [], e;\n                do {\n                    e = this.mediaFeature();\n                    if (e) {\n                        features.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    } else {\n                        e = entities.variable();\n                        if (e) {\n                            features.push(e);\n                            if (!parserInput.$char(',')) { break; }\n                        }\n                    }\n                } while (e);\n\n                return features.length > 0 ? features : null;\n            },\n\n            media: function () {\n                var features, rules, media, debugInfo, index = parserInput.i;\n\n                if (context.dumpLineNumbers) {\n                    debugInfo = getDebugInfo(index);\n                }\n\n                parserInput.save();\n\n                if (parserInput.$str(\"@media\")) {\n                    features = this.mediaFeatures();\n\n                    rules = this.block();\n\n                    if (!rules) {\n                        error(\"media definitions require block statements after any features\");\n                    }\n\n                    parserInput.forget();\n\n                    media = new(tree.Media)(rules, features, index, fileInfo);\n                    if (context.dumpLineNumbers) {\n                        media.debugInfo = debugInfo;\n                    }\n\n                    return media;\n                }\n\n                parserInput.restore();\n            },\n\n            //\n\n            // A @plugin directive, used to import plugins dynamically.\n            //\n            //     @plugin (args) \"lib\";\n            //\n            plugin: function () {\n                var path, args, options,\n                    index = parserInput.i,\n                    dir   = parserInput.$re(/^@plugin?\\s+/);\n\n                if (dir) {\n                    args = this.pluginArgs();\n\n                    if (args) {\n                        options = {\n                            pluginArgs: args,\n                            isPlugin: true\n                        };\n                    }\n                    else {\n                        options = { isPlugin: true };\n                    }\n\n                    if ((path = this.entities.quoted() || this.entities.url())) {\n\n                        if (!parserInput.$char(';')) {\n                            parserInput.i = index;\n                            error(\"missing semi-colon on @plugin\");\n                        }\n                        return new(tree.Import)(path, null, options, index, fileInfo);\n                    }\n                    else {\n                        parserInput.i = index;\n                        error(\"malformed @plugin statement\");\n                    }\n                }\n            },\n\n            pluginArgs: function() {\n                // list of options, surrounded by parens\n                parserInput.save();\n                if (!parserInput.$char('(')) {\n                    parserInput.restore();\n                    return null;\n                }\n                var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\n                if (args[1]) {\n                    parserInput.forget();\n                    return args[1].trim();\n                }\n                else { \n                    parserInput.restore();\n                    return null;\n                }\n            },\n\n            //\n            // A CSS AtRule\n            //\n            //     @charset \"utf-8\";\n            //\n            atrule: function () {\n                var index = parserInput.i, name, value, rules, nonVendorSpecificName,\n                    hasIdentifier, hasExpression, hasUnknown, hasBlock = true, isRooted = true;\n\n                if (parserInput.currentChar() !== '@') { return; }\n\n                value = this['import']() || this.plugin() || this.media();\n                if (value) {\n                    return value;\n                }\n\n                parserInput.save();\n\n                name = parserInput.$re(/^@[a-z-]+/);\n\n                if (!name) { return; }\n\n                nonVendorSpecificName = name;\n                if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\n                    nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\n                }\n\n                switch (nonVendorSpecificName) {\n                    case \"@charset\":\n                        hasIdentifier = true;\n                        hasBlock = false;\n                        break;\n                    case \"@namespace\":\n                        hasExpression = true;\n                        hasBlock = false;\n                        break;\n                    case \"@keyframes\":\n                    case \"@counter-style\":\n                        hasIdentifier = true;\n                        break;\n                    case \"@document\":\n                    case \"@supports\":\n                        hasUnknown = true;\n                        isRooted = false;\n                        break;\n                    default:\n                        hasUnknown = true;\n                        break;\n                }\n\n                parserInput.commentStore.length = 0;\n\n                if (hasIdentifier) {\n                    value = this.entity();\n                    if (!value) {\n                        error(\"expected \" + name + \" identifier\");\n                    }\n                } else if (hasExpression) {\n                    value = this.expression();\n                    if (!value) {\n                        error(\"expected \" + name + \" expression\");\n                    }\n                } else if (hasUnknown) {\n                    value = (parserInput.$re(/^[^{;]+/) || '').trim();\n                    hasBlock = (parserInput.currentChar() == '{');\n                    if (value) {\n                        value = new(tree.Anonymous)(value);\n                    }\n                }\n\n                if (hasBlock) {\n                    rules = this.blockRuleset();\n                }\n\n                if (rules || (!hasBlock && value && parserInput.$char(';'))) {\n                    parserInput.forget();\n                    return new (tree.AtRule)(name, value, rules, index, fileInfo,\n                        context.dumpLineNumbers ? getDebugInfo(index) : null,\n                        isRooted\n                    );\n                }\n\n                parserInput.restore(\"at-rule options not recognised\");\n            },\n\n            //\n            // A Value is a comma-delimited list of Expressions\n            //\n            //     font-family: Baskerville, Georgia, serif;\n            //\n            // In a Rule, a Value represents everything after the `:`,\n            // and before the `;`.\n            //\n            value: function () {\n                var e, expressions = [], index = parserInput.i;\n\n                do {\n                    e = this.expression();\n                    if (e) {\n                        expressions.push(e);\n                        if (!parserInput.$char(',')) { break; }\n                    }\n                } while (e);\n\n                if (expressions.length > 0) {\n                    return new(tree.Value)(expressions, index);\n                }\n            },\n            important: function () {\n                if (parserInput.currentChar() === '!') {\n                    return parserInput.$re(/^! *important/);\n                }\n            },\n            sub: function () {\n                var a, e;\n\n                parserInput.save();\n                if (parserInput.$char('(')) {\n                    a = this.addition();\n                    if (a && parserInput.$char(')')) {\n                        parserInput.forget();\n                        e = new(tree.Expression)([a]);\n                        e.parens = true;\n                        return e;\n                    }\n                    parserInput.restore(\"Expected ')'\");\n                    return;\n                }\n                parserInput.restore();\n            },\n            multiplication: function () {\n                var m, a, op, operation, isSpaced;\n                m = this.operand();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        if (parserInput.peek(/^\\/[*\\/]/)) {\n                            break;\n                        }\n\n                        parserInput.save();\n\n                        op = parserInput.$char('/') || parserInput.$char('*');\n\n                        if (!op) { parserInput.forget(); break; }\n\n                        a = this.operand();\n\n                        if (!a) { parserInput.restore(); break; }\n                        parserInput.forget();\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            addition: function () {\n                var m, a, op, operation, isSpaced;\n                m = this.multiplication();\n                if (m) {\n                    isSpaced = parserInput.isWhitespace(-1);\n                    while (true) {\n                        op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\n                        if (!op) {\n                            break;\n                        }\n                        a = this.multiplication();\n                        if (!a) {\n                            break;\n                        }\n\n                        m.parensInOp = true;\n                        a.parensInOp = true;\n                        operation = new(tree.Operation)(op, [operation || m, a], isSpaced);\n                        isSpaced = parserInput.isWhitespace(-1);\n                    }\n                    return operation || m;\n                }\n            },\n            conditions: function () {\n                var a, b, index = parserInput.i, condition;\n\n                a = this.condition();\n                if (a) {\n                    while (true) {\n                        if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\n                            break;\n                        }\n                        b = this.condition();\n                        if (!b) {\n                            break;\n                        }\n                        condition = new(tree.Condition)('or', condition || a, b, index);\n                    }\n                    return condition || a;\n                }\n            },\n            condition: function () {\n                var result, logical, next;\n                function or() {\n                    return parserInput.$str(\"or\");\n                }\n\n                result = this.conditionAnd(this);\n                if (!result) {\n                    return ;\n                }\n                logical = or();\n                if (logical) {\n                    next = this.condition();\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            conditionAnd: function () {\n                var result, logical, next;\n                function insideCondition(me) {\n                    return me.negatedCondition() || me.parenthesisCondition();\n                }\n                function and() {\n                    return parserInput.$str(\"and\");\n                }\n\n                result = insideCondition(this);\n                if (!result) {\n                    return ;\n                }\n                logical = and();\n                if (logical) {\n                    next = this.conditionAnd();\n                    if (next) {\n                        result = new(tree.Condition)(logical, result, next);\n                    } else {\n                        return ;\n                    }\n                }\n                return result;\n            },\n            negatedCondition: function () {\n                if (parserInput.$str(\"not\")) {\n                    var result = this.parenthesisCondition();\n                    if (result) {\n                        result.negate = !result.negate;\n                    }\n                    return result;\n                }\n            },\n            parenthesisCondition: function () {\n                function tryConditionFollowedByParenthesis(me) {\n                    var body;\n                    parserInput.save();\n                    body = me.condition();\n                    if (!body) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    if (!parserInput.$char(')')) {\n                        parserInput.restore();\n                        return ;\n                    }\n                    parserInput.forget();\n                    return body;\n                }\n\n                var body;\n                parserInput.save();\n                if (!parserInput.$str(\"(\")) {\n                    parserInput.restore();\n                    return ;\n                }\n                body = tryConditionFollowedByParenthesis(this);\n                if (body) {\n                    parserInput.forget();\n                    return body;\n                }\n\n                body = this.atomicCondition();\n                if (!body) {\n                    parserInput.restore();\n                    return ;\n                }\n                if (!parserInput.$char(')')) {\n                    parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\n                    return ;\n                }\n                parserInput.forget();\n                return body;\n            },\n            atomicCondition: function () {\n                var entities = this.entities, index = parserInput.i, a, b, c, op;\n\n                a = this.addition() || entities.keyword() || entities.quoted();\n                if (a) {\n                    if (parserInput.$char('>')) {\n                        if (parserInput.$char('=')) {\n                            op = \">=\";\n                        } else {\n                            op = '>';\n                        }\n                    } else\n                    if (parserInput.$char('<')) {\n                        if (parserInput.$char('=')) {\n                            op = \"<=\";\n                        } else {\n                            op = '<';\n                        }\n                    } else\n                    if (parserInput.$char('=')) {\n                        if (parserInput.$char('>')) {\n                            op = \"=>\";\n                        } else if (parserInput.$char('<')) {\n                            op = '=<';\n                        } else {\n                            op = '=';\n                        }\n                    }\n                    if (op) {\n                        b = this.addition() || entities.keyword() || entities.quoted();\n                        if (b) {\n                            c = new(tree.Condition)(op, a, b, index, false);\n                        } else {\n                            error('expected expression');\n                        }\n                    } else {\n                        c = new(tree.Condition)('=', a, new(tree.Keyword)('true'), index, false);\n                    }\n                    return c;\n                }\n            },\n\n            //\n            // An operand is anything that can be part of an operation,\n            // such as a Color, or a Variable\n            //\n            operand: function () {\n                var entities = this.entities, negate;\n\n                if (parserInput.peek(/^-[@\\$\\(]/)) {\n                    negate = parserInput.$char('-');\n                }\n\n                var o = this.sub() || entities.dimension() ||\n                        entities.color() || entities.variable() ||\n                        entities.property() || entities.call() ||\n                        entities.colorKeyword();\n\n                if (negate) {\n                    o.parensInOp = true;\n                    o = new(tree.Negative)(o);\n                }\n\n                return o;\n            },\n\n            //\n            // Expressions either represent mathematical operations,\n            // or white-space delimited Entities.\n            //\n            //     1px solid black\n            //     @var * 2\n            //\n            expression: function () {\n                var entities = [], e, delim, index = parserInput.i;\n\n                do {\n                    e = this.comment();\n                    if (e) {\n                        entities.push(e);\n                        continue;\n                    }\n                    e = this.addition() || this.entity();\n                    if (e) {\n                        entities.push(e);\n                        // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\n                        if (!parserInput.peek(/^\\/[\\/*]/)) {\n                            delim = parserInput.$char('/');\n                            if (delim) {\n                                entities.push(new(tree.Anonymous)(delim, index));\n                            }\n                        }\n                    }\n                } while (e);\n                if (entities.length > 0) {\n                    return new(tree.Expression)(entities);\n                }\n            },\n            property: function () {\n                var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\n                if (name) {\n                    return name[1];\n                }\n            },\n            ruleProperty: function () {\n                var name = [], index = [], s, k;\n\n                parserInput.save();\n\n                var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\n                if (simpleProperty) {\n                    name = [new(tree.Keyword)(simpleProperty[1])];\n                    parserInput.forget();\n                    return name;\n                }\n\n                function match(re) {\n                    var i = parserInput.i,\n                        chunk = parserInput.$re(re);\n                    if (chunk) {\n                        index.push(i);\n                        return name.push(chunk[1]);\n                    }\n                }\n\n                match(/^(\\*?)/);\n                while (true) {\n                    if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\n                        break;\n                    }\n                }\n\n                if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\n                    parserInput.forget();\n\n                    // at last, we have the complete match now. move forward,\n                    // convert name particles to tree objects and return:\n                    if (name[0] === '') {\n                        name.shift();\n                        index.shift();\n                    }\n                    for (k = 0; k < name.length; k++) {\n                        s = name[k];\n                        name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\n                            new(tree.Keyword)(s) :\n                            (s.charAt(0) === '@' ?\n                                new(tree.Variable)('@' + s.slice(2, -1), index[k], fileInfo) :\n                                new(tree.Property)('$' + s.slice(2, -1), index[k], fileInfo));\n                    }\n                    return name;\n                }\n                parserInput.restore();\n            }\n        }\n    };\n};\nParser.serializeVars = function(vars) {\n    var s = '';\n\n    for (var name in vars) {\n        if (Object.hasOwnProperty.call(vars, name)) {\n            var value = vars[name];\n            s += ((name[0] === '@') ? '' : '@') + name + ': ' + value +\n                ((String(value).slice(-1) === ';') ? '' : ';');\n        }\n    }\n\n    return s;\n};\n\nmodule.exports = Parser;\n\n},{\"../functions/function-registry\":26,\"../less-error\":36,\"../tree\":65,\"../utils\":86,\"../visitors\":90,\"./parser-input\":41}],43:[function(require,module,exports){\n/**\n * Plugin Manager\n */\nvar PluginManager = function(less) {\n    this.less = less;\n    this.visitors = [];\n    this.preProcessors = [];\n    this.postProcessors = [];\n    this.installedPlugins = [];\n    this.fileManagers = [];\n    this.iterator = -1;\n    this.pluginCache = {};\n    this.Loader = new less.PluginLoader(less);\n};\n\nvar pm, PluginManagerFactory = function(less, newFactory) {\n        if (newFactory || !pm) {\n            pm = new PluginManager(less);\n        }\n        return pm;\n    };\n\n/**\n * Adds all the plugins in the array\n * @param {Array} plugins\n */\nPluginManager.prototype.addPlugins = function(plugins) {\n    if (plugins) {\n        for (var i = 0; i < plugins.length; i++) {\n            this.addPlugin(plugins[i]);\n        }\n    }\n};\n/**\n *\n * @param plugin\n * @param {String} filename\n */\nPluginManager.prototype.addPlugin = function(plugin, filename, functionRegistry) {\n    this.installedPlugins.push(plugin);\n    if (filename) {\n        this.pluginCache[filename] = plugin;\n    }\n    if (plugin.install) {\n        plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n    }\n};\n/**\n *\n * @param filename\n */\nPluginManager.prototype.get = function(filename) {\n    return this.pluginCache[filename];\n};\n\n/**\n * Adds a visitor. The visitor object has options on itself to determine\n * when it should run.\n * @param visitor\n */\nPluginManager.prototype.addVisitor = function(visitor) {\n    this.visitors.push(visitor);\n};\n/**\n * Adds a pre processor object\n * @param {object} preProcessor\n * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\n */\nPluginManager.prototype.addPreProcessor = function(preProcessor, priority) {\n    var indexToInsertAt;\n    for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n        if (this.preProcessors[indexToInsertAt].priority >= priority) {\n            break;\n        }\n    }\n    this.preProcessors.splice(indexToInsertAt, 0, {preProcessor: preProcessor, priority: priority});\n};\n/**\n * Adds a post processor object\n * @param {object} postProcessor\n * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\n */\nPluginManager.prototype.addPostProcessor = function(postProcessor, priority) {\n    var indexToInsertAt;\n    for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n        if (this.postProcessors[indexToInsertAt].priority >= priority) {\n            break;\n        }\n    }\n    this.postProcessors.splice(indexToInsertAt, 0, {postProcessor: postProcessor, priority: priority});\n};\n/**\n *\n * @param manager\n */\nPluginManager.prototype.addFileManager = function(manager) {\n    this.fileManagers.push(manager);\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getPreProcessors = function() {\n    var preProcessors = [];\n    for (var i = 0; i < this.preProcessors.length; i++) {\n        preProcessors.push(this.preProcessors[i].preProcessor);\n    }\n    return preProcessors;\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getPostProcessors = function() {\n    var postProcessors = [];\n    for (var i = 0; i < this.postProcessors.length; i++) {\n        postProcessors.push(this.postProcessors[i].postProcessor);\n    }\n    return postProcessors;\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getVisitors = function() {\n    return this.visitors;\n};\n\nPluginManager.prototype.visitor = function() {\n    var self = this;\n    return {\n        first: function() {\n            self.iterator = -1;\n            return self.visitors[self.iterator];\n        },\n        get: function() {\n            self.iterator += 1;\n            return self.visitors[self.iterator];\n        }\n    };\n};\n/**\n *\n * @returns {Array}\n * @private\n */\nPluginManager.prototype.getFileManagers = function() {\n    return this.fileManagers;\n};\n\n//\nmodule.exports = PluginManagerFactory;\n\n},{}],44:[function(require,module,exports){\nvar PromiseConstructor,\n    utils = require('./utils');\n\nmodule.exports = function(environment, ParseTree, ImportManager) {\n    var render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.defaults(this.options, {});\n        }\n        else {\n            options = utils.defaults(this.options, options || {});\n        }\n\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                render.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, function(err, root, imports, options) {\n                if (err) { return callback(err); }\n\n                var result;\n                try {\n                    var parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                }\n                catch (err) { return callback(err); }\n\n                callback(null, result);\n            });\n        }\n    };\n\n    return render;\n};\n\n},{\"./utils\":86,\"promise\":undefined}],45:[function(require,module,exports){\nmodule.exports = function (SourceMapOutput, environment) {\n\n    var SourceMapBuilder = function (options) {\n        this.options = options;\n    };\n\n    SourceMapBuilder.prototype.toCSS = function(rootNode, options, imports) {\n        var sourceMapOutput = new SourceMapOutput(\n            {\n                contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                rootNode: rootNode,\n                contentsMap: imports.contents,\n                sourceMapFilename: this.options.sourceMapFilename,\n                sourceMapURL: this.options.sourceMapURL,\n                outputFilename: this.options.sourceMapOutputFilename,\n                sourceMapBasepath: this.options.sourceMapBasepath,\n                sourceMapRootpath: this.options.sourceMapRootpath,\n                outputSourceFiles: this.options.outputSourceFiles,\n                sourceMapGenerator: this.options.sourceMapGenerator,\n                sourceMapFileInline: this.options.sourceMapFileInline\n            });\n\n        var css = sourceMapOutput.toCSS(options);\n        this.sourceMap = sourceMapOutput.sourceMap;\n        this.sourceMapURL = sourceMapOutput.sourceMapURL;\n        if (this.options.sourceMapInputFilename) {\n            this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n        }\n        if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n            this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n        }\n        return css + this.getCSSAppendage();\n    };\n\n    SourceMapBuilder.prototype.getCSSAppendage = function() {\n\n        var sourceMapURL = this.sourceMapURL;\n        if (this.options.sourceMapFileInline) {\n            if (this.sourceMap === undefined) {\n                return \"\";\n            }\n            sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\n        }\n\n        if (sourceMapURL) {\n            return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\n        }\n        return \"\";\n    };\n\n    SourceMapBuilder.prototype.getExternalSourceMap = function() {\n        return this.sourceMap;\n    };\n    SourceMapBuilder.prototype.setExternalSourceMap = function(sourceMap) {\n        this.sourceMap = sourceMap;\n    };\n\n    SourceMapBuilder.prototype.isInline = function() {\n        return this.options.sourceMapFileInline;\n    };\n    SourceMapBuilder.prototype.getSourceMapURL = function() {\n        return this.sourceMapURL;\n    };\n    SourceMapBuilder.prototype.getOutputFilename = function() {\n        return this.options.sourceMapOutputFilename;\n    };\n    SourceMapBuilder.prototype.getInputFilename = function() {\n        return this.sourceMapInputFilename;\n    };\n\n    return SourceMapBuilder;\n};\n\n},{}],46:[function(require,module,exports){\nmodule.exports = function (environment) {\n\n    var SourceMapOutput = function (options) {\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n        if (options.sourceMapFilename) {\n            this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n        if (options.sourceMapBasepath) {\n            this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n        if (options.sourceMapRootpath) {\n            this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n            if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                this._sourceMapRootpath += '/';\n            }\n        } else {\n            this._sourceMapRootpath = \"\";\n        }\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n\n        this._lineNumber = 0;\n        this._column = 0;\n    };\n\n    SourceMapOutput.prototype.removeBasepath = function(path) {\n        if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\n            path = path.substring(this._sourceMapBasepath.length);\n            if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\n                path = path.substring(1);\n            }\n        }\n\n        return path;\n    };\n\n    SourceMapOutput.prototype.normalizeFilename = function(filename) {\n        filename = filename.replace(/\\\\/g, '/');\n        filename = this.removeBasepath(filename);\n        return (this._sourceMapRootpath || \"\") + filename;\n    };\n\n    SourceMapOutput.prototype.add = function(chunk, fileInfo, index, mapLines) {\n\n        // ignore adding empty strings\n        if (!chunk) {\n            return;\n        }\n\n        var lines,\n            sourceLines,\n            columns,\n            sourceColumns,\n            i;\n\n        if (fileInfo) {\n            var inputSource = this._contentsMap[fileInfo.filename];\n\n            // remove vars/banner added to the top of the file\n            if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                // adjust the index\n                index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                if (index < 0) { index = 0; }\n                // adjust the source\n                inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n            }\n            inputSource = inputSource.substring(0, index);\n            sourceLines = inputSource.split(\"\\n\");\n            sourceColumns = sourceLines[sourceLines.length - 1];\n        }\n\n        lines = chunk.split(\"\\n\");\n        columns = lines[lines.length - 1];\n\n        if (fileInfo) {\n            if (!mapLines) {\n                this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column},\n                    original: { line: sourceLines.length, column: sourceColumns.length},\n                    source: this.normalizeFilename(fileInfo.filename)});\n            } else {\n                for (i = 0; i < lines.length; i++) {\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0},\n                        original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0},\n                        source: this.normalizeFilename(fileInfo.filename)});\n                }\n            }\n        }\n\n        if (lines.length === 1) {\n            this._column += columns.length;\n        } else {\n            this._lineNumber += lines.length - 1;\n            this._column = columns.length;\n        }\n\n        this._css.push(chunk);\n    };\n\n    SourceMapOutput.prototype.isEmpty = function() {\n        return this._css.length === 0;\n    };\n\n    SourceMapOutput.prototype.toCSS = function(context) {\n        this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n\n        if (this._outputSourceFiles) {\n            for (var filename in this._contentsMap) {\n                if (this._contentsMap.hasOwnProperty(filename)) {\n                    var source = this._contentsMap[filename];\n                    if (this._contentsIgnoredCharsMap[filename]) {\n                        source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                    }\n                    this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                }\n            }\n        }\n\n        this._rootNode.genCSS(context, this);\n\n        if (this._css.length > 0) {\n            var sourceMapURL,\n                sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n            if (this.sourceMapURL) {\n                sourceMapURL = this.sourceMapURL;\n            } else if (this._sourceMapFilename) {\n                sourceMapURL = this._sourceMapFilename;\n            }\n            this.sourceMapURL = sourceMapURL;\n\n            this.sourceMap = sourceMapContent;\n        }\n\n        return this._css.join('');\n    };\n\n    return SourceMapOutput;\n};\n\n},{}],47:[function(require,module,exports){\nvar contexts = require(\"./contexts\"),\n    visitor = require(\"./visitors\"),\n    tree = require(\"./tree\");\n\nmodule.exports = function(root, options) {\n    options = options || {};\n    var evaldRoot,\n        variables = options.variables,\n        evalEnv = new contexts.Eval(options);\n\n    //\n    // Allows setting variables with a hash, so:\n    //\n    //   `{ color: new tree.Color('#f01') }` will become:\n    //\n    //   new tree.Declaration('@color',\n    //     new tree.Value([\n    //       new tree.Expression([\n    //         new tree.Color('#f01')\n    //       ])\n    //     ])\n    //   )\n    //\n    if (typeof variables === 'object' && !Array.isArray(variables)) {\n        variables = Object.keys(variables).map(function (k) {\n            var value = variables[k];\n\n            if (!(value instanceof tree.Value)) {\n                if (!(value instanceof tree.Expression)) {\n                    value = new tree.Expression([value]);\n                }\n                value = new tree.Value([value]);\n            }\n            return new tree.Declaration('@' + k, value, false, null, 0);\n        });\n        evalEnv.frames = [new tree.Ruleset(null, variables)];\n    }\n\n    var visitors = [\n            new visitor.JoinSelectorVisitor(),\n            new visitor.MarkVisibleSelectorsVisitor(true),\n            new visitor.ExtendVisitor(),\n            new visitor.ToCSSVisitor({compress: Boolean(options.compress)})\n        ], v, visitorIterator;\n\n    // first() / get() allows visitors to be added while visiting\n    if (options.pluginManager) {\n        visitorIterator = options.pluginManager.visitor();\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (v.isPreEvalVisitor) {\n                v.run(root);\n            }\n        }\n    }\n\n    evaldRoot = root.eval(evalEnv);\n\n    for (var i = 0; i < visitors.length; i++) {\n        visitors[i].run(evaldRoot);\n    }\n\n    if (options.pluginManager) {\n        visitorIterator.first();\n        while ((v = visitorIterator.get())) {\n            if (!v.isPreEvalVisitor) {\n                v.run(evaldRoot);\n            }\n        }\n    }\n\n    return evaldRoot;\n};\n\n},{\"./contexts\":12,\"./tree\":65,\"./visitors\":90}],48:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\n    this.value = value;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.mapLines = mapLines;\n    this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\n    this.allowRoot = true;\n    this.copyVisibilityInfo(visibilityInfo);\n};\nAnonymous.prototype = new Node();\nAnonymous.prototype.type = \"Anonymous\";\nAnonymous.prototype.eval = function () {\n    return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\n};\nAnonymous.prototype.compare = function (other) {\n    return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n};\nAnonymous.prototype.isRulesetLike = function() {\n    return this.rulesetLike;\n};\nAnonymous.prototype.genCSS = function (context, output) {\n    this.nodeVisible = Boolean(this.value);\n    if (this.nodeVisible) {\n        output.add(this.value, this._fileInfo, this._index, this.mapLines);\n    }\n};\nmodule.exports = Anonymous;\n\n},{\"./node\":73}],49:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Assignment = function (key, val) {\n    this.key = key;\n    this.value = val;\n};\n\nAssignment.prototype = new Node();\nAssignment.prototype.type = \"Assignment\";\nAssignment.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nAssignment.prototype.eval = function (context) {\n    if (this.value.eval) {\n        return new Assignment(this.key, this.value.eval(context));\n    }\n    return this;\n};\nAssignment.prototype.genCSS = function (context, output) {\n    output.add(this.key + '=');\n    if (this.value.genCSS) {\n        this.value.genCSS(context, output);\n    } else {\n        output.add(this.value);\n    }\n};\nmodule.exports = Assignment;\n\n},{\"./node\":73}],50:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    Ruleset = require(\"./ruleset\"),\n    Anonymous = require('./anonymous');\n\nvar AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n    var i;\n\n    this.name  = name;\n    this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\n    if (rules) {\n        if (Array.isArray(rules)) {\n            this.rules = rules;\n        } else {\n            this.rules = [rules];\n            this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\n        }\n        for (i = 0; i < this.rules.length; i++) {\n            this.rules[i].allowImports = true;\n        }\n        this.setParent(this.rules, this);\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.debugInfo = debugInfo;\n    this.isRooted = isRooted || false;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n};\n\nAtRule.prototype = new Node();\nAtRule.prototype.type = \"AtRule\";\nAtRule.prototype.accept = function (visitor) {\n    var value = this.value, rules = this.rules;\n    if (rules) {\n        this.rules = visitor.visitArray(rules);\n    }\n    if (value) {\n        this.value = visitor.visit(value);\n    }\n};\nAtRule.prototype.isRulesetLike = function() {\n    return this.rules || !this.isCharset();\n};\nAtRule.prototype.isCharset = function() {\n    return \"@charset\" === this.name;\n};\nAtRule.prototype.genCSS = function (context, output) {\n    var value = this.value, rules = this.rules;\n    output.add(this.name, this.fileInfo(), this.getIndex());\n    if (value) {\n        output.add(' ');\n        value.genCSS(context, output);\n    }\n    if (rules) {\n        this.outputRuleset(context, output, rules);\n    } else {\n        output.add(';');\n    }\n};\nAtRule.prototype.eval = function (context) {\n    var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n\n    // media stored inside other atrule should not bubble over it\n    // backpup media bubbling information\n    mediaPathBackup = context.mediaPath;\n    mediaBlocksBackup = context.mediaBlocks;\n    // deleted media bubbling information\n    context.mediaPath = [];\n    context.mediaBlocks = [];\n\n    if (value) {\n        value = value.eval(context);\n    }\n    if (rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        rules = [rules[0].eval(context)];\n        rules[0].root = true;\n    }\n    // restore media bubbling information\n    context.mediaPath = mediaPathBackup;\n    context.mediaBlocks = mediaBlocksBackup;\n\n    return new AtRule(this.name, value, rules,\n        this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n};\nAtRule.prototype.variable = function (name) {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.variable.call(this.rules[0], name);\n    }\n};\nAtRule.prototype.find = function () {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.find.apply(this.rules[0], arguments);\n    }\n};\nAtRule.prototype.rulesets = function () {\n    if (this.rules) {\n        // assuming that there is only one rule at this point - that is how parser constructs the rule\n        return Ruleset.prototype.rulesets.apply(this.rules[0]);\n    }\n};\nAtRule.prototype.outputRuleset = function (context, output, rules) {\n    var ruleCnt = rules.length, i;\n    context.tabLevel = (context.tabLevel | 0) + 1;\n\n    // Compressed\n    if (context.compress) {\n        output.add('{');\n        for (i = 0; i < ruleCnt; i++) {\n            rules[i].genCSS(context, output);\n        }\n        output.add('}');\n        context.tabLevel--;\n        return;\n    }\n\n    // Non-compressed\n    var tabSetStr = '\\n' + Array(context.tabLevel).join(\"  \"), tabRuleStr = tabSetStr + \"  \";\n    if (!ruleCnt) {\n        output.add(\" {\" + tabSetStr + '}');\n    } else {\n        output.add(\" {\" + tabRuleStr);\n        rules[0].genCSS(context, output);\n        for (i = 1; i < ruleCnt; i++) {\n            output.add(tabRuleStr);\n            rules[i].genCSS(context, output);\n        }\n        output.add(tabSetStr + '}');\n    }\n\n    context.tabLevel--;\n};\nmodule.exports = AtRule;\n\n},{\"./anonymous\":48,\"./node\":73,\"./ruleset\":78,\"./selector\":79}],51:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Attribute = function (key, op, value) {\n    this.key = key;\n    this.op = op;\n    this.value = value;\n};\nAttribute.prototype = new Node();\nAttribute.prototype.type = \"Attribute\";\nAttribute.prototype.eval = function (context) {\n    return new Attribute(this.key.eval ? this.key.eval(context) : this.key,\n        this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\n};\nAttribute.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context));\n};\nAttribute.prototype.toCSS = function (context) {\n    var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\n\n    if (this.op) {\n        value += this.op;\n        value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\n    }\n\n    return '[' + value + ']';\n};\nmodule.exports = Attribute;\n\n},{\"./node\":73}],52:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Anonymous = require(\"./anonymous\"),\n    FunctionCaller = require(\"../functions/function-caller\");\n//\n// A function call node.\n//\nvar Call = function (name, args, index, currentFileInfo) {\n    this.name = name;\n    this.args = args;\n    this.mathOn = name === 'calc' ? false : true;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nCall.prototype = new Node();\nCall.prototype.type = \"Call\";\nCall.prototype.accept = function (visitor) {\n    if (this.args) {\n        this.args = visitor.visitArray(this.args);\n    }\n};\n//\n// When evaluating a function call,\n// we either find the function in the functionRegistry,\n// in which case we call it, passing the  evaluated arguments,\n// if this returns null or we cannot find the function, we\n// simply print it out as it appeared originally [2].\n//\n// The reason why we evaluate the arguments, is in the case where\n// we try to pass a variable to a function, like: `saturate(@color)`.\n// The function should receive the value, not the variable.\n//\nCall.prototype.eval = function (context) {\n\n    /**\n     * Turn off math for calc(), and switch back on for evaluating nested functions\n     */\n    var currentMathContext = context.mathOn;\n    context.mathOn = this.mathOn;\n    var args = this.args.map(function (a) { return a.eval(context); });\n    context.mathOn = currentMathContext;\n\n    var result, funcCaller = new FunctionCaller(this.name, context, this.getIndex(), this.fileInfo());\n    \n    if (funcCaller.isValid()) {\n        try {\n            result = funcCaller.call(args);\n        } catch (e) {\n            throw { \n                type: e.type || \"Runtime\",\n                message: \"error evaluating function `\" + this.name + \"`\" +\n                         (e.message ? ': ' + e.message : ''),\n                index: this.getIndex(), \n                filename: this.fileInfo().filename,\n                line: e.lineNumber,\n                column: e.columnNumber\n            };\n        }\n\n        if (result !== null && result !== undefined) {\n            // Results that that are not nodes are cast as Anonymous nodes\n            // Falsy values or booleans are returned as empty nodes\n            if (!(result instanceof Node)) {\n                if (!result || result === true) {\n                    result = new Anonymous(null); \n                }\n                else {\n                    result = new Anonymous(result.toString()); \n                }\n                \n            }\n            result._index = this._index;\n            result._fileInfo = this._fileInfo;\n            return result;\n        }\n\n    }\n\n    return new Call(this.name, args, this.getIndex(), this.fileInfo());\n};\nCall.prototype.genCSS = function (context, output) {\n    output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\n\n    for (var i = 0; i < this.args.length; i++) {\n        this.args[i].genCSS(context, output);\n        if (i + 1 < this.args.length) {\n            output.add(\", \");\n        }\n    }\n\n    output.add(\")\");\n};\nmodule.exports = Call;\n\n},{\"../functions/function-caller\":25,\"./anonymous\":48,\"./node\":73}],53:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    colors = require(\"../data/colors\");\n\n//\n// RGB Colors - #ff0014, #eee\n//\nvar Color = function (rgb, a, originalForm) {\n    //\n    // The end goal here, is to parse the arguments\n    // into an integer triplet, such as `128, 255, 0`\n    //\n    // This facilitates operations and conversions.\n    //\n    if (Array.isArray(rgb)) {\n        this.rgb = rgb;\n    } else if (rgb.length == 6) {\n        this.rgb = rgb.match(/.{2}/g).map(function (c) {\n            return parseInt(c, 16);\n        });\n    } else {\n        this.rgb = rgb.split('').map(function (c) {\n            return parseInt(c + c, 16);\n        });\n    }\n    this.alpha = typeof a === 'number' ? a : 1;\n    if (typeof originalForm !== 'undefined') {\n        this.value = originalForm;\n    }\n};\n\nColor.prototype = new Node();\nColor.prototype.type = \"Color\";\n\nfunction clamp(v, max) {\n    return Math.min(Math.max(v, 0), max);\n}\n\nfunction toHex(v) {\n    return '#' + v.map(function (c) {\n        c = clamp(Math.round(c), 255);\n        return (c < 16 ? '0' : '') + c.toString(16);\n    }).join('');\n}\n\nColor.prototype.luma = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255;\n\n    r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\n    g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\n    b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\n\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\nColor.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context));\n};\nColor.prototype.toCSS = function (context, doNotCompress) {\n    var compress = context && context.compress && !doNotCompress, color, alpha;\n\n    // `value` is set if this color was originally\n    // converted from a named color string so we need\n    // to respect this and try to output named color too.\n    if (this.value) {\n        return this.value;\n    }\n\n    // If we have some transparency, the only way to represent it\n    // is via `rgba`. Otherwise, we use the hex representation,\n    // which has better compatibility with older browsers.\n    // Values are capped between `0` and `255`, rounded and zero-padded.\n    alpha = this.fround(context, this.alpha);\n    if (alpha < 1) {\n        return \"rgba(\" + this.rgb.map(function (c) {\n            return clamp(Math.round(c), 255);\n        }).concat(clamp(alpha, 1))\n            .join(',' + (compress ? '' : ' ')) + \")\";\n    }\n\n    color = this.toRGB();\n\n    if (compress) {\n        var splitcolor = color.split('');\n\n        // Convert color to short format\n        if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\n            color = '#' + splitcolor[1] + splitcolor[3] + splitcolor[5];\n        }\n    }\n\n    return color;\n};\n\n//\n// Operations have to be done per-channel, if not,\n// channels will spill onto each other. Once we have\n// our result, in the form of an integer triplet,\n// we create a new Color node to hold the result.\n//\nColor.prototype.operate = function (context, op, other) {\n    var rgb = new Array(3);\n    var alpha = this.alpha * (1 - other.alpha) + other.alpha;\n    for (var c = 0; c < 3; c++) {\n        rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\n    }\n    return new Color(rgb, alpha);\n};\nColor.prototype.toRGB = function () {\n    return toHex(this.rgb);\n};\nColor.prototype.toHSL = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255,\n        a = this.alpha;\n\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2, d = max - min;\n\n    if (max === min) {\n        h = s = 0;\n    } else {\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2;               break;\n            case b: h = (r - g) / d + 4;               break;\n        }\n        h /= 6;\n    }\n    return { h: h * 360, s: s, l: l, a: a };\n};\n// Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\nColor.prototype.toHSV = function () {\n    var r = this.rgb[0] / 255,\n        g = this.rgb[1] / 255,\n        b = this.rgb[2] / 255,\n        a = this.alpha;\n\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    if (max === 0) {\n        s = 0;\n    } else {\n        s = d / max;\n    }\n\n    if (max === min) {\n        h = 0;\n    } else {\n        switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h * 360, s: s, v: v, a: a };\n};\nColor.prototype.toARGB = function () {\n    return toHex([this.alpha * 255].concat(this.rgb));\n};\nColor.prototype.compare = function (x) {\n    return (x.rgb &&\n        x.rgb[0] === this.rgb[0] &&\n        x.rgb[1] === this.rgb[1] &&\n        x.rgb[2] === this.rgb[2] &&\n        x.alpha  === this.alpha) ? 0 : undefined;\n};\n\nColor.fromKeyword = function(keyword) {\n    var c, key = keyword.toLowerCase();\n    if (colors.hasOwnProperty(key)) {\n        c = new Color(colors[key].slice(1));\n    }\n    else if (key === \"transparent\") {\n        c = new Color([0, 0, 0], 0);\n    }\n\n    if (c) {\n        c.value = keyword;\n        return c;\n    }\n};\nmodule.exports = Color;\n\n},{\"../data/colors\":13,\"./node\":73}],54:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Combinator = function (value) {\n    if (value === ' ') {\n        this.value = ' ';\n        this.emptyOrWhitespace = true;\n    } else {\n        this.value = value ? value.trim() : \"\";\n        this.emptyOrWhitespace = this.value === \"\";\n    }\n};\nCombinator.prototype = new Node();\nCombinator.prototype.type = \"Combinator\";\nvar _noSpaceCombinators = {\n    '': true,\n    ' ': true,\n    '|': true\n};\nCombinator.prototype.genCSS = function (context, output) {\n    var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\n    output.add(spaceOrEmpty + this.value + spaceOrEmpty);\n};\nmodule.exports = Combinator;\n\n},{\"./node\":73}],55:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    getDebugInfo = require(\"./debug-info\");\n\nvar Comment = function (value, isLineComment, index, currentFileInfo) {\n    this.value = value;\n    this.isLineComment = isLineComment;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.allowRoot = true;\n};\nComment.prototype = new Node();\nComment.prototype.type = \"Comment\";\nComment.prototype.genCSS = function (context, output) {\n    if (this.debugInfo) {\n        output.add(getDebugInfo(context, this), this.fileInfo(), this.getIndex());\n    }\n    output.add(this.value);\n};\nComment.prototype.isSilent = function(context) {\n    var isCompressed = context.compress && this.value[2] !== \"!\";\n    return this.isLineComment || isCompressed;\n};\nmodule.exports = Comment;\n\n},{\"./debug-info\":57,\"./node\":73}],56:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Condition = function (op, l, r, i, negate) {\n    this.op = op.trim();\n    this.lvalue = l;\n    this.rvalue = r;\n    this._index = i;\n    this.negate = negate;\n};\nCondition.prototype = new Node();\nCondition.prototype.type = \"Condition\";\nCondition.prototype.accept = function (visitor) {\n    this.lvalue = visitor.visit(this.lvalue);\n    this.rvalue = visitor.visit(this.rvalue);\n};\nCondition.prototype.eval = function (context) {\n    var result = (function (op, a, b) {\n        switch (op) {\n            case 'and': return a && b;\n            case 'or':  return a || b;\n            default:\n                switch (Node.compare(a, b)) {\n                    case -1:\n                        return op === '<' || op === '=<' || op === '<=';\n                    case 0:\n                        return op === '=' || op === '>=' || op === '=<' || op === '<=';\n                    case 1:\n                        return op === '>' || op === '>=';\n                    default:\n                        return false;\n                }\n        }\n    })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\n\n    return this.negate ? !result : result;\n};\nmodule.exports = Condition;\n\n},{\"./node\":73}],57:[function(require,module,exports){\nvar debugInfo = function(context, ctx, lineSeparator) {\n    var result = \"\";\n    if (context.dumpLineNumbers && !context.compress) {\n        switch (context.dumpLineNumbers) {\n            case 'comments':\n                result = debugInfo.asComment(ctx);\n                break;\n            case 'mediaquery':\n                result = debugInfo.asMediaQuery(ctx);\n                break;\n            case 'all':\n                result = debugInfo.asComment(ctx) + (lineSeparator || \"\") + debugInfo.asMediaQuery(ctx);\n                break;\n        }\n    }\n    return result;\n};\n\ndebugInfo.asComment = function(ctx) {\n    return '/* line ' + ctx.debugInfo.lineNumber + ', ' + ctx.debugInfo.fileName + ' */\\n';\n};\n\ndebugInfo.asMediaQuery = function(ctx) {\n    var filenameWithProtocol = ctx.debugInfo.fileName;\n    if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n        filenameWithProtocol = 'file://' + filenameWithProtocol;\n    }\n    return '@media -sass-debug-info{filename{font-family:' +\n        filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n            if (a == '\\\\') {\n                a = '\\/';\n            }\n            return '\\\\' + a;\n        }) +\n        '}line{font-family:\\\\00003' + ctx.debugInfo.lineNumber + '}}\\n';\n};\n\nmodule.exports = debugInfo;\n\n},{}],58:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Value = require(\"./value\"),\n    Keyword = require(\"./keyword\"),\n    Anonymous = require(\"./anonymous\");\n\nvar Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\n    this.name = name;\n    this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\n    this.important = important ? ' ' + important.trim() : '';\n    this.merge = merge;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.inline = inline || false;\n    this.variable = (variable !== undefined) ? variable\n        : (name.charAt && (name.charAt(0) === '@'));\n    this.allowRoot = true;\n    this.setParent(this.value, this);\n};\n\nfunction evalName(context, name) {\n    var value = \"\", i, n = name.length,\n        output = {add: function (s) {value += s;}};\n    for (i = 0; i < n; i++) {\n        name[i].eval(context).genCSS(context, output);\n    }\n    return value;\n}\n\nDeclaration.prototype = new Node();\nDeclaration.prototype.type = \"Declaration\";\nDeclaration.prototype.genCSS = function (context, output) {\n    output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n    try {\n        this.value.genCSS(context, output);\n    }\n    catch (e) {\n        e.index = this._index;\n        e.filename = this._fileInfo.filename;\n        throw e;\n    }\n    output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? \"\" : \";\"), this._fileInfo, this._index);\n};\nDeclaration.prototype.eval = function (context) {\n    var strictMathBypass = false, name = this.name, evaldValue, variable = this.variable;\n    if (typeof name !== \"string\") {\n        // expand 'primitive' name directly to get\n        // things faster (~10% for benchmark.less):\n        name = (name.length === 1) && (name[0] instanceof Keyword) ?\n                name[0].value : evalName(context, name);\n        variable = false; // never treat expanded interpolation as new variable name\n    }\n    if (name === \"font\" && !context.strictMath) {\n        strictMathBypass = true;\n        context.strictMath = true;\n    }\n    try {\n        context.importantScope.push({});\n        evaldValue = this.value.eval(context);\n\n        if (!this.variable && evaldValue.type === \"DetachedRuleset\") {\n            throw { message: \"Rulesets cannot be evaluated on a property.\",\n                index: this.getIndex(), filename: this.fileInfo().filename };\n        }\n        var important = this.important,\n            importantResult = context.importantScope.pop();\n        if (!important && importantResult.important) {\n            important = importantResult.important;\n        }\n\n        return new Declaration(name,\n                          evaldValue,\n                          important,\n                          this.merge,\n                          this.getIndex(), this.fileInfo(), this.inline,\n                              variable);\n    }\n    catch (e) {\n        if (typeof e.index !== 'number') {\n            e.index = this.getIndex();\n            e.filename = this.fileInfo().filename;\n        }\n        throw e;\n    }\n    finally {\n        if (strictMathBypass) {\n            context.strictMath = false;\n        }\n    }\n};\nDeclaration.prototype.makeImportant = function () {\n    return new Declaration(this.name,\n                          this.value,\n                          \"!important\",\n                          this.merge,\n                          this.getIndex(), this.fileInfo(), this.inline);\n};\n\nmodule.exports = Declaration;\n},{\"./anonymous\":48,\"./keyword\":68,\"./node\":73,\"./value\":83}],59:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    contexts = require(\"../contexts\"),\n    utils = require(\"../utils\");\n\nvar DetachedRuleset = function (ruleset, frames) {\n    this.ruleset = ruleset;\n    this.frames = frames;\n    this.setParent(this.ruleset, this);\n};\nDetachedRuleset.prototype = new Node();\nDetachedRuleset.prototype.type = \"DetachedRuleset\";\nDetachedRuleset.prototype.evalFirst = true;\nDetachedRuleset.prototype.accept = function (visitor) {\n    this.ruleset = visitor.visit(this.ruleset);\n};\nDetachedRuleset.prototype.eval = function (context) {\n    var frames = this.frames || utils.copyArray(context.frames);\n    return new DetachedRuleset(this.ruleset, frames);\n};\nDetachedRuleset.prototype.callEval = function (context) {\n    return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n};\nmodule.exports = DetachedRuleset;\n\n},{\"../contexts\":12,\"../utils\":86,\"./node\":73}],60:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    unitConversions = require(\"../data/unit-conversions\"),\n    Unit = require(\"./unit\"),\n    Color = require(\"./color\");\n\n//\n// A number with a unit\n//\nvar Dimension = function (value, unit) {\n    this.value = parseFloat(value);\n    if (isNaN(this.value)) {\n        throw new Error(\"Dimension is not a number.\");\n    }\n    this.unit = (unit && unit instanceof Unit) ? unit :\n      new Unit(unit ? [unit] : undefined);\n    this.setParent(this.unit, this);\n};\n\nDimension.prototype = new Node();\nDimension.prototype.type = \"Dimension\";\nDimension.prototype.accept = function (visitor) {\n    this.unit = visitor.visit(this.unit);\n};\nDimension.prototype.eval = function (context) {\n    return this;\n};\nDimension.prototype.toColor = function () {\n    return new Color([this.value, this.value, this.value]);\n};\nDimension.prototype.genCSS = function (context, output) {\n    if ((context && context.strictUnits) && !this.unit.isSingular()) {\n        throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\n    }\n\n    var value = this.fround(context, this.value),\n        strValue = String(value);\n\n    if (value !== 0 && value < 0.000001 && value > -0.000001) {\n        // would be output 1e-6 etc.\n        strValue = value.toFixed(20).replace(/0+$/, \"\");\n    }\n\n    if (context && context.compress) {\n        // Zero values doesn't need a unit\n        if (value === 0 && this.unit.isLength()) {\n            output.add(strValue);\n            return;\n        }\n\n        // Float values doesn't need a leading zero\n        if (value > 0 && value < 1) {\n            strValue = (strValue).substr(1);\n        }\n    }\n\n    output.add(strValue);\n    this.unit.genCSS(context, output);\n};\n\n// In an operation between two Dimensions,\n// we default to the first Dimension's unit,\n// so `1px + 2` will yield `3px`.\nDimension.prototype.operate = function (context, op, other) {\n    /* jshint noempty:false */\n    var value = this._operate(context, op, this.value, other.value),\n        unit = this.unit.clone();\n\n    if (op === '+' || op === '-') {\n        if (unit.numerator.length === 0 && unit.denominator.length === 0) {\n            unit = other.unit.clone();\n            if (this.unit.backupUnit) {\n                unit.backupUnit = this.unit.backupUnit;\n            }\n        } else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) {\n            // do nothing\n        } else {\n            other = other.convertTo(this.unit.usedUnits());\n\n            if (context.strictUnits && other.unit.toString() !== unit.toString()) {\n                throw new Error(\"Incompatible units. Change the units or use the unit function. Bad units: '\" + unit.toString() +\n                    \"' and '\" + other.unit.toString() + \"'.\");\n            }\n\n            value = this._operate(context, op, this.value, other.value);\n        }\n    } else if (op === '*') {\n        unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\n        unit.cancel();\n    } else if (op === '/') {\n        unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\n        unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\n        unit.cancel();\n    }\n    return new Dimension(value, unit);\n};\nDimension.prototype.compare = function (other) {\n    var a, b;\n\n    if (!(other instanceof Dimension)) {\n        return undefined;\n    }\n\n    if (this.unit.isEmpty() || other.unit.isEmpty()) {\n        a = this;\n        b = other;\n    } else {\n        a = this.unify();\n        b = other.unify();\n        if (a.unit.compare(b.unit) !== 0) {\n            return undefined;\n        }\n    }\n\n    return Node.numericCompare(a.value, b.value);\n};\nDimension.prototype.unify = function () {\n    return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\n};\nDimension.prototype.convertTo = function (conversions) {\n    var value = this.value, unit = this.unit.clone(),\n        i, groupName, group, targetUnit, derivedConversions = {}, applyUnit;\n\n    if (typeof conversions === 'string') {\n        for (i in unitConversions) {\n            if (unitConversions[i].hasOwnProperty(conversions)) {\n                derivedConversions = {};\n                derivedConversions[i] = conversions;\n            }\n        }\n        conversions = derivedConversions;\n    }\n    applyUnit = function (atomicUnit, denominator) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit)) {\n            if (denominator) {\n                value = value / (group[atomicUnit] / group[targetUnit]);\n            } else {\n                value = value * (group[atomicUnit] / group[targetUnit]);\n            }\n\n            return targetUnit;\n        }\n\n        return atomicUnit;\n    };\n\n    for (groupName in conversions) {\n        if (conversions.hasOwnProperty(groupName)) {\n            targetUnit = conversions[groupName];\n            group = unitConversions[groupName];\n\n            unit.map(applyUnit);\n        }\n    }\n\n    unit.cancel();\n\n    return new Dimension(value, unit);\n};\nmodule.exports = Dimension;\n\n},{\"../data/unit-conversions\":15,\"./color\":53,\"./node\":73,\"./unit\":81}],61:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Paren = require(\"./paren\"),\n    Combinator = require(\"./combinator\");\n\nvar Element = function (combinator, value, index, currentFileInfo, visibilityInfo) {\n    this.combinator = combinator instanceof Combinator ?\n                      combinator : new Combinator(combinator);\n\n    if (typeof value === 'string') {\n        this.value = value.trim();\n    } else if (value) {\n        this.value = value;\n    } else {\n        this.value = \"\";\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.combinator, this);\n};\nElement.prototype = new Node();\nElement.prototype.type = \"Element\";\nElement.prototype.accept = function (visitor) {\n    var value = this.value;\n    this.combinator = visitor.visit(this.combinator);\n    if (typeof value === \"object\") {\n        this.value = visitor.visit(value);\n    }\n};\nElement.prototype.eval = function (context) {\n    return new Element(this.combinator,\n                             this.value.eval ? this.value.eval(context) : this.value,\n                             this.getIndex(),\n                             this.fileInfo(), this.visibilityInfo());\n};\nElement.prototype.clone = function () {\n    return new Element(this.combinator,\n        this.value,\n        this.getIndex(),\n        this.fileInfo(), this.visibilityInfo());\n};\nElement.prototype.genCSS = function (context, output) {\n    output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\n};\nElement.prototype.toCSS = function (context) {\n    context = context || {};\n    var value = this.value, firstSelector = context.firstSelector;\n    if (value instanceof Paren) {\n        // selector in parens should not be affected by outer selector\n        // flags (breaks only interpolated selectors - see #1973)\n        context.firstSelector = true;\n    }\n    value = value.toCSS ? value.toCSS(context) : value;\n    context.firstSelector = firstSelector;\n    if (value === '' && this.combinator.value.charAt(0) === '&') {\n        return '';\n    } else {\n        return this.combinator.toCSS(context) + value;\n    }\n};\nmodule.exports = Element;\n\n},{\"./combinator\":54,\"./node\":73,\"./paren\":75}],62:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Paren = require(\"./paren\"),\n    Comment = require(\"./comment\");\n\nvar Expression = function (value) {\n    this.value = value;\n    if (!value) {\n        throw new Error(\"Expression requires an array parameter\");\n    }\n};\nExpression.prototype = new Node();\nExpression.prototype.type = \"Expression\";\nExpression.prototype.accept = function (visitor) {\n    this.value = visitor.visitArray(this.value);\n};\nExpression.prototype.eval = function (context) {\n    var returnValue,\n        inParenthesis = this.parens && !this.parensInOp,\n        doubleParen = false;\n    if (inParenthesis) {\n        context.inParenthesis();\n    }\n    if (this.value.length > 1) {\n        returnValue = new Expression(this.value.map(function (e) {\n            return e.eval(context);\n        }));\n    } else if (this.value.length === 1) {\n        if (this.value[0].parens && !this.value[0].parensInOp) {\n            doubleParen = true;\n        }\n        returnValue = this.value[0].eval(context);\n    } else {\n        returnValue = this;\n    }\n    if (inParenthesis) {\n        context.outOfParenthesis();\n    }\n    if (this.parens && this.parensInOp && !(context.isMathOn()) && !doubleParen) {\n        returnValue = new Paren(returnValue);\n    }\n    return returnValue;\n};\nExpression.prototype.genCSS = function (context, output) {\n    for (var i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n        if (i + 1 < this.value.length) {\n            output.add(\" \");\n        }\n    }\n};\nExpression.prototype.throwAwayComments = function () {\n    this.value = this.value.filter(function(v) {\n        return !(v instanceof Comment);\n    });\n};\nmodule.exports = Expression;\n\n},{\"./comment\":55,\"./node\":73,\"./paren\":75}],63:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\");\n\nvar Extend = function Extend(selector, option, index, currentFileInfo, visibilityInfo) {\n    this.selector = selector;\n    this.option = option;\n    this.object_id = Extend.next_id++;\n    this.parent_ids = [this.object_id];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    switch (option) {\n        case \"all\":\n            this.allowBefore = true;\n            this.allowAfter = true;\n            break;\n        default:\n            this.allowBefore = false;\n            this.allowAfter = false;\n            break;\n    }\n    this.setParent(this.selector, this);\n};\nExtend.next_id = 0;\n\nExtend.prototype = new Node();\nExtend.prototype.type = \"Extend\";\nExtend.prototype.accept = function (visitor) {\n    this.selector = visitor.visit(this.selector);\n};\nExtend.prototype.eval = function (context) {\n    return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n};\nExtend.prototype.clone = function (context) {\n    return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n};\n// it concatenates (joins) all selectors in selector array\nExtend.prototype.findSelfSelectors = function (selectors) {\n    var selfElements = [],\n        i,\n        selectorElements;\n\n    for (i = 0; i < selectors.length; i++) {\n        selectorElements = selectors[i].elements;\n        // duplicate the logic in genCSS function inside the selector node.\n        // future TODO - move both logics into the selector joiner visitor\n        if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === \"\") {\n            selectorElements[0].combinator.value = ' ';\n        }\n        selfElements = selfElements.concat(selectors[i].elements);\n    }\n\n    this.selfSelectors = [new Selector(selfElements)];\n    this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\n};\nmodule.exports = Extend;\n\n},{\"./node\":73,\"./selector\":79}],64:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Media = require(\"./media\"),\n    URL = require(\"./url\"),\n    Quoted = require(\"./quoted\"),\n    Ruleset = require(\"./ruleset\"),\n    Anonymous = require(\"./anonymous\"),\n    utils = require(\"../utils\"),\n    LessError = require(\"../less-error\");\n\n//\n// CSS @import node\n//\n// The general strategy here is that we don't want to wait\n// for the parsing to be completed, before we start importing\n// the file. That's because in the context of a browser,\n// most of the time will be spent waiting for the server to respond.\n//\n// On creation, we push the import path to our import queue, though\n// `import,push`, we also pass it a callback, which it'll call once\n// the file has been fetched, and parsed.\n//\nvar Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\n    this.options = options;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.path = path;\n    this.features = features;\n    this.allowRoot = true;\n\n    if (this.options.less !== undefined || this.options.inline) {\n        this.css = !this.options.less || this.options.inline;\n    } else {\n        var pathValue = this.getPath();\n        if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\n            this.css = true;\n        }\n    }\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.features, this);\n    this.setParent(this.path, this);\n};\n\n//\n// The actual import node doesn't return anything, when converted to CSS.\n// The reason is that it's used at the evaluation stage, so that the rules\n// it imports can be treated like any other rules.\n//\n// In `eval`, we make sure all Import nodes get evaluated, recursively, so\n// we end up with a flat structure, which can easily be imported in the parent\n// ruleset.\n//\nImport.prototype = new Node();\nImport.prototype.type = \"Import\";\nImport.prototype.accept = function (visitor) {\n    if (this.features) {\n        this.features = visitor.visit(this.features);\n    }\n    this.path = visitor.visit(this.path);\n    if (!this.options.isPlugin && !this.options.inline && this.root) {\n        this.root = visitor.visit(this.root);\n    }\n};\nImport.prototype.genCSS = function (context, output) {\n    if (this.css && this.path._fileInfo.reference === undefined) {\n        output.add(\"@import \", this._fileInfo, this._index);\n        this.path.genCSS(context, output);\n        if (this.features) {\n            output.add(\" \");\n            this.features.genCSS(context, output);\n        }\n        output.add(';');\n    }\n};\nImport.prototype.getPath = function () {\n    return (this.path instanceof URL) ?\n        this.path.value.value : this.path.value;\n};\nImport.prototype.isVariableImport = function () {\n    var path = this.path;\n    if (path instanceof URL) {\n        path = path.value;\n    }\n    if (path instanceof Quoted) {\n        return path.containsVariables();\n    }\n\n    return true;\n};\nImport.prototype.evalForImport = function (context) {\n    var path = this.path;\n\n    if (path instanceof URL) {\n        path = path.value;\n    }\n\n    return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\n};\nImport.prototype.evalPath = function (context) {\n    var path = this.path.eval(context);\n    var rootpath = this._fileInfo && this._fileInfo.rootpath;\n\n    if (!(path instanceof URL)) {\n        if (rootpath) {\n            var pathValue = path.value;\n            // Add the base path if the import is relative\n            if (pathValue && context.isPathRelative(pathValue)) {\n                path.value = rootpath + pathValue;\n            }\n        }\n        path.value = context.normalizePath(path.value);\n    }\n\n    return path;\n};\nImport.prototype.eval = function (context) {\n    var result = this.doEval(context);\n    if (this.options.reference || this.blocksVisibility()) {\n        if (result.length || result.length === 0) {\n            result.forEach(function (node) {\n                node.addVisibilityBlock();\n            }\n            );\n        } else {\n            result.addVisibilityBlock();\n        }\n    }\n    return result;\n};\nImport.prototype.doEval = function (context) {\n    var ruleset, registry,\n        features = this.features && this.features.eval(context);\n\n    if (this.options.isPlugin) {\n        if (this.root && this.root.eval) {\n            try {\n                this.root.eval(context);\n            }\n            catch (e) {\n                e.message = \"Plugin error during evaluation\";\n                throw new LessError(e, this.root.imports, this.root.filename);\n            }\n        }\n        registry = context.frames[0] && context.frames[0].functionRegistry;\n        if ( registry && this.root && this.root.functions ) {\n            registry.addMultiple( this.root.functions );\n        }\n\n        return [];\n    }\n\n    if (this.skip) {\n        if (typeof this.skip === \"function\") {\n            this.skip = this.skip();\n        }\n        if (this.skip) {\n            return [];\n        }\n    }\n    if (this.options.inline) {\n        var contents = new Anonymous(this.root, 0,\n            {\n                filename: this.importedFilename,\n                reference: this.path._fileInfo && this.path._fileInfo.reference\n            }, true, true);\n\n        return this.features ? new Media([contents], this.features.value) : [contents];\n    } else if (this.css) {\n        var newImport = new Import(this.evalPath(context), features, this.options, this._index);\n        if (!newImport.css && this.error) {\n            throw this.error;\n        }\n        return newImport;\n    } else {\n        ruleset = new Ruleset(null, utils.copyArray(this.root.rules));\n        ruleset.evalImports(context);\n\n        return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\n    }\n};\nmodule.exports = Import;\n\n},{\"../less-error\":36,\"../utils\":86,\"./anonymous\":48,\"./media\":69,\"./node\":73,\"./quoted\":77,\"./ruleset\":78,\"./url\":82}],65:[function(require,module,exports){\nvar tree = Object.create(null);\n\ntree.Node = require('./node');\ntree.Color = require('./color');\ntree.AtRule = require('./atrule');\ntree.DetachedRuleset = require('./detached-ruleset');\ntree.Operation = require('./operation');\ntree.Dimension = require('./dimension');\ntree.Unit = require('./unit');\ntree.Keyword = require('./keyword');\ntree.Variable = require('./variable');\ntree.Property = require('./property');\ntree.Ruleset = require('./ruleset');\ntree.Element = require('./element');\ntree.Attribute = require('./attribute');\ntree.Combinator = require('./combinator');\ntree.Selector = require('./selector');\ntree.Quoted = require('./quoted');\ntree.Expression = require('./expression');\ntree.Declaration = require('./declaration');\ntree.Call = require('./call');\ntree.URL = require('./url');\ntree.Import = require('./import');\ntree.mixin = {\n    Call: require('./mixin-call'),\n    Definition: require('./mixin-definition')\n};\ntree.Comment = require('./comment');\ntree.Anonymous = require('./anonymous');\ntree.Value = require('./value');\ntree.JavaScript = require('./javascript');\ntree.Assignment = require('./assignment');\ntree.Condition = require('./condition');\ntree.Paren = require('./paren');\ntree.Media = require('./media');\ntree.UnicodeDescriptor = require('./unicode-descriptor');\ntree.Negative = require('./negative');\ntree.Extend = require('./extend');\ntree.VariableCall = require('./variable-call');\n\nmodule.exports = tree;\n\n},{\"./anonymous\":48,\"./assignment\":49,\"./atrule\":50,\"./attribute\":51,\"./call\":52,\"./color\":53,\"./combinator\":54,\"./comment\":55,\"./condition\":56,\"./declaration\":58,\"./detached-ruleset\":59,\"./dimension\":60,\"./element\":61,\"./expression\":62,\"./extend\":63,\"./import\":64,\"./javascript\":66,\"./keyword\":68,\"./media\":69,\"./mixin-call\":70,\"./mixin-definition\":71,\"./negative\":72,\"./node\":73,\"./operation\":74,\"./paren\":75,\"./property\":76,\"./quoted\":77,\"./ruleset\":78,\"./selector\":79,\"./unicode-descriptor\":80,\"./unit\":81,\"./url\":82,\"./value\":83,\"./variable\":85,\"./variable-call\":84}],66:[function(require,module,exports){\nvar JsEvalNode = require(\"./js-eval-node\"),\n    Dimension = require(\"./dimension\"),\n    Quoted = require(\"./quoted\"),\n    Anonymous = require(\"./anonymous\");\n\nvar JavaScript = function (string, escaped, index, currentFileInfo) {\n    this.escaped = escaped;\n    this.expression = string;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nJavaScript.prototype = new JsEvalNode();\nJavaScript.prototype.type = \"JavaScript\";\nJavaScript.prototype.eval = function(context) {\n    var result = this.evaluateJavaScript(this.expression, context);\n\n    if (typeof result === 'number') {\n        return new Dimension(result);\n    } else if (typeof result === 'string') {\n        return new Quoted('\"' + result + '\"', result, this.escaped, this._index);\n    } else if (Array.isArray(result)) {\n        return new Anonymous(result.join(', '));\n    } else {\n        return new Anonymous(result);\n    }\n};\n\nmodule.exports = JavaScript;\n\n},{\"./anonymous\":48,\"./dimension\":60,\"./js-eval-node\":67,\"./quoted\":77}],67:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\");\n\nvar JsEvalNode = function() {\n};\nJsEvalNode.prototype = new Node();\n\nJsEvalNode.prototype.evaluateJavaScript = function (expression, context) {\n    var result,\n        that = this,\n        evalContext = {};\n\n    if (!context.javascriptEnabled) {\n        throw { message: \"Inline JavaScript is not enabled. Is it set in your options?\",\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\n        return that.jsify(new Variable('@' + name, that.getIndex(), that.fileInfo()).eval(context));\n    });\n\n    try {\n        expression = new Function('return (' + expression + ')');\n    } catch (e) {\n        throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\" ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    var variables = context.frames[0].variables();\n    for (var k in variables) {\n        if (variables.hasOwnProperty(k)) {\n            /* jshint loopfunc:true */\n            evalContext[k.slice(1)] = {\n                value: variables[k].value,\n                toJS: function () {\n                    return this.value.eval(context).toCSS();\n                }\n            };\n        }\n    }\n\n    try {\n        result = expression.call(evalContext);\n    } catch (e) {\n        throw { message: \"JavaScript evaluation error: '\" + e.name + ': ' + e.message.replace(/[\"]/g, \"'\") + \"'\" ,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n    return result;\n};\nJsEvalNode.prototype.jsify = function (obj) {\n    if (Array.isArray(obj.value) && (obj.value.length > 1)) {\n        return '[' + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + ']';\n    } else {\n        return obj.toCSS();\n    }\n};\n\nmodule.exports = JsEvalNode;\n\n},{\"./node\":73,\"./variable\":85}],68:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Keyword = function (value) { this.value = value; };\nKeyword.prototype = new Node();\nKeyword.prototype.type = \"Keyword\";\nKeyword.prototype.genCSS = function (context, output) {\n    if (this.value === '%') { throw { type: \"Syntax\", message: \"Invalid % without number\" }; }\n    output.add(this.value);\n};\n\nKeyword.True = new Keyword('true');\nKeyword.False = new Keyword('false');\n\nmodule.exports = Keyword;\n\n},{\"./node\":73}],69:[function(require,module,exports){\nvar Ruleset = require(\"./ruleset\"),\n    Value = require(\"./value\"),\n    Selector = require(\"./selector\"),\n    Anonymous = require(\"./anonymous\"),\n    Expression = require(\"./expression\"),\n    AtRule = require(\"./atrule\"),\n    utils = require(\"../utils\");\n\nvar Media = function (value, features, index, currentFileInfo, visibilityInfo) {\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n\n    var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\n\n    this.features = new Value(features);\n    this.rules = [new Ruleset(selectors, value)];\n    this.rules[0].allowImports = true;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n    this.setParent(selectors, this);\n    this.setParent(this.features, this);\n    this.setParent(this.rules, this);\n};\nMedia.prototype = new AtRule();\nMedia.prototype.type = \"Media\";\nMedia.prototype.isRulesetLike = function() { return true; };\nMedia.prototype.accept = function (visitor) {\n    if (this.features) {\n        this.features = visitor.visit(this.features);\n    }\n    if (this.rules) {\n        this.rules = visitor.visitArray(this.rules);\n    }\n};\nMedia.prototype.genCSS = function (context, output) {\n    output.add('@media ', this._fileInfo, this._index);\n    this.features.genCSS(context, output);\n    this.outputRuleset(context, output, this.rules);\n};\nMedia.prototype.eval = function (context) {\n    if (!context.mediaBlocks) {\n        context.mediaBlocks = [];\n        context.mediaPath = [];\n    }\n\n    var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\n    if (this.debugInfo) {\n        this.rules[0].debugInfo = this.debugInfo;\n        media.debugInfo = this.debugInfo;\n    }\n    \n    media.features = this.features.eval(context);\n\n    context.mediaPath.push(media);\n    context.mediaBlocks.push(media);\n\n    this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\n    context.frames.unshift(this.rules[0]);\n    media.rules = [this.rules[0].eval(context)];\n    context.frames.shift();\n\n    context.mediaPath.pop();\n\n    return context.mediaPath.length === 0 ? media.evalTop(context) :\n                media.evalNested(context);\n};\nMedia.prototype.evalTop = function (context) {\n    var result = this;\n\n    // Render all dependent Media blocks.\n    if (context.mediaBlocks.length > 1) {\n        var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\n        result = new Ruleset(selectors, context.mediaBlocks);\n        result.multiMedia = true;\n        result.copyVisibilityInfo(this.visibilityInfo());\n        this.setParent(result, this);\n    }\n\n    delete context.mediaBlocks;\n    delete context.mediaPath;\n\n    return result;\n};\nMedia.prototype.evalNested = function (context) {\n    var i, value,\n        path = context.mediaPath.concat([this]);\n\n    // Extract the media-query conditions separated with `,` (OR).\n    for (i = 0; i < path.length; i++) {\n        value = path[i].features instanceof Value ?\n                    path[i].features.value : path[i].features;\n        path[i] = Array.isArray(value) ? value : [value];\n    }\n\n    // Trace all permutations to generate the resulting media-query.\n    //\n    // (a, b and c) with nested (d, e) ->\n    //    a and d\n    //    a and e\n    //    b and c and d\n    //    b and c and e\n    this.features = new Value(this.permute(path).map(function (path) {\n        path = path.map(function (fragment) {\n            return fragment.toCSS ? fragment : new Anonymous(fragment);\n        });\n\n        for (i = path.length - 1; i > 0; i--) {\n            path.splice(i, 0, new Anonymous(\"and\"));\n        }\n\n        return new Expression(path);\n    }));\n    this.setParent(this.features, this);\n\n    // Fake a tree-node that doesn't output anything.\n    return new Ruleset([], []);\n};\nMedia.prototype.permute = function (arr) {\n    if (arr.length === 0) {\n        return [];\n    } else if (arr.length === 1) {\n        return arr[0];\n    } else {\n        var result = [];\n        var rest = this.permute(arr.slice(1));\n        for (var i = 0; i < rest.length; i++) {\n            for (var j = 0; j < arr[0].length; j++) {\n                result.push([arr[0][j]].concat(rest[i]));\n            }\n        }\n        return result;\n    }\n};\nMedia.prototype.bubbleSelectors = function (selectors) {\n    if (!selectors) {\n        return;\n    }\n    this.rules = [new Ruleset(utils.copyArray(selectors), [this.rules[0]])];\n    this.setParent(this.rules, this);\n};\nmodule.exports = Media;\n\n},{\"../utils\":86,\"./anonymous\":48,\"./atrule\":50,\"./expression\":62,\"./ruleset\":78,\"./selector\":79,\"./value\":83}],70:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    MixinDefinition = require(\"./mixin-definition\"),\n    defaultFunc = require(\"../functions/default\");\n\nvar MixinCall = function (elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n    this.setParent(this.selector, this);\n};\nMixinCall.prototype = new Node();\nMixinCall.prototype.type = \"MixinCall\";\nMixinCall.prototype.accept = function (visitor) {\n    if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n    }\n    if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n    }\n};\nMixinCall.prototype.eval = function (context) {\n    var mixins, mixin, mixinPath, args = [], arg, argValue,\n        rules = [], match = false, i, m, f, isRecursive, isOneFound,\n        candidates = [], candidate, conditionResult = [], defaultResult, defFalseEitherCase = -1,\n        defNone = 0, defTrue = 1, defFalse = 2, count, originalRuleset, noArgumentsFilter;\n\n    function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n\n        for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                namespace = mixinPath[p];\n                if (namespace.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                }\n            }\n            if (mixin.matchCondition) {\n                conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n        }\n        if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n                return conditionResult[1] ?\n                    defTrue : defFalse;\n            }\n\n            return defNone;\n        }\n        return defFalseEitherCase;\n    }\n\n    for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n        if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n            for (m = 0; m < argValue.length; m++) {\n                args.push({value: argValue[m]});\n            }\n        } else {\n            args.push({name: arg.name, value: argValue});\n        }\n    }\n\n    noArgumentsFilter = function(rule) {return rule.matchArgs(null, context);};\n\n    for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true;\n\n            // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n                mixin = mixins[m].rule;\n                mixinPath = mixins[m].path;\n                isRecursive = false;\n                for (f = 0; f < context.frames.length; f++) {\n                    if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                        isRecursive = true;\n                        break;\n                    }\n                }\n                if (isRecursive) {\n                    continue;\n                }\n\n                if (mixin.matchArgs(args, context)) {\n                    candidate = {mixin: mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                    if (candidate.group !== defFalseEitherCase) {\n                        candidates.push(candidate);\n                    }\n\n                    match = true;\n                }\n            }\n\n            defaultFunc.reset();\n\n            count = [0, 0, 0];\n            for (m = 0; m < candidates.length; m++) {\n                count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n                defaultResult = defFalse;\n            } else {\n                defaultResult = defTrue;\n                if ((count[defTrue] + count[defFalse]) > 1) {\n                    throw { type: 'Runtime',\n                        message: 'Ambiguous use of `default()` found when matching for `' + this.format(args) + '`',\n                        index: this.getIndex(), filename: this.fileInfo().filename };\n                }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n                candidate = candidates[m].group;\n                if ((candidate === defNone) || (candidate === defaultResult)) {\n                    try {\n                        mixin = candidates[m].mixin;\n                        if (!(mixin instanceof MixinDefinition)) {\n                            originalRuleset = mixin.originalRuleset || mixin;\n                            mixin = new MixinDefinition(\"\", [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                            mixin.originalRuleset = originalRuleset;\n                        }\n                        var newRules = mixin.evalCall(context, args, this.important).rules;\n                        this._setVisibilityToReplacement(newRules);\n                        Array.prototype.push.apply(rules, newRules);\n                    } catch (e) {\n                        throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\n                    }\n                }\n            }\n\n            if (match) {\n                return rules;\n            }\n        }\n    }\n    if (isOneFound) {\n        throw { type:    'Runtime',\n            message: 'No matching definition was found for `' + this.format(args) + '`',\n            index:   this.getIndex(), filename: this.fileInfo().filename };\n    } else {\n        throw { type:    'Name',\n            message: this.selector.toCSS().trim() + \" is undefined\",\n            index:   this.getIndex(), filename: this.fileInfo().filename };\n    }\n};\n\nMixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n    var i, rule;\n    if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n        }\n    }\n};\nMixinCall.prototype.format = function (args) {\n    return this.selector.toCSS().trim() + '(' +\n        (args ? args.map(function (a) {\n            var argValue = \"\";\n            if (a.name) {\n                argValue += a.name + \":\";\n            }\n            if (a.value.toCSS) {\n                argValue += a.value.toCSS();\n            } else {\n                argValue += \"???\";\n            }\n            return argValue;\n        }).join(', ') : \"\") + \")\";\n};\nmodule.exports = MixinCall;\n\n},{\"../functions/default\":24,\"./mixin-definition\":71,\"./node\":73,\"./selector\":79}],71:[function(require,module,exports){\nvar Selector = require(\"./selector\"),\n    Element = require(\"./element\"),\n    Ruleset = require(\"./ruleset\"),\n    Declaration = require(\"./declaration\"),\n    Expression = require(\"./expression\"),\n    contexts = require(\"../contexts\"),\n    utils = require(\"../utils\");\n\nvar Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\n    this.name = name;\n    this.selectors = [new Selector([new Element(null, name, this._index, this._fileInfo)])];\n    this.params = params;\n    this.condition = condition;\n    this.variadic = variadic;\n    this.arity = params.length;\n    this.rules = rules;\n    this._lookups = {};\n    var optionalParameters = [];\n    this.required = params.reduce(function (count, p) {\n        if (!p.name || (p.name && !p.value)) {\n            return count + 1;\n        }\n        else {\n            optionalParameters.push(p.name);\n            return count;\n        }\n    }, 0);\n    this.optionalParameters = optionalParameters;\n    this.frames = frames;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n};\nDefinition.prototype = new Ruleset();\nDefinition.prototype.type = \"MixinDefinition\";\nDefinition.prototype.evalFirst = true;\nDefinition.prototype.accept = function (visitor) {\n    if (this.params && this.params.length) {\n        this.params = visitor.visitArray(this.params);\n    }\n    this.rules = visitor.visitArray(this.rules);\n    if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n    }\n};\nDefinition.prototype.evalParams = function (context, mixinEnv, args, evaldArguments) {\n    /* jshint boss:true */\n    var frame = new Ruleset(null, null),\n        varargs, arg,\n        params = utils.copyArray(this.params),\n        i, j, val, name, isNamedFound, argIndex, argsLength = 0;\n\n    if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\n        frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\n    }\n    mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\n\n    if (args) {\n        args = utils.copyArray(args);\n        argsLength = args.length;\n\n        for (i = 0; i < argsLength; i++) {\n            arg = args[i];\n            if (name = (arg && arg.name)) {\n                isNamedFound = false;\n                for (j = 0; j < params.length; j++) {\n                    if (!evaldArguments[j] && name === params[j].name) {\n                        evaldArguments[j] = arg.value.eval(context);\n                        frame.prependRule(new Declaration(name, arg.value.eval(context)));\n                        isNamedFound = true;\n                        break;\n                    }\n                }\n                if (isNamedFound) {\n                    args.splice(i, 1);\n                    i--;\n                    continue;\n                } else {\n                    throw { type: 'Runtime', message: \"Named argument for \" + this.name +\n                        ' ' + args[i].name + ' not found' };\n                }\n            }\n        }\n    }\n    argIndex = 0;\n    for (i = 0; i < params.length; i++) {\n        if (evaldArguments[i]) { continue; }\n\n        arg = args && args[argIndex];\n\n        if (name = params[i].name) {\n            if (params[i].variadic) {\n                varargs = [];\n                for (j = argIndex; j < argsLength; j++) {\n                    varargs.push(args[j].value.eval(context));\n                }\n                frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\n            } else {\n                val = arg && arg.value;\n                if (val) {\n                    val = val.eval(context);\n                } else if (params[i].value) {\n                    val = params[i].value.eval(mixinEnv);\n                    frame.resetCache();\n                } else {\n                    throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name +\n                        ' (' + argsLength + ' for ' + this.arity + ')' };\n                }\n\n                frame.prependRule(new Declaration(name, val));\n                evaldArguments[i] = val;\n            }\n        }\n\n        if (params[i].variadic && args) {\n            for (j = argIndex; j < argsLength; j++) {\n                evaldArguments[j] = args[j].value.eval(context);\n            }\n        }\n        argIndex++;\n    }\n\n    return frame;\n};\nDefinition.prototype.makeImportant = function() {\n    var rules = !this.rules ? this.rules : this.rules.map(function (r) {\n        if (r.makeImportant) {\n            return r.makeImportant(true);\n        } else {\n            return r;\n        }\n    });\n    var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\n    return result;\n};\nDefinition.prototype.eval = function (context) {\n    return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || utils.copyArray(context.frames));\n};\nDefinition.prototype.evalCall = function (context, args, important) {\n    var _arguments = [],\n        mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames,\n        frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments),\n        rules, ruleset;\n\n    frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\n\n    rules = utils.copyArray(this.rules);\n\n    ruleset = new Ruleset(null, rules);\n    ruleset.originalRuleset = this;\n    ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\n    if (important) {\n        ruleset = ruleset.makeImportant();\n    }\n    return ruleset;\n};\nDefinition.prototype.matchCondition = function (args, context) {\n    if (this.condition && !this.condition.eval(\n        new contexts.Eval(context,\n            [this.evalParams(context, /* the parameter variables */\n                new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\n            .concat(this.frames || []) // the parent namespace/mixin frames\n            .concat(context.frames)))) { // the current environment frames\n        return false;\n    }\n    return true;\n};\nDefinition.prototype.matchArgs = function (args, context) {\n    var allArgsCnt = (args && args.length) || 0, len, optionalParameters = this.optionalParameters;\n    var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\n        if (optionalParameters.indexOf(p.name) < 0) {\n            return count + 1;\n        } else {\n            return count;\n        }\n    }, 0);\n\n    if (!this.variadic) {\n        if (requiredArgsCnt < this.required) {\n            return false;\n        }\n        if (allArgsCnt > this.params.length) {\n            return false;\n        }\n    } else {\n        if (requiredArgsCnt < (this.required - 1)) {\n            return false;\n        }\n    }\n\n    // check patterns\n    len = Math.min(requiredArgsCnt, this.arity);\n\n    for (var i = 0; i < len; i++) {\n        if (!this.params[i].name && !this.params[i].variadic) {\n            if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nmodule.exports = Definition;\n\n},{\"../contexts\":12,\"../utils\":86,\"./declaration\":58,\"./element\":61,\"./expression\":62,\"./ruleset\":78,\"./selector\":79}],72:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Operation = require(\"./operation\"),\n    Dimension = require(\"./dimension\");\n\nvar Negative = function (node) {\n    this.value = node;\n};\nNegative.prototype = new Node();\nNegative.prototype.type = \"Negative\";\nNegative.prototype.genCSS = function (context, output) {\n    output.add('-');\n    this.value.genCSS(context, output);\n};\nNegative.prototype.eval = function (context) {\n    if (context.isMathOn()) {\n        return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\n    }\n    return new Negative(this.value.eval(context));\n};\nmodule.exports = Negative;\n\n},{\"./dimension\":60,\"./node\":73,\"./operation\":74}],73:[function(require,module,exports){\nvar Node = function() {\n    this.parent = null;\n    this.visibilityBlocks = undefined;\n    this.nodeVisible = undefined;\n    this.rootNode = null;\n    this.parsed = null;\n\n    var self = this;\n    Object.defineProperty(this, \"currentFileInfo\", {\n        get: function() { return self.fileInfo(); }\n    });\n    Object.defineProperty(this, \"index\", {\n        get: function() { return self.getIndex(); }\n    });\n\n};\nNode.prototype.setParent = function(nodes, parent) {\n    function set(node) {\n        if (node && node instanceof Node) {\n            node.parent = parent;\n        }\n    }\n    if (Array.isArray(nodes)) {\n        nodes.forEach(set);\n    }\n    else {\n        set(nodes);\n    }\n};\nNode.prototype.getIndex = function() {\n    return this._index || (this.parent && this.parent.getIndex()) || 0;\n};\nNode.prototype.fileInfo = function() {\n    return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\n};\nNode.prototype.isRulesetLike = function() { return false; };\nNode.prototype.toCSS = function (context) {\n    var strs = [];\n    this.genCSS(context, {\n        add: function(chunk, fileInfo, index) {\n            strs.push(chunk);\n        },\n        isEmpty: function () {\n            return strs.length === 0;\n        }\n    });\n    return strs.join('');\n};\nNode.prototype.genCSS = function (context, output) {\n    output.add(this.value);\n};\nNode.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nNode.prototype.eval = function () { return this; };\nNode.prototype._operate = function (context, op, a, b) {\n    switch (op) {\n        case '+': return a + b;\n        case '-': return a - b;\n        case '*': return a * b;\n        case '/': return a / b;\n    }\n};\nNode.prototype.fround = function(context, value) {\n    var precision = context && context.numPrecision;\n    // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\n    return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\n};\nNode.compare = function (a, b) {\n    /* returns:\n     -1: a < b\n     0: a = b\n     1: a > b\n     and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\n\n    if ((a.compare) &&\n        // for \"symmetric results\" force toCSS-based comparison\n        // of Quoted or Anonymous if either value is one of those\n        !(b.type === \"Quoted\" || b.type === \"Anonymous\")) {\n        return a.compare(b);\n    } else if (b.compare) {\n        return -b.compare(a);\n    } else if (a.type !== b.type) {\n        return undefined;\n    }\n\n    a = a.value;\n    b = b.value;\n    if (!Array.isArray(a)) {\n        return a === b ? 0 : undefined;\n    }\n    if (a.length !== b.length) {\n        return undefined;\n    }\n    for (var i = 0; i < a.length; i++) {\n        if (Node.compare(a[i], b[i]) !== 0) {\n            return undefined;\n        }\n    }\n    return 0;\n};\n\nNode.numericCompare = function (a, b) {\n    return a  <  b ? -1\n        : a === b ?  0\n        : a  >  b ?  1 : undefined;\n};\n// Returns true if this node represents root of ast imported by reference\nNode.prototype.blocksVisibility = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    return this.visibilityBlocks !== 0;\n};\nNode.prototype.addVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks + 1;\n};\nNode.prototype.removeVisibilityBlock = function () {\n    if (this.visibilityBlocks == null) {\n        this.visibilityBlocks = 0;\n    }\n    this.visibilityBlocks = this.visibilityBlocks - 1;\n};\n// Turns on node visibility - if called node will be shown in output regardless\n// of whether it comes from import by reference or not\nNode.prototype.ensureVisibility = function () {\n    this.nodeVisible = true;\n};\n// Turns off node visibility - if called node will NOT be shown in output regardless\n// of whether it comes from import by reference or not\nNode.prototype.ensureInvisibility = function () {\n    this.nodeVisible = false;\n};\n// return values:\n// false - the node must not be visible\n// true - the node must be visible\n// undefined or null - the node has the same visibility as its parent\nNode.prototype.isVisible = function () {\n    return this.nodeVisible;\n};\nNode.prototype.visibilityInfo = function() {\n    return {\n        visibilityBlocks: this.visibilityBlocks,\n        nodeVisible: this.nodeVisible\n    };\n};\nNode.prototype.copyVisibilityInfo = function(info) {\n    if (!info) {\n        return;\n    }\n    this.visibilityBlocks = info.visibilityBlocks;\n    this.nodeVisible = info.nodeVisible;\n};\nmodule.exports = Node;\n\n},{}],74:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Color = require(\"./color\"),\n    Dimension = require(\"./dimension\");\n\nvar Operation = function (op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n};\nOperation.prototype = new Node();\nOperation.prototype.type = \"Operation\";\nOperation.prototype.accept = function (visitor) {\n    this.operands = visitor.visit(this.operands);\n};\nOperation.prototype.eval = function (context) {\n    var a = this.operands[0].eval(context),\n        b = this.operands[1].eval(context);\n\n    if (context.isMathOn()) {\n        if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n        }\n        if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n        }\n        if (!a.operate) {\n            throw { type: \"Operation\",\n                message: \"Operation on an invalid type\" };\n        }\n\n        return a.operate(context, this.op, b);\n    } else {\n        return new Operation(this.op, [a, b], this.isSpaced);\n    }\n};\nOperation.prototype.genCSS = function (context, output) {\n    this.operands[0].genCSS(context, output);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    output.add(this.op);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    this.operands[1].genCSS(context, output);\n};\n\nmodule.exports = Operation;\n\n},{\"./color\":53,\"./dimension\":60,\"./node\":73}],75:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Paren = function (node) {\n    this.value = node;\n};\nParen.prototype = new Node();\nParen.prototype.type = \"Paren\";\nParen.prototype.genCSS = function (context, output) {\n    output.add('(');\n    this.value.genCSS(context, output);\n    output.add(')');\n};\nParen.prototype.eval = function (context) {\n    return new Paren(this.value.eval(context));\n};\nmodule.exports = Paren;\n\n},{\"./node\":73}],76:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Declaration = require(\"./declaration\");\n\nvar Property = function (name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nProperty.prototype = new Node();\nProperty.prototype.type = \"Property\";\nProperty.prototype.eval = function (context) {\n    var property, name = this.name;\n    // TODO: shorten this reference\n    var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\n\n    if (this.evaluating) {\n        throw { type: 'Name',\n            message: \"Recursive property reference for \" + name,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    this.evaluating = true;\n\n    property = this.find(context.frames, function (frame) {\n\n        var v, vArr = frame.property(name);\n        if (vArr) {\n            for (var i = 0; i < vArr.length; i++) {\n                v = vArr[i];\n\n                vArr[i] = new Declaration(v.name,\n                    v.value,\n                    v.important,\n                    v.merge,\n                    v.index,\n                    v.currentFileInfo,\n                    v.inline,\n                    v.variable\n                );\n            }\n            mergeRules(vArr);\n\n            v = vArr[vArr.length - 1];\n            if (v.important) {\n                var importantScope = context.importantScope[context.importantScope.length - 1];\n                importantScope.important = v.important;\n            }\n            v = v.value.eval(context);\n            return v;\n        }\n    });\n    if (property) {\n        this.evaluating = false;\n        return property;\n    } else {\n        throw { type: 'Name',\n            message: \"Property '\" + name + \"' is undefined\",\n            filename: this.currentFileInfo.filename,\n            index: this.index };\n    }\n};\nProperty.prototype.find = function (obj, fun) {\n    for (var i = 0, r; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n        if (r) { return r; }\n    }\n    return null;\n};\nmodule.exports = Property;\n\n},{\"./declaration\":58,\"./node\":73}],77:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\"),\n    Property = require(\"./property\");\n\nvar Quoted = function (str, content, escaped, index, currentFileInfo) {\n    this.escaped = (escaped == null) ? true : escaped;\n    this.value = content || '';\n    this.quote = str.charAt(0);\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nQuoted.prototype = new Node();\nQuoted.prototype.type = \"Quoted\";\nQuoted.prototype.genCSS = function (context, output) {\n    if (!this.escaped) {\n        output.add(this.quote, this.fileInfo(), this.getIndex());\n    }\n    output.add(this.value);\n    if (!this.escaped) {\n        output.add(this.quote);\n    }\n};\nQuoted.prototype.containsVariables = function() {\n    return this.value.match(/@\\{([\\w-]+)\\}/);\n};\nQuoted.prototype.eval = function (context) {\n    var that = this, value = this.value;\n    var variableReplacement = function (_, name) {\n        var v = new Variable('@' + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return (v instanceof Quoted) ? v.value : v.toCSS();\n    };\n    var propertyReplacement = function (_, name) {\n        var v = new Property('$' + name, that.getIndex(), that.fileInfo()).eval(context, true);\n        return (v instanceof Quoted) ? v.value : v.toCSS();\n    };\n    function iterativeReplace(value, regexp, replacementFnc) {\n        var evaluatedValue = value;\n        do {\n            value = evaluatedValue;\n            evaluatedValue = value.replace(regexp, replacementFnc);\n        } while (value !== evaluatedValue);\n        return evaluatedValue;\n    }\n    value = iterativeReplace(value, /@\\{([\\w-]+)\\}/g, variableReplacement);\n    value = iterativeReplace(value, /\\$\\{([\\w-]+)\\}/g, propertyReplacement);\n    return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\n};\nQuoted.prototype.compare = function (other) {\n    // when comparing quoted strings allow the quote to differ\n    if (other.type === \"Quoted\" && !this.escaped && !other.escaped) {\n        return Node.numericCompare(this.value, other.value);\n    } else {\n        return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\n    }\n};\nmodule.exports = Quoted;\n\n},{\"./node\":73,\"./property\":76,\"./variable\":85}],78:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Declaration = require(\"./declaration\"),\n    Keyword = require(\"./keyword\"),\n    Comment = require(\"./comment\"),\n    Paren = require(\"./paren\"),\n    Selector = require(\"./selector\"),\n    Element = require(\"./element\"),\n    Anonymous = require(\"./anonymous\"),\n    contexts = require(\"../contexts\"),\n    globalFunctionRegistry = require(\"../functions/function-registry\"),\n    defaultFunc = require(\"../functions/default\"),\n    getDebugInfo = require(\"./debug-info\"),\n    utils = require(\"../utils\");\n\nvar Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\n    this.selectors = selectors;\n    this.rules = rules;\n    this._lookups = {};\n    this._variables = null;\n    this._properties = null;\n    this.strictImports = strictImports;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n\n    this.setParent(this.selectors, this);\n    this.setParent(this.rules, this);\n\n};\nRuleset.prototype = new Node();\nRuleset.prototype.type = \"Ruleset\";\nRuleset.prototype.isRuleset = true;\nRuleset.prototype.isRulesetLike = function() { return true; };\nRuleset.prototype.accept = function (visitor) {\n    if (this.paths) {\n        this.paths = visitor.visitArray(this.paths, true);\n    } else if (this.selectors) {\n        this.selectors = visitor.visitArray(this.selectors);\n    }\n    if (this.rules && this.rules.length) {\n        this.rules = visitor.visitArray(this.rules);\n    }\n};\nRuleset.prototype.eval = function (context) {\n    var thisSelectors = this.selectors, selectors,\n        selCnt, selector, i, hasOnePassingSelector = false;\n\n    if (thisSelectors && (selCnt = thisSelectors.length)) {\n        selectors = new Array(selCnt);\n        defaultFunc.error({\n            type: \"Syntax\",\n            message: \"it is currently only allowed in parametric mixin guards,\"\n        });\n        for (i = 0; i < selCnt; i++) {\n            selector = thisSelectors[i].eval(context);\n            selectors[i] = selector;\n            if (selector.evaldCondition) {\n                hasOnePassingSelector = true;\n            }\n        }\n        defaultFunc.reset();\n    } else {\n        hasOnePassingSelector = true;\n    }\n\n    var rules = this.rules ? utils.copyArray(this.rules) : null,\n        ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo()),\n        rule, subRule;\n\n    ruleset.originalRuleset = this;\n    ruleset.root = this.root;\n    ruleset.firstRoot = this.firstRoot;\n    ruleset.allowImports = this.allowImports;\n\n    if (this.debugInfo) {\n        ruleset.debugInfo = this.debugInfo;\n    }\n\n    if (!hasOnePassingSelector) {\n        rules.length = 0;\n    }\n\n    // inherit a function registry from the frames stack when possible;\n    // otherwise from the global registry\n    ruleset.functionRegistry = (function (frames) {\n        var i = 0,\n            n = frames.length,\n            found;\n        for ( ; i !== n ; ++i ) {\n            found = frames[ i ].functionRegistry;\n            if ( found ) { return found; }\n        }\n        return globalFunctionRegistry;\n    }(context.frames)).inherit();\n\n    // push the current ruleset to the frames stack\n    var ctxFrames = context.frames;\n    ctxFrames.unshift(ruleset);\n\n    // currrent selectors\n    var ctxSelectors = context.selectors;\n    if (!ctxSelectors) {\n        context.selectors = ctxSelectors = [];\n    }\n    ctxSelectors.unshift(this.selectors);\n\n    // Evaluate imports\n    if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\n        ruleset.evalImports(context);\n    }\n\n    // Store the frames around mixin definitions,\n    // so they can be evaluated like closures when the time comes.\n    var rsRules = ruleset.rules;\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (rule.evalFirst) {\n            rsRules[i] = rule.eval(context);\n        }\n    }\n\n    var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\n\n    // Evaluate mixin calls.\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (rule.type === \"MixinCall\") {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).filter(function(r) {\n                if ((r instanceof Declaration) && r.variable) {\n                    // do not pollute the scope if the variable is\n                    // already there. consider returning false here\n                    // but we need a way to \"return\" variable from mixins\n                    return !(ruleset.variable(r.name));\n                }\n                return true;\n            });\n            rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n            i += rules.length - 1;\n            ruleset.resetCache();\n        } else if (rule.type ===  \"VariableCall\") {\n            /* jshint loopfunc:true */\n            rules = rule.eval(context).rules.filter(function(r) {\n                if ((r instanceof Declaration) && r.variable) {\n                    // do not pollute the scope at all\n                    return false;\n                }\n                return true;\n            });\n            rsRules.splice.apply(rsRules, [i, 1].concat(rules));\n            i += rules.length - 1;\n            ruleset.resetCache();\n        }\n    }\n\n    // Evaluate everything else\n    for (i = 0; (rule = rsRules[i]); i++) {\n        if (!rule.evalFirst) {\n            rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\n        }\n    }\n\n    // Evaluate everything else\n    for (i = 0; (rule = rsRules[i]); i++) {\n        // for rulesets, check if it is a css guard and can be removed\n        if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\n            // check if it can be folded in (e.g. & where)\n            if (rule.selectors[0].isJustParentSelector()) {\n                rsRules.splice(i--, 1);\n\n                for (var j = 0; (subRule = rule.rules[j]); j++) {\n                    if (subRule instanceof Node) {\n                        subRule.copyVisibilityInfo(rule.visibilityInfo());\n                        if (!(subRule instanceof Declaration) || !subRule.variable) {\n                            rsRules.splice(++i, 0, subRule);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Pop the stack\n    ctxFrames.shift();\n    ctxSelectors.shift();\n\n    if (context.mediaBlocks) {\n        for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\n            context.mediaBlocks[i].bubbleSelectors(selectors);\n        }\n    }\n\n    return ruleset;\n};\nRuleset.prototype.evalImports = function(context) {\n    var rules = this.rules, i, importRules;\n    if (!rules) { return; }\n\n    for (i = 0; i < rules.length; i++) {\n        if (rules[i].type === \"Import\") {\n            importRules = rules[i].eval(context);\n            if (importRules && (importRules.length || importRules.length === 0)) {\n                rules.splice.apply(rules, [i, 1].concat(importRules));\n                i += importRules.length - 1;\n            } else {\n                rules.splice(i, 1, importRules);\n            }\n            this.resetCache();\n        }\n    }\n};\nRuleset.prototype.makeImportant = function() {\n    var result = new Ruleset(this.selectors, this.rules.map(function (r) {\n        if (r.makeImportant) {\n            return r.makeImportant();\n        } else {\n            return r;\n        }\n    }), this.strictImports, this.visibilityInfo());\n\n    return result;\n};\nRuleset.prototype.matchArgs = function (args) {\n    return !args || args.length === 0;\n};\n// lets you call a css selector with a guard\nRuleset.prototype.matchCondition = function (args, context) {\n    var lastSelector = this.selectors[this.selectors.length - 1];\n    if (!lastSelector.evaldCondition) {\n        return false;\n    }\n    if (lastSelector.condition &&\n        !lastSelector.condition.eval(\n            new contexts.Eval(context,\n                context.frames))) {\n        return false;\n    }\n    return true;\n};\nRuleset.prototype.resetCache = function () {\n    this._rulesets = null;\n    this._variables = null;\n    this._properties = null;\n    this._lookups = {};\n};\nRuleset.prototype.variables = function () {\n    if (!this._variables) {\n        this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable === true) {\n                hash[r.name] = r;\n            }\n            // when evaluating variables in an import statement, imports have not been eval'd\n            // so we need to go inside import statements.\n            // guard against root being a string (in the case of inlined less)\n            if (r.type === \"Import\" && r.root && r.root.variables) {\n                var vars = r.root.variables();\n                for (var name in vars) {\n                    if (vars.hasOwnProperty(name)) {\n                        hash[name] = vars[name];\n                    }\n                }\n            }\n            return hash;\n        }, {});\n    }\n    return this._variables;\n};\nRuleset.prototype.properties = function () {\n    if (!this._properties) {\n        this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\n            if (r instanceof Declaration && r.variable !== true) {\n                var name = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\n                    r.name[0].value : r.name;\n                // Properties don't overwrite as they can merge\n                if (!hash['$' + name]) {\n                    hash['$' + name] = [ r ];\n                }\n                else {\n                    hash['$' + name].push(r);\n                }\n            }\n            return hash;\n        }, {});\n    }\n    return this._properties;\n};\nRuleset.prototype.variable = function (name) {\n    var decl = this.variables()[name];\n    if (decl) {\n        return this.parseValue(decl);\n    }\n};\nRuleset.prototype.property = function (name) {\n    var decl = this.properties()[name];\n    if (decl) {\n        return this.parseValue(decl);\n    }\n};\nRuleset.prototype.parseValue = function(toParse) {\n    var self = this;\n    function transformDeclaration(decl) {\n        if (decl.value instanceof Anonymous && !decl.parsed) {\n            this.parse.parseNode(\n                decl.value.value, \n                [\"value\", \"important\"], \n                decl.value.getIndex(), \n                decl.fileInfo(), \n                function(err, result) {\n                    if (err) {\n                        decl.parsed = true;\n                    }\n                    if (result) {\n                        decl.value = result[0];\n                        decl.important = result[1] || '';\n                        decl.parsed = true;\n                    }\n                });\n\n            return decl;\n        }\n        else {\n            return decl;\n        }\n    }\n    if (!Array.isArray(toParse)) {\n        return transformDeclaration.call(self, toParse);\n    }\n    else {\n        var nodes = [];\n        toParse.forEach(function(n) {\n            nodes.push(transformDeclaration.call(self, n));\n        });\n        return nodes;\n    }\n};\nRuleset.prototype.rulesets = function () {\n    if (!this.rules) { return []; }\n\n    var filtRules = [], rules = this.rules,\n        i, rule;\n\n    for (i = 0; (rule = rules[i]); i++) {\n        if (rule.isRuleset) {\n            filtRules.push(rule);\n        }\n    }\n\n    return filtRules;\n};\nRuleset.prototype.prependRule = function (rule) {\n    var rules = this.rules;\n    if (rules) {\n        rules.unshift(rule);\n    } else {\n        this.rules = [ rule ];\n    }\n    this.setParent(rule, this);\n};\nRuleset.prototype.find = function (selector, self, filter) {\n    self = self || this;\n    var rules = [], match, foundMixins,\n        key = selector.toCSS();\n\n    if (key in this._lookups) { return this._lookups[key]; }\n\n    this.rulesets().forEach(function (rule) {\n        if (rule !== self) {\n            for (var j = 0; j < rule.selectors.length; j++) {\n                match = selector.match(rule.selectors[j]);\n                if (match) {\n                    if (selector.elements.length > match) {\n                        if (!filter || filter(rule)) {\n                            foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\n                            for (var i = 0; i < foundMixins.length; ++i) {\n                                foundMixins[i].path.push(rule);\n                            }\n                            Array.prototype.push.apply(rules, foundMixins);\n                        }\n                    } else {\n                        rules.push({ rule: rule, path: []});\n                    }\n                    break;\n                }\n            }\n        }\n    });\n    this._lookups[key] = rules;\n    return rules;\n};\nRuleset.prototype.genCSS = function (context, output) {\n    var i, j,\n        charsetRuleNodes = [],\n        ruleNodes = [],\n        debugInfo,     // Line number debugging\n        rule,\n        path;\n\n    context.tabLevel = (context.tabLevel || 0);\n\n    if (!this.root) {\n        context.tabLevel++;\n    }\n\n    var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join(\"  \"),\n        tabSetStr = context.compress ? '' : Array(context.tabLevel).join(\"  \"),\n        sep;\n\n    var charsetNodeIndex = 0;\n    var importNodeIndex = 0;\n    for (i = 0; (rule = this.rules[i]); i++) {\n        if (rule instanceof Comment) {\n            if (importNodeIndex === i) {\n                importNodeIndex++;\n            }\n            ruleNodes.push(rule);\n        } else if (rule.isCharset && rule.isCharset()) {\n            ruleNodes.splice(charsetNodeIndex, 0, rule);\n            charsetNodeIndex++;\n            importNodeIndex++;\n        } else if (rule.type === \"Import\") {\n            ruleNodes.splice(importNodeIndex, 0, rule);\n            importNodeIndex++;\n        } else {\n            ruleNodes.push(rule);\n        }\n    }\n    ruleNodes = charsetRuleNodes.concat(ruleNodes);\n\n    // If this is the root node, we don't render\n    // a selector, or {}.\n    if (!this.root) {\n        debugInfo = getDebugInfo(context, this, tabSetStr);\n\n        if (debugInfo) {\n            output.add(debugInfo);\n            output.add(tabSetStr);\n        }\n\n        var paths = this.paths, pathCnt = paths.length,\n            pathSubCnt;\n\n        sep = context.compress ? ',' : (',\\n' + tabSetStr);\n\n        for (i = 0; i < pathCnt; i++) {\n            path = paths[i];\n            if (!(pathSubCnt = path.length)) { continue; }\n            if (i > 0) { output.add(sep); }\n\n            context.firstSelector = true;\n            path[0].genCSS(context, output);\n\n            context.firstSelector = false;\n            for (j = 1; j < pathSubCnt; j++) {\n                path[j].genCSS(context, output);\n            }\n        }\n\n        output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\n    }\n\n    // Compile rules and rulesets\n    for (i = 0; (rule = ruleNodes[i]); i++) {\n\n        if (i + 1 === ruleNodes.length) {\n            context.lastRule = true;\n        }\n\n        var currentLastRule = context.lastRule;\n        if (rule.isRulesetLike(rule)) {\n            context.lastRule = false;\n        }\n\n        if (rule.genCSS) {\n            rule.genCSS(context, output);\n        } else if (rule.value) {\n            output.add(rule.value.toString());\n        }\n\n        context.lastRule = currentLastRule;\n\n        if (!context.lastRule && rule.isVisible()) {\n            output.add(context.compress ? '' : ('\\n' + tabRuleStr));\n        } else {\n            context.lastRule = false;\n        }\n    }\n\n    if (!this.root) {\n        output.add((context.compress ? '}' : '\\n' + tabSetStr + '}'));\n        context.tabLevel--;\n    }\n\n    if (!output.isEmpty() && !context.compress && this.firstRoot) {\n        output.add('\\n');\n    }\n};\n\nRuleset.prototype.joinSelectors = function (paths, context, selectors) {\n    for (var s = 0; s < selectors.length; s++) {\n        this.joinSelector(paths, context, selectors[s]);\n    }\n};\n\nRuleset.prototype.joinSelector = function (paths, context, selector) {\n\n    function createParenthesis(elementsToPak, originalElement) {\n        var replacementParen, j;\n        if (elementsToPak.length === 0) {\n            replacementParen = new Paren(elementsToPak[0]);\n        } else {\n            var insideParent = new Array(elementsToPak.length);\n            for (j = 0; j < elementsToPak.length; j++) {\n                insideParent[j] = new Element(null, elementsToPak[j], originalElement._index, originalElement._fileInfo);\n            }\n            replacementParen = new Paren(new Selector(insideParent));\n        }\n        return replacementParen;\n    }\n\n    function createSelector(containedElement, originalElement) {\n        var element, selector;\n        element = new Element(null, containedElement, originalElement._index, originalElement._fileInfo);\n        selector = new Selector([element]);\n        return selector;\n    }\n\n    // joins selector path from `beginningPath` with selector path in `addPath`\n    // `replacedElement` contains element that is being replaced by `addPath`\n    // returns concatenated path\n    function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\n        var newSelectorPath, lastSelector, newJoinedSelector;\n        // our new selector path\n        newSelectorPath = [];\n\n        // construct the joined selector - if & is the first thing this will be empty,\n        // if not newJoinedSelector will be the last set of elements in the selector\n        if (beginningPath.length > 0) {\n            newSelectorPath = utils.copyArray(beginningPath);\n            lastSelector = newSelectorPath.pop();\n            newJoinedSelector = originalSelector.createDerived(utils.copyArray(lastSelector.elements));\n        }\n        else {\n            newJoinedSelector = originalSelector.createDerived([]);\n        }\n\n        if (addPath.length > 0) {\n            // /deep/ is a combinator that is valid without anything in front of it\n            // so if the & does not have a combinator that is \"\" or \" \" then\n            // and there is a combinator on the parent, then grab that.\n            // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\n            var combinator = replacedElement.combinator, parentEl = addPath[0].elements[0];\n            if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\n                combinator = parentEl.combinator;\n            }\n            // join the elements so far with the first part of the parent\n            newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement._index, replacedElement._fileInfo));\n            newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\n        }\n\n        // now add the joined selector - but only if it is not empty\n        if (newJoinedSelector.elements.length !== 0) {\n            newSelectorPath.push(newJoinedSelector);\n        }\n\n        // put together the parent selectors after the join (e.g. the rest of the parent)\n        if (addPath.length > 1) {\n            var restOfPath = addPath.slice(1);\n            restOfPath = restOfPath.map(function (selector) {\n                return selector.createDerived(selector.elements, []);\n            });\n            newSelectorPath = newSelectorPath.concat(restOfPath);\n        }\n        return newSelectorPath;\n    }\n\n    // joins selector path from `beginningPath` with every selector path in `addPaths` array\n    // `replacedElement` contains element that is being replaced by `addPath`\n    // returns array with all concatenated paths\n    function addAllReplacementsIntoPath( beginningPath, addPaths, replacedElement, originalSelector, result) {\n        var j;\n        for (j = 0; j < beginningPath.length; j++) {\n            var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\n            result.push(newSelectorPath);\n        }\n        return result;\n    }\n\n    function mergeElementsOnToSelectors(elements, selectors) {\n        var i, sel;\n\n        if (elements.length === 0) {\n            return ;\n        }\n        if (selectors.length === 0) {\n            selectors.push([ new Selector(elements) ]);\n            return;\n        }\n\n        for (i = 0; (sel = selectors[i]); i++) {\n            // if the previous thing in sel is a parent this needs to join on to it\n            if (sel.length > 0) {\n                sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\n            }\n            else {\n                sel.push(new Selector(elements));\n            }\n        }\n    }\n\n    // replace all parent selectors inside `inSelector` by content of `context` array\n    // resulting selectors are returned inside `paths` array\n    // returns true if `inSelector` contained at least one parent selector\n    function replaceParentSelector(paths, context, inSelector) {\n        // The paths are [[Selector]]\n        // The first list is a list of comma separated selectors\n        // The inner list is a list of inheritance separated selectors\n        // e.g.\n        // .a, .b {\n        //   .c {\n        //   }\n        // }\n        // == [[.a] [.c]] [[.b] [.c]]\n        //\n        var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\n        function findNestedSelector(element) {\n            var maybeSelector;\n            if (!(element.value instanceof Paren)) {\n                return null;\n            }\n\n            maybeSelector = element.value.value;\n            if (!(maybeSelector instanceof Selector)) {\n                return null;\n            }\n\n            return maybeSelector;\n        }\n\n        // the elements from the current selector so far\n        currentElements = [];\n        // the current list of new selectors to add to the path.\n        // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\n        // by the parents\n        newSelectors = [\n            []\n        ];\n\n        for (i = 0; (el = inSelector.elements[i]); i++) {\n            // non parent reference elements just get added\n            if (el.value !== \"&\") {\n                var nestedSelector = findNestedSelector(el);\n                if (nestedSelector != null) {\n                    // merge the current list of non parent selector elements\n                    // on to the current list of selectors to add\n                    mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                    var nestedPaths = [], replaced, replacedNewSelectors = [];\n                    replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\n                    hadParentSelector = hadParentSelector || replaced;\n                    // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\n                    for (k = 0; k < nestedPaths.length; k++) {\n                        var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\n                        addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\n                    }\n                    newSelectors = replacedNewSelectors;\n                    currentElements = [];\n\n                } else {\n                    currentElements.push(el);\n                }\n\n            } else {\n                hadParentSelector = true;\n                // the new list of selectors to add\n                selectorsMultiplied = [];\n\n                // merge the current list of non parent selector elements\n                // on to the current list of selectors to add\n                mergeElementsOnToSelectors(currentElements, newSelectors);\n\n                // loop through our current selectors\n                for (j = 0; j < newSelectors.length; j++) {\n                    sel = newSelectors[j];\n                    // if we don't have any parent paths, the & might be in a mixin so that it can be used\n                    // whether there are parents or not\n                    if (context.length === 0) {\n                        // the combinator used on el should now be applied to the next element instead so that\n                        // it is not lost\n                        if (sel.length > 0) {\n                            sel[0].elements.push(new Element(el.combinator, '', el._index, el._fileInfo));\n                        }\n                        selectorsMultiplied.push(sel);\n                    }\n                    else {\n                        // and the parent selectors\n                        for (k = 0; k < context.length; k++) {\n                            // We need to put the current selectors\n                            // then join the last selector's elements on to the parents selectors\n                            var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\n                            // add that to our new set of selectors\n                            selectorsMultiplied.push(newSelectorPath);\n                        }\n                    }\n                }\n\n                // our new selectors has been multiplied, so reset the state\n                newSelectors = selectorsMultiplied;\n                currentElements = [];\n            }\n        }\n\n        // if we have any elements left over (e.g. .a& .b == .b)\n        // add them on to all the current selectors\n        mergeElementsOnToSelectors(currentElements, newSelectors);\n\n        for (i = 0; i < newSelectors.length; i++) {\n            length = newSelectors[i].length;\n            if (length > 0) {\n                paths.push(newSelectors[i]);\n                lastSelector = newSelectors[i][length - 1];\n                newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\n            }\n        }\n\n        return hadParentSelector;\n    }\n\n    function deriveSelector(visibilityInfo, deriveFrom) {\n        var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\n        newSelector.copyVisibilityInfo(visibilityInfo);\n        return newSelector;\n    }\n\n    // joinSelector code follows\n    var i, newPaths, hadParentSelector;\n\n    newPaths = [];\n    hadParentSelector = replaceParentSelector(newPaths, context, selector);\n\n    if (!hadParentSelector) {\n        if (context.length > 0) {\n            newPaths = [];\n            for (i = 0; i < context.length; i++) {\n\n                var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\n\n                concatenated.push(selector);\n                newPaths.push(concatenated);\n            }\n        }\n        else {\n            newPaths = [[selector]];\n        }\n    }\n\n    for (i = 0; i < newPaths.length; i++) {\n        paths.push(newPaths[i]);\n    }\n\n};\nmodule.exports = Ruleset;\n\n},{\"../contexts\":12,\"../functions/default\":24,\"../functions/function-registry\":26,\"../utils\":86,\"./anonymous\":48,\"./comment\":55,\"./debug-info\":57,\"./declaration\":58,\"./element\":61,\"./keyword\":68,\"./node\":73,\"./paren\":75,\"./selector\":79}],79:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Element = require(\"./element\"),\n    LessError = require(\"../less-error\");\n\nvar Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\n    this.extendList = extendList;\n    this.condition = condition;\n    this.evaldCondition = !condition;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.elements = this.getElements(elements);\n    this.mixinElements_ = undefined;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.setParent(this.elements, this);\n};\nSelector.prototype = new Node();\nSelector.prototype.type = \"Selector\";\nSelector.prototype.accept = function (visitor) {\n    if (this.elements) {\n        this.elements = visitor.visitArray(this.elements);\n    }\n    if (this.extendList) {\n        this.extendList = visitor.visitArray(this.extendList);\n    }\n    if (this.condition) {\n        this.condition = visitor.visit(this.condition);\n    }\n};\nSelector.prototype.createDerived = function(elements, extendList, evaldCondition) {\n    elements = this.getElements(elements);\n    var newSelector = new Selector(elements, extendList || this.extendList,\n        null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\n    newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\n    newSelector.mediaEmpty = this.mediaEmpty;\n    return newSelector;\n};\nSelector.prototype.getElements = function(els) {\n    if (typeof els === \"string\") {\n        this.parse.parseNode(\n            els, \n            [\"selector\"],\n            this._index, \n            this._fileInfo, \n            function(err, result) {\n                if (err) {\n                    throw new LessError({\n                        index: err.index,\n                        message: err.message\n                    }, this.parse.imports, this._fileInfo.filename);\n                }\n                els = result[0].elements;\n            });\n    }\n    return els;\n};\nSelector.prototype.createEmptySelectors = function() {\n    var el = new Element('', '&', this._index, this._fileInfo),\n        sels = [new Selector([el], null, null, this._index, this._fileInfo)];\n    sels[0].mediaEmpty = true;\n    return sels;\n};\nSelector.prototype.match = function (other) {\n    var elements = this.elements,\n        len = elements.length,\n        olen, i;\n\n    other = other.mixinElements();\n    olen = other.length;\n    if (olen === 0 || len < olen) {\n        return 0;\n    } else {\n        for (i = 0; i < olen; i++) {\n            if (elements[i].value !== other[i]) {\n                return 0;\n            }\n        }\n    }\n\n    return olen; // return number of matched elements\n};\nSelector.prototype.mixinElements = function() {\n    if (this.mixinElements_) {\n        return this.mixinElements_;\n    }\n\n    var elements = this.elements.map( function(v) {\n        return v.combinator.value + (v.value.value || v.value);\n    }).join(\"\").match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\n\n    if (elements) {\n        if (elements[0] === \"&\") {\n            elements.shift();\n        }\n    } else {\n        elements = [];\n    }\n\n    return (this.mixinElements_ = elements);\n};\nSelector.prototype.isJustParentSelector = function() {\n    return !this.mediaEmpty &&\n        this.elements.length === 1 &&\n        this.elements[0].value === '&' &&\n        (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\n};\nSelector.prototype.eval = function (context) {\n    var evaldCondition = this.condition && this.condition.eval(context),\n        elements = this.elements, extendList = this.extendList;\n\n    elements = elements && elements.map(function (e) { return e.eval(context); });\n    extendList = extendList && extendList.map(function(extend) { return extend.eval(context); });\n\n    return this.createDerived(elements, extendList, evaldCondition);\n};\nSelector.prototype.genCSS = function (context, output) {\n    var i, element;\n    if ((!context || !context.firstSelector) && this.elements[0].combinator.value === \"\") {\n        output.add(' ', this.fileInfo(), this.getIndex());\n    }\n    for (i = 0; i < this.elements.length; i++) {\n        element = this.elements[i];\n        element.genCSS(context, output);\n    }\n};\nSelector.prototype.getIsOutput = function() {\n    return this.evaldCondition;\n};\nmodule.exports = Selector;\n\n},{\"../less-error\":36,\"./element\":61,\"./node\":73}],80:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar UnicodeDescriptor = function (value) {\n    this.value = value;\n};\nUnicodeDescriptor.prototype = new Node();\nUnicodeDescriptor.prototype.type = \"UnicodeDescriptor\";\n\nmodule.exports = UnicodeDescriptor;\n\n},{\"./node\":73}],81:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    unitConversions = require(\"../data/unit-conversions\"),\n    utils = require(\"../utils\");\n\nvar Unit = function (numerator, denominator, backupUnit) {\n    this.numerator = numerator ? utils.copyArray(numerator).sort() : [];\n    this.denominator = denominator ? utils.copyArray(denominator).sort() : [];\n    if (backupUnit) {\n        this.backupUnit = backupUnit;\n    } else if (numerator && numerator.length) {\n        this.backupUnit = numerator[0];\n    }\n};\n\nUnit.prototype = new Node();\nUnit.prototype.type = \"Unit\";\nUnit.prototype.clone = function () {\n    return new Unit(utils.copyArray(this.numerator), utils.copyArray(this.denominator), this.backupUnit);\n};\nUnit.prototype.genCSS = function (context, output) {\n    // Dimension checks the unit is singular and throws an error if in strict math mode.\n    var strictUnits = context && context.strictUnits;\n    if (this.numerator.length === 1) {\n        output.add(this.numerator[0]); // the ideal situation\n    } else if (!strictUnits && this.backupUnit) {\n        output.add(this.backupUnit);\n    } else if (!strictUnits && this.denominator.length) {\n        output.add(this.denominator[0]);\n    }\n};\nUnit.prototype.toString = function () {\n    var i, returnStr = this.numerator.join(\"*\");\n    for (i = 0; i < this.denominator.length; i++) {\n        returnStr += \"/\" + this.denominator[i];\n    }\n    return returnStr;\n};\nUnit.prototype.compare = function (other) {\n    return this.is(other.toString()) ? 0 : undefined;\n};\nUnit.prototype.is = function (unitString) {\n    return this.toString().toUpperCase() === unitString.toUpperCase();\n};\nUnit.prototype.isLength = function () {\n    return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\n};\nUnit.prototype.isEmpty = function () {\n    return this.numerator.length === 0 && this.denominator.length === 0;\n};\nUnit.prototype.isSingular = function() {\n    return this.numerator.length <= 1 && this.denominator.length === 0;\n};\nUnit.prototype.map = function(callback) {\n    var i;\n\n    for (i = 0; i < this.numerator.length; i++) {\n        this.numerator[i] = callback(this.numerator[i], false);\n    }\n\n    for (i = 0; i < this.denominator.length; i++) {\n        this.denominator[i] = callback(this.denominator[i], true);\n    }\n};\nUnit.prototype.usedUnits = function() {\n    var group, result = {}, mapUnit, groupName;\n\n    mapUnit = function (atomicUnit) {\n        /* jshint loopfunc:true */\n        if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\n            result[groupName] = atomicUnit;\n        }\n\n        return atomicUnit;\n    };\n\n    for (groupName in unitConversions) {\n        if (unitConversions.hasOwnProperty(groupName)) {\n            group = unitConversions[groupName];\n\n            this.map(mapUnit);\n        }\n    }\n\n    return result;\n};\nUnit.prototype.cancel = function () {\n    var counter = {}, atomicUnit, i;\n\n    for (i = 0; i < this.numerator.length; i++) {\n        atomicUnit = this.numerator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\n    }\n\n    for (i = 0; i < this.denominator.length; i++) {\n        atomicUnit = this.denominator[i];\n        counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\n    }\n\n    this.numerator = [];\n    this.denominator = [];\n\n    for (atomicUnit in counter) {\n        if (counter.hasOwnProperty(atomicUnit)) {\n            var count = counter[atomicUnit];\n\n            if (count > 0) {\n                for (i = 0; i < count; i++) {\n                    this.numerator.push(atomicUnit);\n                }\n            } else if (count < 0) {\n                for (i = 0; i < -count; i++) {\n                    this.denominator.push(atomicUnit);\n                }\n            }\n        }\n    }\n\n    this.numerator.sort();\n    this.denominator.sort();\n};\nmodule.exports = Unit;\n\n},{\"../data/unit-conversions\":15,\"../utils\":86,\"./node\":73}],82:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar URL = function (val, index, currentFileInfo, isEvald) {\n    this.value = val;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.isEvald = isEvald;\n};\nURL.prototype = new Node();\nURL.prototype.type = \"Url\";\nURL.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nURL.prototype.genCSS = function (context, output) {\n    output.add(\"url(\");\n    this.value.genCSS(context, output);\n    output.add(\")\");\n};\nURL.prototype.eval = function (context) {\n    var val = this.value.eval(context),\n        rootpath;\n\n    if (!this.isEvald) {\n        // Add the base path if the URL is relative\n        rootpath = this.fileInfo() && this.fileInfo().rootpath;\n        if (rootpath &&\n            typeof val.value === \"string\" &&\n            context.isPathRelative(val.value)) {\n\n            if (!val.quote) {\n                rootpath = rootpath.replace(/[\\(\\)'\"\\s]/g, function(match) { return \"\\\\\" + match; });\n            }\n            val.value = rootpath + val.value;\n        }\n\n        val.value = context.normalizePath(val.value);\n\n        // Add url args if enabled\n        if (context.urlArgs) {\n            if (!val.value.match(/^\\s*data:/)) {\n                var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                var urlArgs = delimiter + context.urlArgs;\n                if (val.value.indexOf('#') !== -1) {\n                    val.value = val.value.replace('#', urlArgs + '#');\n                } else {\n                    val.value += urlArgs;\n                }\n            }\n        }\n    }\n\n    return new URL(val, this.getIndex(), this.fileInfo(), true);\n};\nmodule.exports = URL;\n\n},{\"./node\":73}],83:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Value = function (value) {\n    if (!value) {\n        throw new Error(\"Value requires an array argument\");\n    }\n    if (!Array.isArray(value)) {\n        this.value = [ value ];\n    }\n    else {\n        this.value = value;\n    }\n};\nValue.prototype = new Node();\nValue.prototype.type = \"Value\";\nValue.prototype.accept = function (visitor) {\n    if (this.value) {\n        this.value = visitor.visitArray(this.value);\n    }\n};\nValue.prototype.eval = function (context) {\n    if (this.value.length === 1) {\n        return this.value[0].eval(context);\n    } else {\n        return new Value(this.value.map(function (v) {\n            return v.eval(context);\n        }));\n    }\n};\nValue.prototype.genCSS = function (context, output) {\n    var i;\n    for (i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n        if (i + 1 < this.value.length) {\n            output.add((context && context.compress) ? ',' : ', ');\n        }\n    }\n};\nmodule.exports = Value;\n\n},{\"./node\":73}],84:[function(require,module,exports){\nvar Node = require(\"./node\"),\n    Variable = require(\"./variable\");\n\nvar VariableCall = function (variable) {\n    this.variable = variable;\n    this.allowRoot = true;\n};\nVariableCall.prototype = new Node();\nVariableCall.prototype.type = \"VariableCall\";\nVariableCall.prototype.eval = function (context) {\n    var detachedRuleset = new Variable(this.variable).eval(context);\n    return detachedRuleset.callEval(context);\n};\nmodule.exports = VariableCall;\n\n},{\"./node\":73,\"./variable\":85}],85:[function(require,module,exports){\nvar Node = require(\"./node\");\n\nvar Variable = function (name, index, currentFileInfo) {\n    this.name = name;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n};\nVariable.prototype = new Node();\nVariable.prototype.type = \"Variable\";\nVariable.prototype.eval = function (context) {\n    var variable, name = this.name;\n\n    if (name.indexOf('@@') === 0) {\n        name = '@' + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\n    }\n\n    if (this.evaluating) {\n        throw { type: 'Name',\n            message: \"Recursive variable definition for \" + name,\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n\n    this.evaluating = true;\n\n    variable = this.find(context.frames, function (frame) {\n        var v = frame.variable(name);\n        if (v) {\n            if (v.important) {\n                var importantScope = context.importantScope[context.importantScope.length - 1];\n                importantScope.important = v.important;\n            }\n            return v.value.eval(context);\n        }\n    });\n    if (variable) {\n        this.evaluating = false;\n        return variable;\n    } else {\n        throw { type: 'Name',\n            message: \"variable \" + name + \" is undefined\",\n            filename: this.fileInfo().filename,\n            index: this.getIndex() };\n    }\n};\nVariable.prototype.find = function (obj, fun) {\n    for (var i = 0, r; i < obj.length; i++) {\n        r = fun.call(obj, obj[i]);\n        if (r) { return r; }\n    }\n    return null;\n};\nmodule.exports = Variable;\n\n},{\"./node\":73}],86:[function(require,module,exports){\n/* jshint proto: true */\nmodule.exports = {\n    getLocation: function(index, inputStream) {\n        var n = index + 1,\n            line = null,\n            column = -1;\n\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\n            column++;\n        }\n\n        if (typeof index === 'number') {\n            line = (inputStream.slice(0, index).match(/\\n/g) || \"\").length;\n        }\n\n        return {\n            line: line,\n            column: column\n        };\n    },\n    copyArray: function(arr) {\n        var i, length = arr.length,\n            copy = new Array(length);\n        \n        for (i = 0; i < length; i++) {\n            copy[i] = arr[i];\n        }\n        return copy;\n    },\n    clone: function (obj) {\n        var cloned = {};\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    },\n    defaults: function(obj1, obj2) {\n        if (!obj2._defaults || obj2._defaults !== obj1) {\n            for (var prop in obj1) {\n                if (obj1.hasOwnProperty(prop)) {\n                    if (!obj2.hasOwnProperty(prop)) {\n                        obj2[prop] = obj1[prop];\n                    }\n                    else if (Array.isArray(obj1[prop])\n                        && Array.isArray(obj2[prop])) {\n\n                        obj1[prop].forEach(function(p) {\n                            if (obj2[prop].indexOf(p) === -1) {\n                                obj2[prop].push(p);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n        obj2._defaults = obj1;\n        return obj2;\n    },\n    merge: function(obj1, obj2) {\n        for (var prop in obj2) {\n            if (obj2.hasOwnProperty(prop)) {\n                obj1[prop] = obj2[prop];\n            }\n        }\n        return obj1;\n    }\n};\n\n},{}],87:[function(require,module,exports){\nvar tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\"),\n    logger = require(\"../logger\"),\n    utils = require(\"../utils\");\n\n/* jshint loopfunc:true */\n\nvar ExtendFinderVisitor = function() {\n    this._visitor = new Visitor(this);\n    this.contexts = [];\n    this.allExtendsStack = [[]];\n};\n\nExtendFinderVisitor.prototype = {\n    run: function (root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n\n        var i, j, extend, allSelectorsExtendList = [], extendList;\n\n        // get &:extend(.a); rules which apply to all selectors in this ruleset\n        var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n        for (i = 0; i < ruleCnt; i++) {\n            if (rulesetNode.rules[i] instanceof tree.Extend) {\n                allSelectorsExtendList.push(rules[i]);\n                rulesetNode.extendOnEveryPath = true;\n            }\n        }\n\n        // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n        var paths = rulesetNode.paths;\n        for (i = 0; i < paths.length; i++) {\n            var selectorPath = paths[i],\n                selector = selectorPath[selectorPath.length - 1],\n                selExtendList = selector.extendList;\n\n            extendList = selExtendList ? utils.copyArray(selExtendList).concat(allSelectorsExtendList)\n                                       : allSelectorsExtendList;\n\n            if (extendList) {\n                extendList = extendList.map(function(allSelectorsExtend) {\n                    return allSelectorsExtend.clone();\n                });\n            }\n\n            for (j = 0; j < extendList.length; j++) {\n                this.foundExtends = true;\n                extend = extendList[j];\n                extend.findSelfSelectors(selectorPath);\n                extend.ruleset = rulesetNode;\n                if (j === 0) { extend.firstExtendOnThisSelectorPath = true; }\n                this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n            }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        if (!rulesetNode.root) {\n            this.contexts.length = this.contexts.length - 1;\n        }\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        atRuleNode.allExtends = [];\n        this.allExtendsStack.push(atRuleNode.allExtends);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n};\n\nvar ProcessExtendsVisitor = function() {\n    this._visitor = new Visitor(this);\n};\n\nProcessExtendsVisitor.prototype = {\n    run: function(root) {\n        var extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n        if (!extendFinder.foundExtends) { return root; }\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n        var newRoot = this._visitor.visit(root);\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n    },\n    checkExtendsForNonMatched: function(extendList) {\n        var indices = this.extendIndices;\n        extendList.filter(function(extend) {\n            return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function(extend) {\n            var selector = \"_unknown_\";\n            try {\n                selector = extend.selector.toCSS({});\n            }\n            catch (_) {}\n\n            if (!indices[extend.index + ' ' + selector]) {\n                indices[extend.index + ' ' + selector] = true;\n                logger.warn(\"extend '\" + selector + \"' has no matches\");\n            }\n        });\n    },\n    doExtendChaining: function (extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n\n        var extendIndex, targetExtendIndex, matches, extendsToAdd = [], newSelector, extendVisitor = this, selectorPath,\n            extend, targetExtend, newExtend;\n\n        iterationCount = iterationCount || 0;\n\n        // loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n            for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n\n                extend = extendsList[extendIndex];\n                targetExtend = extendsListTarget[targetExtendIndex];\n\n                // look for circular references\n                if ( extend.parent_ids.indexOf( targetExtend.object_id ) >= 0 ) { continue; }\n\n                // find a match in the target extends self selector (the bit before :extend)\n                selectorPath = [targetExtend.selfSelectors[0]];\n                matches = extendVisitor.findMatch(extend, selectorPath);\n\n                if (matches.length) {\n                    extend.hasFoundMatches = true;\n\n                    // we found a match, so for each self selector..\n                    extend.selfSelectors.forEach(function(selfSelector) {\n                        var info = targetExtend.visibilityInfo();\n\n                        // process the extend as usual\n                        newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n\n                        // but now we create a new extend from it\n                        newExtend = new(tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\n                        newExtend.selfSelectors = newSelector;\n\n                        // add the extend onto the list of extends for that selector\n                        newSelector[newSelector.length - 1].extendList = [newExtend];\n\n                        // record that we need to add it.\n                        extendsToAdd.push(newExtend);\n                        newExtend.ruleset = targetExtend.ruleset;\n\n                        //remember its parents for circular references\n                        newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n\n                        // only process the selector once.. if we have :extend(.a,.b) then multiple\n                        // extends will look at the same selector path, so when extending\n                        // we know that any others will be duplicates in terms of what is added to the css\n                        if (targetExtend.firstExtendOnThisSelectorPath) {\n                            newExtend.firstExtendOnThisSelectorPath = true;\n                            targetExtend.ruleset.paths.push(newSelector);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (extendsToAdd.length) {\n            // try to detect circular references to stop a stack overflow.\n            // may no longer be needed.\n            this.extendChainCount++;\n            if (iterationCount > 100) {\n                var selectorOne = \"{unable to calculate}\";\n                var selectorTwo = \"{unable to calculate}\";\n                try {\n                    selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                    selectorTwo = extendsToAdd[0].selector.toCSS();\n                }\n                catch (e) {}\n                throw { message: \"extend circular reference detected. One of the circular extends is currently:\" +\n                    selectorOne + \":extend(\" + selectorTwo + \")\"};\n            }\n\n            // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n            // d extending e...\n            return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n            return extendsToAdd;\n        }\n    },\n    visitDeclaration: function (ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitSelector: function (selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n        var matches, pathIndex, extendIndex, allExtends = this.allExtendsStack[this.allExtendsStack.length - 1],\n            selectorsToAdd = [], extendVisitor = this, selectorPath;\n\n        // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n            for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                selectorPath = rulesetNode.paths[pathIndex];\n\n                // extending extends happens initially, before the main pass\n                if (rulesetNode.extendOnEveryPath) { continue; }\n                var extendList = selectorPath[selectorPath.length - 1].extendList;\n                if (extendList && extendList.length) { continue; }\n\n                matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n                if (matches.length) {\n                    allExtends[extendIndex].hasFoundMatches = true;\n\n                    allExtends[extendIndex].selfSelectors.forEach(function(selfSelector) {\n                        var extendedSelectors;\n                        extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                        selectorsToAdd.push(extendedSelectors);\n                    });\n                }\n            }\n        }\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    },\n    findMatch: function (extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        var haystackSelectorIndex, hackstackSelector, hackstackElementIndex, haystackElement,\n            targetCombinator, i,\n            extendVisitor = this,\n            needleElements = extend.selector.elements,\n            potentialMatches = [], potentialMatch, matches = [];\n\n        // loop through the haystack elements\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n            hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n            for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n\n                haystackElement = hackstackSelector.elements[hackstackElementIndex];\n\n                // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                    potentialMatches.push({pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                        initialCombinator: haystackElement.combinator});\n                }\n\n                for (i = 0; i < potentialMatches.length; i++) {\n                    potentialMatch = potentialMatches[i];\n\n                    // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                    // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                    // work out what the resulting combinator will be\n                    targetCombinator = haystackElement.combinator.value;\n                    if (targetCombinator === '' && hackstackElementIndex === 0) {\n                        targetCombinator = ' ';\n                    }\n\n                    // if we don't match, null our match to indicate failure\n                    if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                        (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                        potentialMatch = null;\n                    } else {\n                        potentialMatch.matched++;\n                    }\n\n                    // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                    if (potentialMatch) {\n                        potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                        if (potentialMatch.finished &&\n                            (!extend.allowAfter &&\n                                (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                            potentialMatch = null;\n                        }\n                    }\n                    // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                    if (potentialMatch) {\n                        if (potentialMatch.finished) {\n                            potentialMatch.length = needleElements.length;\n                            potentialMatch.endPathIndex = haystackSelectorIndex;\n                            potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                            potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                            matches.push(potentialMatch);\n                        }\n                    } else {\n                        potentialMatches.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return matches;\n    },\n    isElementValuesEqual: function(elementValue1, elementValue2) {\n        if (typeof elementValue1 === \"string\" || typeof elementValue2 === \"string\") {\n            return elementValue1 === elementValue2;\n        }\n        if (elementValue1 instanceof tree.Attribute) {\n            if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                return false;\n            }\n            if (!elementValue1.value || !elementValue2.value) {\n                if (elementValue1.value || elementValue2.value) {\n                    return false;\n                }\n                return true;\n            }\n            elementValue1 = elementValue1.value.value || elementValue1.value;\n            elementValue2 = elementValue2.value.value || elementValue2.value;\n            return elementValue1 === elementValue2;\n        }\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n        if (elementValue1 instanceof tree.Selector) {\n            if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                return false;\n            }\n            for (var i = 0; i  < elementValue1.elements.length; i++) {\n                if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                    if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                        return false;\n                    }\n                }\n                if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    },\n    extendSelector:function (matches, selectorPath, replacementSelector, isVisible) {\n\n        // for a set of matches, replace each match with the replacement selector\n\n        var currentSelectorPathIndex = 0,\n            currentSelectorPathElementIndex = 0,\n            path = [],\n            matchIndex,\n            selector,\n            firstElement,\n            match,\n            newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n            match = matches[matchIndex];\n            selector = selectorPath[match.pathIndex];\n            firstElement = new tree.Element(\n                match.initialCombinator,\n                replacementSelector.elements[0].value,\n                replacementSelector.elements[0].getIndex(),\n                replacementSelector.elements[0].fileInfo()\n            );\n\n            if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n\n            newElements = selector.elements\n                .slice(currentSelectorPathElementIndex, match.index)\n                .concat([firstElement])\n                .concat(replacementSelector.elements.slice(1));\n\n            if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                path[path.length - 1].elements =\n                    path[path.length - 1].elements.concat(newElements);\n            } else {\n                path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n\n                path.push(new tree.Selector(\n                    newElements\n                ));\n            }\n            currentSelectorPathIndex = match.endPathIndex;\n            currentSelectorPathElementIndex = match.endPathElementIndex;\n            if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1]\n                .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n            // we can re-use elements here, because the visibility property matters only for selectors\n            var derived = currentValue.createDerived(currentValue.elements);\n            if (isVisible) {\n                derived.ensureVisibility();\n            } else {\n                derived.ensureInvisibility();\n            }\n            return derived;\n        });\n        return path;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n};\n\nmodule.exports = ProcessExtendsVisitor;\n\n},{\"../logger\":37,\"../tree\":65,\"../utils\":86,\"./visitor\":94}],88:[function(require,module,exports){\nfunction ImportSequencer(onSequencerEmpty) {\n    this.imports = [];\n    this.variableImports = [];\n    this._onSequencerEmpty = onSequencerEmpty;\n    this._currentDepth = 0;\n}\n\nImportSequencer.prototype.addImport = function(callback) {\n    var importSequencer = this,\n        importItem = {\n            callback: callback,\n            args: null,\n            isReady: false\n        };\n    this.imports.push(importItem);\n    return function() {\n        importItem.args = Array.prototype.slice.call(arguments, 0);\n        importItem.isReady = true;\n        importSequencer.tryRun();\n    };\n};\n\nImportSequencer.prototype.addVariableImport = function(callback) {\n    this.variableImports.push(callback);\n};\n\nImportSequencer.prototype.tryRun = function() {\n    this._currentDepth++;\n    try {\n        while (true) {\n            while (this.imports.length > 0) {\n                var importItem = this.imports[0];\n                if (!importItem.isReady) {\n                    return;\n                }\n                this.imports = this.imports.slice(1);\n                importItem.callback.apply(null, importItem.args);\n            }\n            if (this.variableImports.length === 0) {\n                break;\n            }\n            var variableImport = this.variableImports[0];\n            this.variableImports = this.variableImports.slice(1);\n            variableImport();\n        }\n    } finally {\n        this._currentDepth--;\n    }\n    if (this._currentDepth === 0 && this._onSequencerEmpty) {\n        this._onSequencerEmpty();\n    }\n};\n\nmodule.exports = ImportSequencer;\n\n},{}],89:[function(require,module,exports){\nvar contexts = require(\"../contexts\"),\n    Visitor = require(\"./visitor\"),\n    ImportSequencer = require(\"./import-sequencer\"),\n    utils = require(\"../utils\");\n\nvar ImportVisitor = function(importer, finish) {\n\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\n\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            // process the contents\n            this._visitor.visit(root);\n        }\n        catch (e) {\n            this.error = e;\n        }\n\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function() {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        var inlineCSS = importNode.options.inline;\n\n        if (!importNode.css || inlineCSS) {\n\n            var context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n            var importParent = context.frames[0];\n\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function(importNode, context, importParent) {\n        var evaldImportNode,\n            inlineCSS = importNode.options.inline;\n\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch (e) {\n            if (!e.filename) { e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename; }\n            // attempt to eval properly and treat as css\n            importNode.css = true;\n            // if that fails, this error will be thrown\n            importNode.error = e;\n        }\n\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n\n            // try appending if we haven't determined if it is css or not\n            var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n            for (var i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n\n            var onImported = this.onImported.bind(this, evaldImportNode, context),\n                sequencedOnImported = this._sequencer.addImport(onImported);\n\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(),\n                evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex(); e.filename = importNode.fileInfo().filename;\n            }\n            this.error = e;\n        }\n\n        var importVisitor = this,\n            inlineCSS = importNode.options.inline,\n            isPlugin = importNode.options.isPlugin,\n            isOptional = importNode.options.optional,\n            duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = function() {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n\n                var oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n\n        importVisitor.importCount--;\n\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.unshift(declNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitDeclarationOut: function(declNode) {\n        if (declNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.shift();\n        }\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nmodule.exports = ImportVisitor;\n\n},{\"../contexts\":12,\"../utils\":86,\"./import-sequencer\":88,\"./visitor\":94}],90:[function(require,module,exports){\nvar visitors = {\n    Visitor: require(\"./visitor\"),\n    ImportVisitor: require('./import-visitor'),\n    MarkVisibleSelectorsVisitor: require(\"./set-tree-visibility-visitor\"),\n    ExtendVisitor: require('./extend-visitor'),\n    JoinSelectorVisitor: require('./join-selector-visitor'),\n    ToCSSVisitor: require('./to-css-visitor')\n};\n\nmodule.exports = visitors;\n\n},{\"./extend-visitor\":87,\"./import-visitor\":89,\"./join-selector-visitor\":91,\"./set-tree-visibility-visitor\":92,\"./to-css-visitor\":93,\"./visitor\":94}],91:[function(require,module,exports){\nvar Visitor = require(\"./visitor\");\n\nvar JoinSelectorVisitor = function() {\n    this.contexts = [[]];\n    this._visitor = new Visitor(this);\n};\n\nJoinSelectorVisitor.prototype = {\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1],\n            paths = [], selectors;\n\n        this.contexts.push(paths);\n\n        if (!rulesetNode.root) {\n            selectors = rulesetNode.selectors;\n            if (selectors) {\n                selectors = selectors.filter(function(selector) { return selector.getIsOutput(); });\n                rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\n                if (selectors) { rulesetNode.joinSelectors(paths, context, selectors); }\n            }\n            if (!selectors) { rulesetNode.rules = null; }\n            rulesetNode.paths = paths;\n        }\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\n        }\n    }\n};\n\nmodule.exports = JoinSelectorVisitor;\n\n},{\"./visitor\":94}],92:[function(require,module,exports){\nvar SetTreeVisibilityVisitor = function(visible) {\n    this.visible = visible;\n};\nSetTreeVisibilityVisitor.prototype.run = function(root) {\n    this.visit(root);\n};\nSetTreeVisibilityVisitor.prototype.visitArray = function(nodes) {\n    if (!nodes) {\n        return nodes;\n    }\n\n    var cnt = nodes.length, i;\n    for (i = 0; i < cnt; i++) {\n        this.visit(nodes[i]);\n    }\n    return nodes;\n};\nSetTreeVisibilityVisitor.prototype.visit = function(node) {\n    if (!node) {\n        return node;\n    }\n    if (node.constructor === Array) {\n        return this.visitArray(node);\n    }\n\n    if (!node.blocksVisibility || node.blocksVisibility()) {\n        return node;\n    }\n    if (this.visible) {\n        node.ensureVisibility();\n    } else {\n        node.ensureInvisibility();\n    }\n\n    node.accept(this);\n    return node;\n};\nmodule.exports = SetTreeVisibilityVisitor;\n},{}],93:[function(require,module,exports){\nvar tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\");\n\nvar CSSVisitorUtils = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n};\n\nCSSVisitorUtils.prototype = {\n    containsSilentNonBlockedChild: function(bodyRules) {\n        var rule;\n        if (!bodyRules) {\n            return false;\n        }\n        for (var r = 0; r < bodyRules.length; r++) {\n            rule = bodyRules[r];\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                // the atrule contains something that was referenced (likely by extend)\n                // therefore it needs to be shown in output too\n                return true;\n            }\n        }\n        return false;\n    },\n\n    keepOnlyVisibleChilds: function(owner) {\n        if (owner && owner.rules) {\n            owner.rules = owner.rules.filter(function(thing) {\n                return thing.isVisible();\n            });\n        }\n    },\n\n    isEmpty: function(owner) {\n        return (owner && owner.rules) \n            ? (owner.rules.length === 0) : true;\n    },\n\n    hasVisibleSelector: function(rulesetNode) {\n        return (rulesetNode && rulesetNode.paths)\n            ? (rulesetNode.paths.length > 0) : false;\n    },\n\n    resolveVisibility: function (node, originalRules) {\n        if (!node.blocksVisibility()) {\n            if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                return ;\n            }\n\n            return node;\n        }\n\n        var compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n            return ;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n\n        return node;\n    },\n\n    isVisibleRuleset: function(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n            return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n            return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n            return false;\n        }\n\n        return true;\n    }\n\n};\n\nvar ToCSSVisitor = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n};\n\nToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.blocksVisibility() || declNode.variable) {\n            return;\n        }\n        return declNode;\n    },\n\n    visitMixinDefinition: function (mixinNode, visitArgs) {\n        // mixin definitions do not get eval'd - this means they keep state\n        // so we have to clear that state here so it isn't used if toCSS is called twice\n        mixinNode.frames = [];\n    },\n\n    visitExtend: function (extendNode, visitArgs) {\n    },\n\n    visitComment: function (commentNode, visitArgs) {\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n            return;\n        }\n        return commentNode;\n    },\n\n    visitMedia: function(mediaNode, visitArgs) {\n        var originalRules = mediaNode.rules[0].rules;\n        mediaNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n\n    visitImport: function (importNode, visitArgs) {\n        if (importNode.blocksVisibility()) {\n            return ;\n        }\n        return importNode;\n    },\n\n    visitAtRule: function(atRuleNode, visitArgs) {\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            return this.visitAtRuleWithBody(atRuleNode, visitArgs);\n        } else {\n            return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\n        }\n    },\n\n    visitAnonymous: function(anonymousNode, visitArgs) {\n        if (!anonymousNode.blocksVisibility()) {\n            anonymousNode.accept(this._visitor);\n            return anonymousNode;\n        }\n    },\n\n    visitAtRuleWithBody: function(atRuleNode, visitArgs) {\n        // if there is only one nested ruleset and that one has no path, then it is\n        // just fake ruleset\n        function hasFakeRuleset(atRuleNode) {\n            var bodyRules = atRuleNode.rules;\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n        }\n        function getBodyRules(atRuleNode) {\n            var nodeRules = atRuleNode.rules;\n            if (hasFakeRuleset(atRuleNode)) {\n                return nodeRules[0].rules;\n            }\n\n            return nodeRules;\n        }\n        // it is still true that it is only one ruleset in array\n        // this is last such moment\n        // process childs\n        var originalRules = getBodyRules(atRuleNode);\n        atRuleNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        if (!this.utils.isEmpty(atRuleNode)) {\n            this._mergeRules(atRuleNode.rules[0].rules);\n        }\n\n        return this.utils.resolveVisibility(atRuleNode, originalRules);\n    },\n\n    visitAtRuleWithoutBody: function(atRuleNode, visitArgs) {\n        if (atRuleNode.blocksVisibility()) {\n            return;\n        }\n\n        if (atRuleNode.name === \"@charset\") {\n            // Only output the debug info together with subsequent @charset definitions\n            // a comment (or @media statement) before the actual @charset atrule would\n            // be considered illegal css as it has to be on the first line\n            if (this.charset) {\n                if (atRuleNode.debugInfo) {\n                    var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, \"\") + \" */\\n\");\n                    comment.debugInfo = atRuleNode.debugInfo;\n                    return this._visitor.visit(comment);\n                }\n                return;\n            }\n            this.charset = true;\n        }\n\n        return atRuleNode;\n    },\n\n    checkValidNodes: function(rules, isRoot) {\n        if (!rules) {\n            return;\n        }\n\n        for (var i = 0; i < rules.length; i++) {\n            var ruleNode = rules[i];\n            if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\n                throw { message: \"Properties must be inside selector blocks. They cannot be in the root\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode instanceof tree.Call) {\n                throw { message: \"Function '\" + ruleNode.name + \"' is undefined\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n            if (ruleNode.type && !ruleNode.allowRoot) {\n                throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                    index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename};\n            }\n        }\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        // at this point rulesets are nested into each other\n        var rule, rulesets = [];\n\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n        if (!rulesetNode.root) {\n            // remove invisible paths\n            this._compileRulesetPaths(rulesetNode);\n\n            // remove rulesets from this ruleset body and compile them separately\n            var nodeRules = rulesetNode.rules, nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n            for (var i = 0; i < nodeRuleCnt; ) {\n                rule = nodeRules[i];\n                if (rule && rule.rules) {\n                    // visit because we are moving them out from being a child\n                    rulesets.push(this._visitor.visit(rule));\n                    nodeRules.splice(i, 1);\n                    nodeRuleCnt--;\n                    continue;\n                }\n                i++;\n            }\n            // accept the visitor to remove rules and refactor itself\n            // then we can decide nogw whether we want it or not\n            // compile body\n            if (nodeRuleCnt > 0) {\n                rulesetNode.accept(this._visitor);\n            } else {\n                rulesetNode.rules = null;\n            }\n            visitArgs.visitDeeper = false;\n\n        } else { // if (! rulesetNode.root) {\n            rulesetNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n        }\n\n        if (rulesetNode.rules) {\n            this._mergeRules(rulesetNode.rules);\n            this._removeDuplicateRules(rulesetNode.rules);\n        }\n\n        // now decide whether we keep the ruleset\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\n            rulesetNode.ensureVisibility();\n            rulesets.splice(0, 0, rulesetNode);\n        }\n\n        if (rulesets.length === 1) {\n            return rulesets[0];\n        }\n        return rulesets;\n    },\n\n    _compileRulesetPaths: function(rulesetNode) {\n        if (rulesetNode.paths) {\n            rulesetNode.paths = rulesetNode.paths\n                .filter(function(p) {\n                    var i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new(tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n        }\n    },\n\n    _removeDuplicateRules: function(rules) {\n        if (!rules) { return; }\n\n        // remove duplicates\n        var ruleCache = {},\n            ruleList, rule, i;\n\n        for (i = rules.length - 1; i >= 0 ; i--) {\n            rule = rules[i];\n            if (rule instanceof tree.Declaration) {\n                if (!ruleCache[rule.name]) {\n                    ruleCache[rule.name] = rule;\n                } else {\n                    ruleList = ruleCache[rule.name];\n                    if (ruleList instanceof tree.Declaration) {\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                    }\n                    var ruleCSS = rule.toCSS(this._context);\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\n                        rules.splice(i, 1);\n                    } else {\n                        ruleList.push(ruleCSS);\n                    }\n                }\n            }\n        }\n    },\n\n    _mergeRules: function(rules) {\n        if (!rules) {\n            return; \n        }\n\n        var groups    = {},\n            groupsArr = [];\n        \n        for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i];\n            if (rule.merge) {\n                var key = rule.name;\n                groups[key] ? rules.splice(i--, 1) : \n                    groupsArr.push(groups[key] = []);\n                groups[key].push(rule);\n            }\n        }\n\n        groupsArr.forEach(function(group) {\n            if (group.length > 0) {\n                var result = group[0],\n                    space  = [],\n                    comma  = [new tree.Expression(space)];\n                group.forEach(function(rule) {\n                    if ((rule.merge === '+') && (space.length > 0)) {\n                        comma.push(new tree.Expression(space = []));\n                    }\n                    space.push(rule.value);\n                    result.important = result.important || rule.important;\n                });\n                result.value = new tree.Value(comma);\n            }\n        });\n    }\n};\n\nmodule.exports = ToCSSVisitor;\n\n},{\"../tree\":65,\"./visitor\":94}],94:[function(require,module,exports){\nvar tree = require(\"../tree\");\n\nvar _visitArgs = { visitDeeper: true },\n    _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key, child;\n    for (key in parent) { \n        /* eslint guard-for-in: 0 */\n        child = parent[key];\n        switch (typeof child) {\n            case \"function\":\n                // ignore bound functions directly on tree which do not have a prototype\n                // or aren't nodes\n                if (child.prototype && child.prototype.type) {\n                    child.prototype.typeIndex = ticker++;\n                }\n                break;\n            case \"object\":\n                ticker = indexNodeTypes(child, ticker);\n                break;\n        \n        }\n    }\n    return ticker;\n}\n\nvar Visitor = function(implementation) {\n    this._implementation = implementation;\n    this._visitFnCache = [];\n\n    if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n    }\n};\n\nVisitor.prototype = {\n    visit: function(node) {\n        if (!node) {\n            return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            return node;\n        }\n\n        var visitFnCache = this._visitFnCache,\n            impl = this._implementation,\n            aryIndx = nodeTypeIndex << 1,\n            outAryIndex = aryIndx | 1,\n            func = visitFnCache[aryIndx],\n            funcOut = visitFnCache[outAryIndex],\n            visitArgs = _visitArgs,\n            fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = \"visit\" + node.type;\n            func = impl[fnName] || _noop;\n            funcOut = impl[fnName + \"Out\"] || _noop;\n            visitFnCache[aryIndx] = func;\n            visitFnCache[outAryIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            var newNode = func.call(impl, node, visitArgs);\n            if (impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n            node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    },\n    visitArray: function(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        var cnt = nodes.length, i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        var out = [];\n        for (i = 0; i < cnt; i++) {\n            var evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    },\n    flatten: function(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        var cnt, i, item,\n            nestedCnt, j, nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n};\nmodule.exports = Visitor;\n\n},{\"../tree\":65}],95:[function(require,module,exports){\n\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n},{\"./raw\":96}],96:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],97:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":96}],98:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":97}],99:[function(require,module,exports){\n// should work in any browser without browserify\n\nif (typeof Promise.prototype.done !== 'function') {\n  Promise.prototype.done = function (onFulfilled, onRejected) {\n    var self = arguments.length ? this.then.apply(this, arguments) : this\n    self.then(null, function (err) {\n      setTimeout(function () {\n        throw err\n      }, 0)\n    })\n  }\n}\n},{}],100:[function(require,module,exports){\n// not \"use strict\" so we can declare global \"Promise\"\n\nvar asap = require('asap');\n\nif (typeof Promise === 'undefined') {\n  Promise = require('./lib/core.js')\n  require('./lib/es6-extensions.js')\n}\n\nrequire('./polyfill-done.js');\n\n},{\"./lib/core.js\":97,\"./lib/es6-extensions.js\":98,\"./polyfill-done.js\":99,\"asap\":95}]},{},[2])(2)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_less@3.0.4@less/dist/less.js\n// module id = 20\n// module chunks = 0","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst state = {\r\n    count: 10\r\n}\r\n\r\nconst getters = {\r\n    count(state) {\r\n        return state.count\r\n    },\r\n    oddCount(state){\r\n        return state.count%2 ? '不是偶数':'是偶数' \r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    increment(state) {\r\n        state.count++\r\n    },\r\n    clickOdd(state) {\r\n        state.count++\r\n    },\r\n    clickAsync(state) {\r\n        state.count++\r\n    }\r\n}\r\nconst actions = {\r\n    increment: ({ commit }) => {\r\n        commit('increment')\r\n    },\r\n    clickOdd: ({ commit, state }) => {  //state拿数据\r\n        if (state.count % 2 === 0) {\r\n            commit('clickOdd')\r\n        }\r\n    },\r\n    clickAsync: ({ commit }) => {\r\n        new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                commit('clickAsync')\r\n            }, 1000);\r\n        })\r\n    }\r\n}\r\n\r\nexport default new Vuex.Store({\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n})\n\n\n// WEBPACK FOOTER //\n// ./vuex/store.js"],"sourceRoot":""}